Index: src/main/java/org/example/togetjob/model/factory/NotificationFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.togetjob.model.factory;\n\nimport org.example.togetjob.config.ConfigUILoader;\nimport org.example.togetjob.exceptions.ConfigException;\nimport org.example.togetjob.pattern.CLINotification;\nimport org.example.togetjob.pattern.GUINotification;\nimport org.example.togetjob.pattern.Notification;\n\npublic class NotificationFactory {\n\n    private static final String CONFIG_FILE = \"ui.config.properties\";\n\n    private NotificationFactory() {\n        //To not create instance\n    }\n\n    public static Notification createNotification() throws ConfigException {\n        ConfigUILoader uiLoader;\n\n        try {\n            uiLoader = new ConfigUILoader(CONFIG_FILE);\n        } catch (ConfigException e) {\n            throw new ConfigException(\"Error during the configuration\", e);\n        }\n\n        String uiType = uiLoader.getProperty(\"ui.type\");\n\n        return switch (uiType.toLowerCase()) {\n            case \"cli\" -> new CLINotification();\n            case \"gui\" -> new GUINotification();\n            default -> throw new ConfigException(\"UI not found: \" + uiType);\n        };\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/model/factory/NotificationFactory.java b/src/main/java/org/example/togetjob/model/factory/NotificationFactory.java
--- a/src/main/java/org/example/togetjob/model/factory/NotificationFactory.java	(revision 106c9ef2df27a910aea41a498d8089f125c975cc)
+++ b/src/main/java/org/example/togetjob/model/factory/NotificationFactory.java	(date 1738767687022)
@@ -14,7 +14,7 @@
         //To not create instance
     }
 
-    public static Notification createNotification() throws ConfigException {
+    public static Notification createNotification(String message) throws ConfigException {
         ConfigUILoader uiLoader;
 
         try {
@@ -25,10 +25,15 @@
 
         String uiType = uiLoader.getProperty("ui.type");
 
-        return switch (uiType.toLowerCase()) {
+        Notification notification = switch (uiType.toLowerCase()) {
             case "cli" -> new CLINotification();
             case "gui" -> new GUINotification();
             default -> throw new ConfigException("UI not found: " + uiType);
         };
+
+        notification.setMessage(message);
+        return notification;
+
     }
+
 }
Index: src/main/java/org/example/togetjob/pattern/CLINotification.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.togetjob.pattern;\n\nimport org.example.togetjob.model.entity.JobApplication;\nimport org.example.togetjob.printer.Printer;\n\npublic class CLINotification implements Notification{\n    @Override\n    public void showNotification(JobApplication jobApplication) {\n        Printer.print(\"New Job Application from: \" + jobApplication.getStudent().getName());\n        Printer.print(\"You have a new application. Please review it at your convenience.\");\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/CLINotification.java b/src/main/java/org/example/togetjob/pattern/CLINotification.java
--- a/src/main/java/org/example/togetjob/pattern/CLINotification.java	(revision 106c9ef2df27a910aea41a498d8089f125c975cc)
+++ b/src/main/java/org/example/togetjob/pattern/CLINotification.java	(date 1738767839705)
@@ -1,12 +1,26 @@
 package org.example.togetjob.pattern;
 
+import org.example.togetjob.model.entity.InterviewScheduling;
 import org.example.togetjob.model.entity.JobApplication;
 import org.example.togetjob.printer.Printer;
 
 public class CLINotification implements Notification{
+
+    private String message;
+
     @Override
     public void showNotification(JobApplication jobApplication) {
         Printer.print("New Job Application from: " + jobApplication.getStudent().getName());
         Printer.print("You have a new application. Please review it at your convenience.");
     }
+
+    @Override
+    public void showInterviewNotification(InterviewScheduling interviewScheduling) {
+
+    }
+
+    @Override
+    public void setMessage(String message) {
+        this.message = message;
+    }
 }
Index: src/main/java/org/example/togetjob/pattern/GUINotification.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.togetjob.pattern;\n\nimport org.example.togetjob.model.entity.JobApplication;\n\npublic class GUINotification implements Notification{\n    @Override\n    public void showNotification(JobApplication jobApplication) {\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/GUINotification.java b/src/main/java/org/example/togetjob/pattern/GUINotification.java
--- a/src/main/java/org/example/togetjob/pattern/GUINotification.java	(revision 106c9ef2df27a910aea41a498d8089f125c975cc)
+++ b/src/main/java/org/example/togetjob/pattern/GUINotification.java	(date 1738767922256)
@@ -1,10 +1,25 @@
 package org.example.togetjob.pattern;
 
+import org.example.togetjob.model.entity.InterviewScheduling;
 import org.example.togetjob.model.entity.JobApplication;
+import org.example.togetjob.printer.Printer;
 
 public class GUINotification implements Notification{
+
+    private String message;
+
     @Override
     public void showNotification(JobApplication jobApplication) {
+        Printer.print("CLI Notification: You have successfully applied for the job.");
+    }
 
+    @Override
+    public void showInterviewNotification(InterviewScheduling interviewScheduling) {
+        Printer.print("CLI Notification: Your interview has been scheduled on \" + interviewScheduling.getInterviewDateTime() + \" at \" + interviewScheduling.getLocation()");
+    }
+
+    @Override
+    public void setMessage(String message) {
+        this.message = message;
     }
 }
Index: src/main/java/org/example/togetjob/pattern/Notification.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.togetjob.pattern;\n\nimport org.example.togetjob.model.entity.JobApplication;\n\npublic interface Notification {\n    void showNotification(JobApplication jobApplication);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/Notification.java b/src/main/java/org/example/togetjob/pattern/Notification.java
--- a/src/main/java/org/example/togetjob/pattern/Notification.java	(revision 106c9ef2df27a910aea41a498d8089f125c975cc)
+++ b/src/main/java/org/example/togetjob/pattern/Notification.java	(date 1738767839708)
@@ -1,7 +1,10 @@
 package org.example.togetjob.pattern;
 
+import org.example.togetjob.model.entity.InterviewScheduling;
 import org.example.togetjob.model.entity.JobApplication;
 
 public interface Notification {
     void showNotification(JobApplication jobApplication);
+    void showInterviewNotification(InterviewScheduling interviewScheduling);
+    void setMessage(String message);
 }
Index: src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.togetjob.pattern.adapter;\n\nimport org.example.togetjob.bean.*;\nimport org.example.togetjob.controller.student.SendAJobApplication;\nimport org.example.togetjob.exceptions.StudentNotFoundException;\nimport org.example.togetjob.model.dao.abstractobjects.JobAnnouncementDao;\nimport org.example.togetjob.model.dao.abstractobjects.JobApplicationDao;\nimport org.example.togetjob.model.dao.abstractobjects.StudentDao;\nimport org.example.togetjob.model.entity.InterviewScheduling;\nimport org.example.togetjob.model.entity.JobAnnouncement;\nimport org.example.togetjob.model.entity.Recruiter;\nimport org.example.togetjob.model.entity.Student;\n\nimport java.time.LocalDate;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Optional;\nimport java.util.Set;\nimport java.util.stream.Collectors;\n\npublic class ContactAJobCandidateAdapter implements ContactAJobCandidateController{\n\n    private final SendAJobApplication adaptee;\n    private final StudentDao studentDao;\n    private final JobAnnouncementDao jobAnnouncementDao;\n    private final JobApplicationDao jobApplicationDao;\n\n    public ContactAJobCandidateAdapter(SendAJobApplication adaptee, StudentDao studentDao, JobAnnouncementDao jobAnnouncementDao, JobApplicationDao jobApplicationDao) {\n        this.adaptee = adaptee;\n        this.studentDao = studentDao;\n        this.jobAnnouncementDao = jobAnnouncementDao;\n        this.jobApplicationDao = jobApplicationDao;\n    }\n\n\n    @Override\n    public List<StudentInfoBean> showFiltersCandidate(StudentInfoSearchBean studentInfoSearchBean, JobAnnouncementBean jobAnnouncementBean) {\n\n        List<JobApplicationBean> jobApplications = adaptee.getJobApplicationsForRecruiter(jobAnnouncementBean);\n\n        Set<String> studentUsernames = jobApplications.stream()\n                .map(JobApplicationBean::getStudentUsername)\n                .collect(Collectors.toSet());\n\n        List<Student> filteredStudents = studentDao.getAllStudents()\n                .stream()\n                .filter(student -> studentUsernames.contains(student.getUsername())) // Studenti che hanno applicato\n                .filter(student -> filterByDegrees(student, studentInfoSearchBean.getDegrees()))\n                .filter(student -> filterByCourses(student, studentInfoSearchBean.getCoursesAttended()))\n                .filter(student -> filterByCertifications(student, studentInfoSearchBean.getCertifications()))\n                .filter(student -> filterByWorkExperiences(student, studentInfoSearchBean.getWorkExperiences()))\n                .filter(student -> filterBySkills(student, studentInfoSearchBean.getSkills()))\n                .filter(student -> filterByAvailability(student, studentInfoSearchBean.getAvailability()))\n                .toList();\n\n        return filteredStudents.stream()\n                .map(this::convertToStudentInfoBean)\n                .toList();\n\n    }\n\n    @Override\n    public StudentInfoBean showCandidateDetails(StudentInfoBean studentInfoBean, JobAnnouncementBean jobAnnouncementBean) throws StudentNotFoundException {\n\n        String candidateUsername = studentInfoBean.getUsername();\n        List<JobApplicationBean> jobApplications = adaptee.getJobApplicationsForRecruiter(jobAnnouncementBean);\n\n        boolean hasApplied = jobApplications.stream()\n                .anyMatch(app -> app.getStudentUsername().equals(candidateUsername));\n\n        if (!hasApplied) {\n            throw new StudentNotFoundException(\"No job application found for candidate: \" + candidateUsername);\n        }\n\n        Optional<Student> studentOpt = studentDao.getStudent(candidateUsername);\n\n        if (studentOpt.isEmpty()) {\n            throw new StudentNotFoundException(\"Student not found for username: \" + candidateUsername);\n        }\n\n        return convertToStudentInfoBean(studentOpt.get());\n    }\n\n    @Override\n    public InterviewSchedulingBean showInterviewSchedulingForm(StudentInfoBean studentInfoBean, JobAnnouncementBean jobAnnouncementBean) {\n\n        InterviewSchedulingBean form = new InterviewSchedulingBean();\n\n        form.setStudentUsername(studentInfoBean.getUsername());\n        form.setJobTitle(jobAnnouncementBean.getJobTitle());\n        form.setCompanyName(jobAnnouncementBean.getCompanyName());\n\n        form.setInterviewDateTime(\"\");\n        form.setLocation(\"\");\n\n        return form;\n    }\n\n\n    @Override\n    public boolean sendInterviewInvitation(InterviewSchedulingBean interviewSchedulingBean) {\n\n        /*Recruiter recruiter = adaptee.getLoggedRecruiter();\n\n        Student student = studentDao.getStudent(interviewSchedulingBean.getStudentUsername())\n                .orElseThrow(() -> new IllegalArgumentException(\"Error: Student not found.\"));\n\n        JobAnnouncement jobAnnouncement = jobAnnouncementDao.getJobAnnouncement(interviewSchedulingBean.getJobTitle(), recruiter)\n                .orElseThrow(() -> new IllegalArgumentException(\"Error: Job Announcement not found.\"));\n\n        if (jobApplicationDao.getJobApplication(student, jobAnnouncement).isEmpty()) {\n            throw new IllegalArgumentException(\"Student not exists.\");\n        }\n\n        boolean interviewAlreadyScheduled = checkIfInterviewScheduled(interviewSchedulingBean.getStudentUsername());\n\n        if (interviewAlreadyScheduled) {\n            throw new IllegalArgumentException(\"Il colloquio per questo studente è già stato programmato.\");\n        }\n\n        InterviewScheduling interviewScheduling = InterviewSchedulingFactory.createInterviewScheduling(\n                recruiter, student, interviewSchedulingBean.getInterviewDateTime(), interviewSchedulingBean.getLocation(), jobAnnouncement\n        );\n\n        interviewSchedulingDao.saveInterviewScheduling(interviewScheduling);\n         */\n        return true;\n    }\n\n    /*private boolean checkIfInterviewScheduled(String studentUsername) {\n\n        List<InterviewSchedulingBean> scheduledInterviews = adaptee.getScheduledInterviewsForStudent(studentUsername);\n        return scheduledInterviews.stream().anyMatch(interview -> interview.getStudentUsername().equals(studentUsername));\n\n    }*/\n\n\n    private StudentInfoBean convertToStudentInfoBean(Student student) {\n\n        StudentInfoBean studentInfoBean = new StudentInfoBean();\n\n        studentInfoBean.setUsername(student.getUsername());\n        studentInfoBean.setDateOfBirth(student.getDateOfBirth() != null ? student.getDateOfBirth() : LocalDate.of(2000, 1, 1));\n        studentInfoBean.setPhoneNumber(student.getPhoneNumber() != null ? student.getPhoneNumber() : \"No Phone Provided\");\n        studentInfoBean.setDegrees(student.getDegrees() != null ? new ArrayList<>(student.getDegrees()) : new ArrayList<>());\n        studentInfoBean.setCourseAttended(student.getCourseAttended() != null ? new ArrayList<>(student.getCourseAttended()) : new ArrayList<>());\n        studentInfoBean.setCertifications(student.getCertifications() != null ? new ArrayList<>(student.getCertifications()) : new ArrayList<>());\n        studentInfoBean.setWorkExperiences(student.getWorkExperiences() != null ? new ArrayList<>(student.getWorkExperiences()) : new ArrayList<>());\n        studentInfoBean.setSkills(student.getSkills() != null ? new ArrayList<>(student.getSkills()) : new ArrayList<>());\n        studentInfoBean.setAvailability(student.getAvailability() != null ? student.getAvailability() : \"Not Specified\");\n        return studentInfoBean;\n\n    }\n\n\n    private boolean filterByDegrees(Student student, List<String> requiredDegrees) {\n        return requiredDegrees == null || requiredDegrees.isEmpty() ||\n                student.getDegrees().stream().anyMatch(requiredDegrees::contains);\n    }\n\n    private boolean filterByCourses(Student student, List<String> requiredCourses) {\n        return requiredCourses == null || requiredCourses.isEmpty() ||\n                student.getCourseAttended().stream().anyMatch(requiredCourses::contains);\n    }\n\n    private boolean filterByCertifications(Student student, List<String> requiredCertifications) {\n        return requiredCertifications == null || requiredCertifications.isEmpty() ||\n                student.getCertifications().stream().anyMatch(requiredCertifications::contains);\n    }\n\n    private boolean filterByWorkExperiences(Student student, List<String> requiredWorkExperiences) {\n        return requiredWorkExperiences == null || requiredWorkExperiences.isEmpty() ||\n                student.getWorkExperiences().stream().anyMatch(requiredWorkExperiences::contains);\n    }\n\n    private boolean filterBySkills(Student student, List<String> requiredSkills) {\n        return requiredSkills == null || requiredSkills.isEmpty() ||\n                student.getSkills().stream().anyMatch(requiredSkills::contains);\n    }\n\n    private boolean filterByAvailability(Student student, String requiredAvailability) {\n        return requiredAvailability == null || requiredAvailability.isEmpty() ||\n                student.getAvailability().equalsIgnoreCase(requiredAvailability);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateAdapter.java b/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateAdapter.java
--- a/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateAdapter.java	(revision 106c9ef2df27a910aea41a498d8089f125c975cc)
+++ b/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateAdapter.java	(date 1738767742933)
@@ -2,20 +2,23 @@
 
 import org.example.togetjob.bean.*;
 import org.example.togetjob.controller.student.SendAJobApplication;
+import org.example.togetjob.exceptions.ConfigException;
+import org.example.togetjob.exceptions.NotificationException;
 import org.example.togetjob.exceptions.StudentNotFoundException;
+import org.example.togetjob.model.dao.abstractobjects.InterviewSchedulingDao;
 import org.example.togetjob.model.dao.abstractobjects.JobAnnouncementDao;
 import org.example.togetjob.model.dao.abstractobjects.JobApplicationDao;
 import org.example.togetjob.model.dao.abstractobjects.StudentDao;
-import org.example.togetjob.model.entity.InterviewScheduling;
-import org.example.togetjob.model.entity.JobAnnouncement;
-import org.example.togetjob.model.entity.Recruiter;
-import org.example.togetjob.model.entity.Student;
+import org.example.togetjob.model.entity.*;
+import org.example.togetjob.model.factory.InterviewSchedulingFactory;
+import org.example.togetjob.model.factory.NotificationFactory;
+import org.example.togetjob.pattern.Notification;
+import org.example.togetjob.pattern.subject.JobApplicationCollectionSubject;
 
 import java.time.LocalDate;
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Optional;
-import java.util.Set;
+import java.time.LocalDateTime;
+import java.time.format.DateTimeFormatter;
+import java.util.*;
 import java.util.stream.Collectors;
 
 public class ContactAJobCandidateAdapter implements ContactAJobCandidateController{
@@ -24,14 +27,17 @@
     private final StudentDao studentDao;
     private final JobAnnouncementDao jobAnnouncementDao;
     private final JobApplicationDao jobApplicationDao;
+    private final InterviewSchedulingDao interviewSchedulingDao;
+    private final JobApplicationCollectionSubject jobApplicationCollectionSubject;
 
-    public ContactAJobCandidateAdapter(SendAJobApplication adaptee, StudentDao studentDao, JobAnnouncementDao jobAnnouncementDao, JobApplicationDao jobApplicationDao) {
+    public ContactAJobCandidateAdapter(SendAJobApplication adaptee, StudentDao studentDao, JobAnnouncementDao jobAnnouncementDao, JobApplicationDao jobApplicationDao, InterviewSchedulingDao interviewSchedulingDao, JobApplicationCollectionSubject jobApplicationCollectionSubject) {
         this.adaptee = adaptee;
         this.studentDao = studentDao;
         this.jobAnnouncementDao = jobAnnouncementDao;
         this.jobApplicationDao = jobApplicationDao;
+        this.interviewSchedulingDao = interviewSchedulingDao;
+        this.jobApplicationCollectionSubject = jobApplicationCollectionSubject;
     }
-
 
     @Override
     public List<StudentInfoBean> showFiltersCandidate(StudentInfoSearchBean studentInfoSearchBean, JobAnnouncementBean jobAnnouncementBean) {
@@ -100,7 +106,7 @@
     @Override
     public boolean sendInterviewInvitation(InterviewSchedulingBean interviewSchedulingBean) {
 
-        /*Recruiter recruiter = adaptee.getLoggedRecruiter();
+        Recruiter recruiter = adaptee.getLoggedRecruiter();
 
         Student student = studentDao.getStudent(interviewSchedulingBean.getStudentUsername())
                 .orElseThrow(() -> new IllegalArgumentException("Error: Student not found."));
@@ -109,30 +115,50 @@
                 .orElseThrow(() -> new IllegalArgumentException("Error: Job Announcement not found."));
 
         if (jobApplicationDao.getJobApplication(student, jobAnnouncement).isEmpty()) {
-            throw new IllegalArgumentException("Student not exists.");
+            throw new IllegalArgumentException("Error: Student has not applied for this job.");
         }
 
-        boolean interviewAlreadyScheduled = checkIfInterviewScheduled(interviewSchedulingBean.getStudentUsername());
-
-        if (interviewAlreadyScheduled) {
-            throw new IllegalArgumentException("Il colloquio per questo studente è già stato programmato.");
+        if (interviewSchedulingDao.getInterviewScheduling(student, jobAnnouncement).isPresent()) {
+            throw new IllegalArgumentException("Error: An interview for this student has already been scheduled.");
         }
+
+        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");
+        LocalDateTime interviewDateTime = LocalDateTime.parse(interviewSchedulingBean.getInterviewDateTime(), formatter);
 
         InterviewScheduling interviewScheduling = InterviewSchedulingFactory.createInterviewScheduling(
-                recruiter, student, interviewSchedulingBean.getInterviewDateTime(), interviewSchedulingBean.getLocation(), jobAnnouncement
+                interviewDateTime,
+                interviewSchedulingBean.getLocation(), student,
+                jobAnnouncement
         );
 
         interviewSchedulingDao.saveInterviewScheduling(interviewScheduling);
-         */
+        //observer adapter
+
+        try {
+            sendNotification(recruiter, "An interview has been scheduled for the student: " + student.getName());
+            sendNotification(student, "Your interview has been scheduled for: " + interviewDateTime);
+
+        } catch (NotificationException e) {
+            return false;
+        }
         return true;
     }
 
-    /*private boolean checkIfInterviewScheduled(String studentUsername) {
+    @Override
+    public void sendNotification(User user, String message) throws NotificationException {
+
+        try{
 
-        List<InterviewSchedulingBean> scheduledInterviews = adaptee.getScheduledInterviewsForStudent(studentUsername);
-        return scheduledInterviews.stream().anyMatch(interview -> interview.getStudentUsername().equals(studentUsername));
+            Notification notification = NotificationFactory.createNotification(message);
+            Observer observer = new UserObserver(user, notification);
 
-    }*/
+            jobApplicationCollectionSubject.attach(observer);
+            jobApplicationCollectionSubject.notify();
+
+        } catch (ConfigException e) {
+            throw new NotificationException("Error during the configuration", e);
+        }
+    }
 
 
     private StudentInfoBean convertToStudentInfoBean(Student student) {
Index: src/main/java/org/example/togetjob/pattern/observer/StudentObserver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/observer/StudentObserver.java b/src/main/java/org/example/togetjob/pattern/observer/StudentObserver.java
new file mode 100644
--- /dev/null	(date 1738767046239)
+++ b/src/main/java/org/example/togetjob/pattern/observer/StudentObserver.java	(date 1738767046239)
@@ -0,0 +1,10 @@
+package org.example.togetjob.pattern.observer;
+
+import org.example.togetjob.model.entity.JobApplication;
+
+public class StudentObserver implements NotificationObserver{
+    @Override
+    public void update(JobApplication jobApplication) {
+
+    }
+}
Index: src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.togetjob.pattern.adapter;\n\n// Class Target in Adapter\n\nimport org.example.togetjob.bean.InterviewSchedulingBean;\nimport org.example.togetjob.bean.JobAnnouncementBean;\nimport org.example.togetjob.bean.StudentInfoBean;\nimport org.example.togetjob.bean.StudentInfoSearchBean;\n\nimport java.util.List;\n\npublic interface ContactAJobCandidateController {\n\n    List<StudentInfoBean> showFiltersCandidate(StudentInfoSearchBean studentInfoSearchBean, JobAnnouncementBean jobAnnouncementBean);\n    StudentInfoBean showCandidateDetails(StudentInfoBean studentInfoBean, JobAnnouncementBean jobAnnouncementBean);\n    InterviewSchedulingBean showInterviewSchedulingForm(StudentInfoBean studentInfoBean, JobAnnouncementBean jobAnnouncementBean);\n    boolean sendInterviewInvitation(InterviewSchedulingBean interviewSchedulingBean);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateController.java b/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateController.java
--- a/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateController.java	(revision 106c9ef2df27a910aea41a498d8089f125c975cc)
+++ b/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateController.java	(date 1738766229870)
@@ -6,6 +6,8 @@
 import org.example.togetjob.bean.JobAnnouncementBean;
 import org.example.togetjob.bean.StudentInfoBean;
 import org.example.togetjob.bean.StudentInfoSearchBean;
+import org.example.togetjob.exceptions.NotificationException;
+import org.example.togetjob.model.entity.User;
 
 import java.util.List;
 
@@ -15,4 +17,5 @@
     StudentInfoBean showCandidateDetails(StudentInfoBean studentInfoBean, JobAnnouncementBean jobAnnouncementBean);
     InterviewSchedulingBean showInterviewSchedulingForm(StudentInfoBean studentInfoBean, JobAnnouncementBean jobAnnouncementBean);
     boolean sendInterviewInvitation(InterviewSchedulingBean interviewSchedulingBean);
+    void sendNotification(User user, String message) throws NotificationException;
 }
Index: src/main/java/org/example/togetjob/model/entity/Role.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.togetjob.model.entity;\n\npublic enum Role {\n\n    RECRUITER(\"recruiter\"),\n    STUDENT(\"student\");\n\n    private final String id;\n\n    private Role(String id){\n        this.id = id;\n    }\n\n    public String getId(){\n        return id;\n    }\n\n    public static Role fromId(String id){\n        for(Role role: Role.values()){\n            if(role.getId().equalsIgnoreCase(id)){\n                return role;\n            }\n        }\n        throw new IllegalArgumentException(\"Ruolo non valido per l'id: \" + id);\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/model/entity/Role.java b/src/main/java/org/example/togetjob/model/entity/Role.java
--- a/src/main/java/org/example/togetjob/model/entity/Role.java	(revision 106c9ef2df27a910aea41a498d8089f125c975cc)
+++ b/src/main/java/org/example/togetjob/model/entity/Role.java	(date 1738764275318)
@@ -21,7 +21,7 @@
                 return role;
             }
         }
-        throw new IllegalArgumentException("Ruolo non valido per l'id: " + id);
+        throw new IllegalArgumentException("Role not valid for id: " + id);
     }
 
 }
Index: src/main/java/org/example/togetjob/model/entity/Student.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.togetjob.model.entity;\n\nimport java.time.LocalDate;\nimport java.util.List;\n\npublic class Student extends User{\n\n    private LocalDate dateOfBirth;\n    private String phoneNumber;\n    private List<String> degrees;\n    private List<String> courseAttended;\n    private List<String> certifications;\n    private List<String> workExperiences;\n    private List<String> skills;\n    private String availability;\n    private List<JobApplication> jobApplications;\n\n    public Student(String username, String password, String name, String surname, String emailAddress, Role role) {\n        super(name, surname, username, emailAddress, password, role); // User\n    }\n\n    public Student(String name, String surname, String username, String emailAddress, String password, Role role, LocalDate dateOfBirth, String phoneNumber, List<String> degrees, List<String> courseAttended, List<String> certifications, List<String> workExperiences, List<String> skills, String availability, List<JobApplication> jobApplications) {\n        super(name, surname, username, emailAddress, password, role);\n        this.dateOfBirth = dateOfBirth;\n        this.phoneNumber = phoneNumber;\n        this.degrees = degrees;\n        this.courseAttended = courseAttended;\n        this.certifications = certifications;\n        this.workExperiences = workExperiences;\n        this.skills = skills;\n        this.availability = availability;\n        this.jobApplications = jobApplications;\n    }\n\n\n    public LocalDate getDateOfBirth() {\n        return dateOfBirth;\n    }\n\n    public String getPhoneNumber() {\n        return phoneNumber;\n    }\n\n    public List<String> getDegrees() {\n        return degrees;\n    }\n\n    public List<String> getCourseAttended() {\n        return courseAttended;\n    }\n\n    public List<String> getCertifications() {\n        return certifications;\n    }\n\n    public List<String> getWorkExperiences() {\n        return workExperiences;\n    }\n\n    public List<String> getSkills() {\n        return skills;\n    }\n\n    public String getAvailability() {\n        return availability;\n    }\n\n    public List<JobApplication> getJobApplications() {\n        return jobApplications;\n    }\n\n    @Override\n    public String toString() {\n        return \"Student{\" +\n                \"username='\" + getUsername() + '\\'' +\n                \", email='\" + getEmailAddress() + '\\'' +\n                \", degrees=\" + degrees +\n                '}';\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/model/entity/Student.java b/src/main/java/org/example/togetjob/model/entity/Student.java
--- a/src/main/java/org/example/togetjob/model/entity/Student.java	(revision 106c9ef2df27a910aea41a498d8089f125c975cc)
+++ b/src/main/java/org/example/togetjob/model/entity/Student.java	(date 1738765101468)
@@ -15,7 +15,7 @@
     private String availability;
     private List<JobApplication> jobApplications;
 
-    public Student(String username, String password, String name, String surname, String emailAddress, Role role) {
+    public Student(String name, String surname, String username, String emailAddress, String password, Role role) {
         super(name, surname, username, emailAddress, password, role); // User
     }
 
@@ -32,7 +32,6 @@
         this.jobApplications = jobApplications;
     }
 
-
     public LocalDate getDateOfBirth() {
         return dateOfBirth;
     }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"Merge remote-tracking branch 'origin/master'&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25__10_04__Changes_.xml\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25__10_32__Changes_.xml\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Enum\" />\n        <option value=\"FxmlFile\" />\n        <option value=\"Exception\" />\n        <option value=\"Interface\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"RESET_MODE\" value=\"HARD\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;GaiaMeola&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/GaiaMeola/toGetJob.git&quot;,\n    &quot;accountId&quot;: &quot;0a1af48d-9cff-4190-bde9-bd5096772376&quot;\n  }\n}</component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\n  <component name=\"ProjectId\" id=\"2nypPqqlu30o2C6FKHNbd1EkQVy\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;SONARLINT_PRECOMMIT_ANALYSIS&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/gaiameola/Desktop/ISPW/toGetJob/src/main/resources/org/example/togetjob&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources\" />\n      <recent name=\"$PROJECT_DIR$/src/main/resources/Configurations\" />\n      <recent name=\"$PROJECT_DIR$/target/classes/org/Configurations\" />\n    </key>\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\n      <recent name=\"org.example.togetjob\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"\" />\n      <created>1729955148511</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1729955148511</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1729955369659</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1729955369659</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663831106</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663831106</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663851839</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663851839</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883418179</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883418179</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883426699</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883426699</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883439672</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883439672</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086967897</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086967897</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086982811</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086982811</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Terzo Commit: Prova Database\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738142978544</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738142978544</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Quarto Commit: Connection prova\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152156784</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152156784</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Quarto Commit: Connection riuscita\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152567157</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152567157</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Quinto Commit: Fine Db\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738157742126</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738157742126</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Sesto Commit: Pattern State CLI prova\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738179850232</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738179850233</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"Settimo Commit: prova Caso d'uso Registrazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738233820826</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738233820826</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"Settimo Commit: prova Caso d'uso Registrazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738234210460</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738234210460</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"Settimo Commit: prova Caso d'uso Registrazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738234584655</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738234584655</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"Settimo Commit: Caso d'uso Registrazione e Login iniziati\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738255911165</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738255911165</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"Settimo Commit: Caso d'uso Registrazione e Login completati\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738320033356</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738320033356</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"Settimo Commit: Aggiunta di HomePageStudent, HomePageRecruiter in modalità cli\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738323917280</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738323917280</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"Settimo Commit: Inizio del caso d'uso Send A Job Application\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738534877519</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738534877519</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\"Settimo Commit: Inizio del caso d'uso Send A Job Application\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738591871116</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738591871116</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"Settimo Commit: Prima parte del caso d'uso funzionante\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738602095720</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738602095720</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"Settimo Commit: Prima parte del caso d'uso funzionante\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738602224321</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738602224321</updated>\n    </task>\n    <task id=\"LOCAL-00024\" summary=\"Settimo Commit: Prima parte del caso d'uso funzionante\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738602353802</created>\n      <option name=\"number\" value=\"00024\" />\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738602353802</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"25\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Primo Commit\" />\n    <MESSAGE value=\"Secondo Commit: bozza Abstract Factory\" />\n    <MESSAGE value=\"Secondo Commit: Abstract Factory + Singleton completo\" />\n    <MESSAGE value=\"Terzo Commit: Aggiunta Entity\" />\n    <MESSAGE value=\"Terzo Commit: Prova Database\" />\n    <MESSAGE value=\"Quarto Commit: Connection prova\" />\n    <MESSAGE value=\"Quarto Commit: Connection riuscita\" />\n    <MESSAGE value=\"Quinto Commit: Fine Db\" />\n    <MESSAGE value=\"Sesto Commit: Pattern State CLI prova\" />\n    <MESSAGE value=\"Settimo Commit: prova Caso d'uso Registrazione\" />\n    <MESSAGE value=\"Settimo Commit: Caso d'uso Registrazione e Login iniziati\" />\n    <MESSAGE value=\"Settimo Commit: Caso d'uso Registrazione e Login completati\" />\n    <MESSAGE value=\"Settimo Commit: Aggiunta di HomePageStudent, HomePageRecruiter in modalità cli\" />\n    <MESSAGE value=\"Settimo Commit: Inizio del caso d'uso Send A Job Application\" />\n    <MESSAGE value=\"Settimo Commit: Prima parte del caso d'uso funzionante\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Settimo Commit: Prima parte del caso d'uso funzionante\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\n          <option name=\"timeStamp\" value=\"14\" />\n        </breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/main/java/org/example/togetjob/view/cli/concretestate/RegisterState.java</url>\n          <line>63</line>\n          <option name=\"timeStamp\" value=\"25\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/main/java/org/example/togetjob/view/cli/concretestate/RegisterState.java</url>\n          <line>68</line>\n          <option name=\"timeStamp\" value=\"26\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 106c9ef2df27a910aea41a498d8089f125c975cc)
+++ b/.idea/workspace.xml	(date 1738767687057)
@@ -4,10 +4,18 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Merge remote-tracking branch 'origin/master'&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml">
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25__10_04__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25__10_32__Changes_.xml" beforeDir="false" />
+    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Printer">
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/observer/StudentObserver.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/entity/Recruiter.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/entity/Recruiter.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/entity/Role.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/entity/Role.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/entity/Student.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/entity/Student.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/factory/NotificationFactory.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/factory/NotificationFactory.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/CLINotification.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/CLINotification.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/GUINotification.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/GUINotification.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/Notification.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/Notification.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateAdapter.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateAdapter.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateController.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -288,7 +296,15 @@
       <option name="project" value="LOCAL" />
       <updated>1738602353802</updated>
     </task>
-    <option name="localTasksCounter" value="25" />
+    <task id="LOCAL-00025" summary="Printer">
+      <option name="closed" value="true" />
+      <created>1738753793398</created>
+      <option name="number" value="00025" />
+      <option name="presentableId" value="LOCAL-00025" />
+      <option name="project" value="LOCAL" />
+      <updated>1738753793398</updated>
+    </task>
+    <option name="localTasksCounter" value="26" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -318,7 +334,8 @@
     <MESSAGE value="Settimo Commit: Aggiunta di HomePageStudent, HomePageRecruiter in modalità cli" />
     <MESSAGE value="Settimo Commit: Inizio del caso d'uso Send A Job Application" />
     <MESSAGE value="Settimo Commit: Prima parte del caso d'uso funzionante" />
-    <option name="LAST_COMMIT_MESSAGE" value="Settimo Commit: Prima parte del caso d'uso funzionante" />
+    <MESSAGE value="Printer" />
+    <option name="LAST_COMMIT_MESSAGE" value="Printer" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
Index: src/main/java/org/example/togetjob/model/entity/Recruiter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.togetjob.model.entity;\n\nimport java.util.List;\n\npublic class Recruiter extends User {\n\n    private List<String> companies;\n\n    //User\n    public Recruiter(String username, String password, String name, String surname, String emailAddress, Role role) {\n        super(name, surname, username, emailAddress, password, role); // User\n    }\n\n    public Recruiter(String name, String surname, String username, String emailAddress, String password, Role role, List<String> companies) {\n        super(name, surname, username, emailAddress, password, role);\n        this.companies = companies;\n    }\n\n    public List<String> getCompanies() {\n        return companies;\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/model/entity/Recruiter.java b/src/main/java/org/example/togetjob/model/entity/Recruiter.java
--- a/src/main/java/org/example/togetjob/model/entity/Recruiter.java	(revision 106c9ef2df27a910aea41a498d8089f125c975cc)
+++ b/src/main/java/org/example/togetjob/model/entity/Recruiter.java	(date 1738764247986)
@@ -7,7 +7,7 @@
     private List<String> companies;
 
     //User
-    public Recruiter(String username, String password, String name, String surname, String emailAddress, Role role) {
+    public Recruiter(String name, String surname, String username, String emailAddress, String password, Role role) {
         super(name, surname, username, emailAddress, password, role); // User
     }
 
