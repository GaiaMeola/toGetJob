Index: src/main/java/org/example/togetjob/pattern/CLINotification.java
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/CLINotification.java b/src/main/java/org/example/togetjob/pattern/CLINotification.java
deleted file mode 100644
--- a/src/main/java/org/example/togetjob/pattern/CLINotification.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ /dev/null	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
@@ -1,30 +0,0 @@
-package org.example.togetjob.pattern;
-
-import org.example.togetjob.model.entity.InterviewScheduling;
-import org.example.togetjob.model.entity.JobApplication;
-import org.example.togetjob.printer.Printer;
-
-public class CLINotification implements Notification{
-
-   private String message;
-
-    @Override
-    public void showJobApplicationNotification(JobApplication jobApplication) {
-        Printer.print("New Job Application from: " + jobApplication.getStudent().obtainName());
-        Printer.print("You have a new application. Please review it at your convenience.");
-    }
-
-    @Override
-    public void showInterviewNotification(InterviewScheduling interviewScheduling) {
-        Printer.print("CLI: Interview scheduled for student: " + interviewScheduling.getCandidate().obtainName());
-    }
-
-    @Override
-    public void setMessage(String message) {
-        this.message = message;
-    }
-
-    public String getMessage() {
-        return message;
-    }
-}
Index: src/main/java/org/example/togetjob/pattern/subject/JobApplicationCollectionSubjectRecruiter.java
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/subject/JobApplicationCollectionSubjectRecruiter.java b/src/main/java/org/example/togetjob/pattern/subject/JobApplicationCollectionSubjectRecruiter.java
deleted file mode 100644
--- a/src/main/java/org/example/togetjob/pattern/subject/JobApplicationCollectionSubjectRecruiter.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ /dev/null	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
@@ -1,44 +0,0 @@
-package org.example.togetjob.pattern.subject;
-
-import org.example.togetjob.model.entity.JobApplication;
-import org.example.togetjob.pattern.observer.RecruiterNotificationObserver;
-
-import java.util.ArrayList;
-import java.util.List;
-
-public class JobApplicationCollectionSubjectRecruiter implements SubjectRecruiter {
-
-    private final  List<RecruiterNotificationObserver> observers = new ArrayList<>();
-    private final  List<JobApplication> jobApplications = new ArrayList<>();
-
-    @Override
-    public void attach(RecruiterNotificationObserver observer) {
-        observers.add(observer);
-    }
-
-    @Override
-    public void detach(RecruiterNotificationObserver observer) {
-        observers.remove(observer);
-    }
-
-    @Override
-    public void notify(JobApplication jobApplication) {
-        for (RecruiterNotificationObserver observer: observers){
-            observer.update(jobApplication);
-        }
-    }
-
-    public void addJobApplication(JobApplication jobApplication){
-        jobApplications.add(jobApplication);
-        notify(jobApplication);
-    }
-
-    public List<JobApplication> getJobApplications(){
-        return jobApplications;
-    }
-
-    public void removeJobApplication(JobApplication jobApplication) {
-        jobApplications.remove(jobApplication);
-    }
-}
-
Index: src/main/java/org/example/togetjob/pattern/subject/SubjectRecruiter.java
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/subject/SubjectRecruiter.java b/src/main/java/org/example/togetjob/pattern/subject/SubjectRecruiter.java
deleted file mode 100644
--- a/src/main/java/org/example/togetjob/pattern/subject/SubjectRecruiter.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ /dev/null	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
@@ -1,12 +0,0 @@
-package org.example.togetjob.pattern.subject;
-
-import org.example.togetjob.model.entity.JobApplication;
-import org.example.togetjob.pattern.observer.RecruiterNotificationObserver;
-
-public interface SubjectRecruiter {
-
-    void attach(RecruiterNotificationObserver observer);
-    void detach(RecruiterNotificationObserver observer);
-    void notify(JobApplication jobApplication);
-
-}
Index: src/main/java/org/example/togetjob/pattern/GUINotification.java
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/GUINotification.java b/src/main/java/org/example/togetjob/pattern/GUINotification.java
deleted file mode 100644
--- a/src/main/java/org/example/togetjob/pattern/GUINotification.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ /dev/null	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
@@ -1,30 +0,0 @@
-package org.example.togetjob.pattern;
-
-import org.example.togetjob.model.entity.InterviewScheduling;
-import org.example.togetjob.model.entity.JobApplication;
-import org.example.togetjob.printer.Printer;
-
-public class GUINotification implements Notification{
-
-    private String message;
-
-    @Override
-    public void showJobApplicationNotification(JobApplication jobApplication) {
-        Printer.print("GUI Notification: You have successfully applied for the job.");
-    }
-
-    @Override
-    public void showInterviewNotification(InterviewScheduling interviewScheduling) {
-        Printer.print("GUI Notification: Your interview has been scheduled on \" + interviewScheduling.getInterviewDateTime() + \" at \" + interviewScheduling.getLocation()");
-    }
-
-    @Override
-    public void setMessage(String message) {
-        this.message = message;
-    }
-
-    public String getMessage() {
-        return message;
-    }
-
-}
Index: src/main/java/org/example/togetjob/pattern/subject/SubjectStudent.java
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/subject/SubjectStudent.java b/src/main/java/org/example/togetjob/pattern/subject/SubjectStudent.java
deleted file mode 100644
--- a/src/main/java/org/example/togetjob/pattern/subject/SubjectStudent.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ /dev/null	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
@@ -1,12 +0,0 @@
-package org.example.togetjob.pattern.subject;
-
-import org.example.togetjob.model.entity.InterviewScheduling;
-import org.example.togetjob.pattern.observer.StudentObserverStudent;
-
-public interface SubjectStudent {
-
-    void attach(StudentObserverStudent observer);
-    void detach(StudentObserverStudent observer);
-    void notify(InterviewScheduling interviewScheduling);
-
-}
Index: src/main/java/org/example/togetjob/pattern/observer/StudentNotificationObserver.java
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/observer/StudentNotificationObserver.java b/src/main/java/org/example/togetjob/pattern/observer/StudentNotificationObserver.java
deleted file mode 100644
--- a/src/main/java/org/example/togetjob/pattern/observer/StudentNotificationObserver.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ /dev/null	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
@@ -1,7 +0,0 @@
-package org.example.togetjob.pattern.observer;
-
-import org.example.togetjob.model.entity.InterviewScheduling;
-
-public interface StudentNotificationObserver {
-    void update(InterviewScheduling interviewScheduling) ;
-}
Index: src/main/java/org/example/togetjob/pattern/subject/SchedulingInterviewCollectionSubjectRecruiter.java
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/subject/SchedulingInterviewCollectionSubjectRecruiter.java b/src/main/java/org/example/togetjob/pattern/subject/SchedulingInterviewCollectionSubjectRecruiter.java
deleted file mode 100644
--- a/src/main/java/org/example/togetjob/pattern/subject/SchedulingInterviewCollectionSubjectRecruiter.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ /dev/null	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
@@ -1,50 +0,0 @@
-package org.example.togetjob.pattern.subject;
-
-import org.example.togetjob.model.entity.InterviewScheduling;
-import org.example.togetjob.model.entity.Student;
-import org.example.togetjob.pattern.observer.StudentNotificationObserver;
-import org.example.togetjob.pattern.observer.StudentObserverStudent;
-
-import java.util.HashMap;
-import java.util.Map;
-
-public class SchedulingInterviewCollectionSubjectRecruiter implements SubjectStudent {
-
-    private final Map<Student, StudentObserverStudent> studentObservers = new HashMap<>();
-    private final Map<Student, InterviewScheduling> studentInterviews = new HashMap<>();
-
-
-    @Override
-    public void attach(StudentObserverStudent observer) {
-        studentObservers.put(observer.getStudent(), observer);
-    }
-
-    @Override
-    public void detach(StudentObserverStudent observer) {
-        studentObservers.remove(observer.getStudent());
-    }
-
-    @Override
-    public void notify(InterviewScheduling interviewScheduling) {
-        Student student = interviewScheduling.getCandidate();
-        StudentNotificationObserver observer = studentObservers.get(student);
-        if (observer != null) {
-            observer.update(interviewScheduling);
-        }
-    }
-
-    public void addInterviewScheduling(InterviewScheduling interviewScheduling) {
-        Student student = interviewScheduling.getCandidate();
-        studentInterviews.put(student, interviewScheduling);
-        notify(interviewScheduling);
-    }
-
-    public InterviewScheduling getInterviewScheduling(Student student) {
-        return studentInterviews.get(student);
-    }
-
-    public void removeInterviewScheduling(InterviewScheduling interviewScheduling) {
-        Student student = interviewScheduling.getCandidate();
-        studentInterviews.remove(student);
-    }
-}
Index: src/main/java/org/example/togetjob/pattern/observer/RecruiterObserverStudent.java
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/observer/RecruiterObserverStudent.java b/src/main/java/org/example/togetjob/pattern/observer/RecruiterObserverStudent.java
deleted file mode 100644
--- a/src/main/java/org/example/togetjob/pattern/observer/RecruiterObserverStudent.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ /dev/null	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
@@ -1,30 +0,0 @@
-package org.example.togetjob.pattern.observer;
-
-import org.example.togetjob.model.entity.JobApplication;
-import org.example.togetjob.model.entity.Recruiter;
-import org.example.togetjob.pattern.Notification;
-
-public class RecruiterObserverStudent implements RecruiterNotificationObserver {
-
-    private final Recruiter recruiter; //who published the job announcement or someone who collaborates
-    private Notification notification;
-
-    public RecruiterObserverStudent(Recruiter recruiter){
-        this.recruiter = recruiter;
-    }
-
-    public RecruiterObserverStudent(Recruiter recruiter, Notification notification) {
-        this.recruiter = recruiter;
-        this.notification = notification;
-    }
-
-    @Override
-    public void update(JobApplication jobApplication){
-        notification.showJobApplicationNotification(jobApplication);
-    }
-
-    public Recruiter getRecruiter(){
-        return  this.recruiter; 
-    }
-    
-}
Index: src/main/resources/org/example/togetjob/RecruiterViewDetailsJobAnnouncement.fxml
===================================================================
diff --git a/src/main/resources/org/example/togetjob/RecruiterViewDetailsJobAnnouncement.fxml b/src/main/resources/org/example/togetjob/RecruiterViewDetailsJobAnnouncement.fxml
deleted file mode 100644
--- a/src/main/resources/org/example/togetjob/RecruiterViewDetailsJobAnnouncement.fxml	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ /dev/null	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
@@ -1,118 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.geometry.Rectangle2D?>
-<?import javafx.scene.control.Button?>
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.control.TextField?>
-<?import javafx.scene.image.Image?>
-<?import javafx.scene.image.ImageView?>
-<?import javafx.scene.layout.AnchorPane?>
-<?import javafx.scene.text.Font?>
-
-<AnchorPane prefHeight="406.0" prefWidth="474.0" style="-fx-background-color: linear-gradient(from 0% 0% to 0% 100%, rgba(255,255,255,1) 85%, rgba(240,248,255,0.8) 95%, rgba(220,240,255,0.7) 100%); -fx-border-color: lightgray;" xmlns="http://javafx.com/javafx/23.0.1" xmlns:fx="http://javafx.com/fxml/1">
-   <children>
-      <Label layoutX="91.0" style="-fx-text-fill: #b3d9ff;" textAlignment="JUSTIFY">
-         <font>
-            <Font name="AppleGothic Regular" size="36.0" />
-         </font>
-      </Label>
-      <Label layoutX="13.0" layoutY="130.0" style="-fx-text-fill: #1D3557;" text="Role :">
-         <font>
-            <Font name="AppleGothic Regular" size="14.0" />
-         </font>
-      </Label>
-      <Label layoutX="13.0" layoutY="200.0" style="-fx-text-fill: #1D3557;" text="Working hours :">
-         <font>
-            <Font name="AppleGothic Regular" size="14.0" />
-         </font>
-      </Label>
-      <Label layoutX="13.0" layoutY="60.0" style="-fx-text-fill: #1D3557;" text="Job title :">
-         <font>
-            <Font name="AppleGothic Regular" size="14.0" />
-         </font>
-      </Label>
-      <Label layoutX="13.0" layoutY="95.0" style="-fx-text-fill: #1D3557;" text="Job type :">
-         <font>
-            <Font name="AppleGothic Regular" size="14.0" />
-         </font>
-      </Label>
-      <Label layoutX="13.0" layoutY="235.0" style="-fx-text-fill: #1D3557;" text="Company name :">
-         <font>
-            <Font name="AppleGothic Regular" size="14.0" />
-         </font>
-      </Label>
-      <Label layoutX="13.0" layoutY="270.0" style="-fx-text-fill: #1D3557;" text="Salary :">
-         <font>
-            <Font name="AppleGothic Regular" size="14.0" />
-         </font>
-      </Label>
-      <Label layoutX="13.0" layoutY="165.0" style="-fx-text-fill: #1D3557;" text="Location :">
-         <font>
-            <Font name="AppleGothic Regular" size="14.0" />
-         </font>
-      </Label>
-      <TextField layoutX="79.0" layoutY="60.0" prefHeight="26.0" prefWidth="90.0" promptText=" " style="-fx-border-radius: 5;">
-         <font>
-            <Font name="AppleGothic Regular" size="12.0" />
-         </font>
-      </TextField>
-      <TextField layoutX="86.0" layoutY="95.0" prefHeight="26.0" prefWidth="100.0" style="-fx-border-radius: 5;">
-         <font>
-            <Font name="AppleGothic Regular" size="12.0" />
-         </font>
-      </TextField>
-      <TextField layoutX="57.0" layoutY="130.0" prefHeight="26.0" prefWidth="67.0" style="-fx-border-radius: 5;">
-         <font>
-            <Font name="AppleGothic Regular" size="12.0" />
-         </font>
-      </TextField>
-      <TextField layoutX="84.0" layoutY="165.0" prefHeight="26.0" prefWidth="93.0" style="-fx-border-radius: 5;">
-         <font>
-            <Font name="AppleGothic Regular" size="12.0" />
-         </font>
-      </TextField>
-      <TextField layoutX="122.0" layoutY="200.0" prefHeight="26.0" prefWidth="124.0" style="-fx-border-radius: 5;">
-         <font>
-            <Font name="AppleGothic Regular" size="12.0" />
-         </font>
-      </TextField>
-      <TextField layoutX="131.0" layoutY="235.0" prefHeight="26.0" prefWidth="140.0" style="-fx-border-radius: 5;">
-         <font>
-            <Font name="AppleGothic Regular" size="12.0" />
-         </font>
-      </TextField>
-      <TextField layoutX="70.0" layoutY="270.0" prefHeight="26.0" prefWidth="80.0" style="-fx-border-radius: 5;">
-         <font>
-            <Font name="AppleGothic Regular" size="12.0" />
-         </font>
-      </TextField>
-      <Button layoutX="-8.0" layoutY="5.0" mnemonicParsing="false" prefHeight="41.0" prefWidth="58.0" style="-fx-background-color: trasparent;">
-         <font>
-            <Font name="AppleGothic Regular" size="14.0" />
-         </font>
-      </Button>
-      <ImageView fitHeight="85.0" fitWidth="111.0" layoutX="170.0" layoutY="-16.0" pickOnBounds="true" preserveRatio="true" y="-7.0">
-         <image>
-            <Image url="@logo-removebg-preview.png" />
-         </image>
-         <viewport>
-            <Rectangle2D minY="-10.0" />
-         </viewport>
-      </ImageView>
-      <ImageView fitHeight="30.0" fitWidth="30.0" layoutX="10.0" layoutY="10.0" pickOnBounds="true" preserveRatio="true">
-         <image>
-            <Image url="@back-158491_1920.png" />
-         </image>
-      </ImageView>
-      <Label layoutX="13.0" layoutY="305.0" style="-fx-text-fill: #1D3557;" text="Description :">
-         <font>
-            <Font name="AppleGothic Regular" size="14.0" />
-         </font>
-      </Label>
-      <TextField alignment="TOP_LEFT" layoutX="99.0" layoutY="305.0" prefHeight="60.0" prefWidth="353.0" style="-fx-border-radius: 5;">
-         <font>
-            <Font name="AppleGothic Regular" size="12.0" />
-         </font>
-      </TextField>
-   </children>
-</AnchorPane>
Index: src/main/java/org/example/togetjob/pattern/observer/StudentObserverStudent.java
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/observer/StudentObserverStudent.java b/src/main/java/org/example/togetjob/pattern/observer/StudentObserverStudent.java
deleted file mode 100644
--- a/src/main/java/org/example/togetjob/pattern/observer/StudentObserverStudent.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ /dev/null	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
@@ -1,27 +0,0 @@
-package org.example.togetjob.pattern.observer;
-
-import org.example.togetjob.model.entity.InterviewScheduling;
-import org.example.togetjob.model.entity.Student;
-import org.example.togetjob.pattern.Notification;
-
-public class StudentObserverStudent implements StudentNotificationObserver {
-
-    private final Student student;
-    private final Notification notification;
-
-    public StudentObserverStudent(Student student, Notification notification) {
-        this.student = student;
-        this.notification = notification;
-    }
-
-    @Override
-    public void update(InterviewScheduling interviewScheduling) {
-
-        notification.showInterviewNotification(interviewScheduling);
-
-    }
-
-    public Student getStudent() {
-        return student;
-    }
-}
Index: .idea/shelf/Uncommitted_changes_before_Update_at_06_02_25,_16_27_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_06_02_25,_16_27_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_06_02_25,_16_27_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_06_02_25,_16_27_[Changes]/shelved.patch	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ /dev/null	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
@@ -1,3155 +0,0 @@
-Index: src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package org.example.togetjob.model.dao.concreteobjects;\n\nimport org.example.togetjob.model.dao.abstractobjects.JobAnnouncementDao;\nimport org.example.togetjob.model.entity.JobAnnouncement;\nimport org.example.togetjob.model.entity.Recruiter;\n\nimport java.util.List;\nimport java.util.Optional;\n\npublic class DataBaseJobAnnouncementDao implements JobAnnouncementDao {\n    @Override\n    public boolean saveJobAnnouncement(JobAnnouncement jobAnnouncement) {\n        return false;\n    }\n\n    @Override\n    public Optional<JobAnnouncement> getJobAnnouncement(String jobTitle, Recruiter recruiter) {\n        return Optional.empty();\n    }\n\n    @Override\n    public boolean updateJobAnnouncement(JobAnnouncement jobAnnouncement) {\n        return false;\n    }\n\n    @Override\n    public boolean deleteJobAnnouncement(JobAnnouncement jobAnnouncement) {\n        return false;\n    }\n\n    @Override\n    public boolean jobAnnouncementExists(String jobTitle, Recruiter recruiter) {\n        return false;\n    }\n\n    @Override\n    public List<JobAnnouncement> getAllJobAnnouncements(Recruiter recruiter) {\n        return List.of();\n    }\n\n    @Override\n    public List<JobAnnouncement> getAllJobAnnouncements() {\n        return List.of();\n    }\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java b/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java
---- a/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ b/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java	(date 1738854453885)
-@@ -1,13 +1,19 @@
- package org.example.togetjob.model.dao.concreteobjects;
- 
-+import org.example.togetjob.connection.DatabaseConfig;
- import org.example.togetjob.model.dao.abstractobjects.JobAnnouncementDao;
- import org.example.togetjob.model.entity.JobAnnouncement;
- import org.example.togetjob.model.entity.Recruiter;
- 
-+import java.sql.*;
- import java.util.List;
- import java.util.Optional;
- 
- public class DataBaseJobAnnouncementDao implements JobAnnouncementDao {
-+
-+    DataBaseRecruiterDao daoRecruiter = new DataBaseRecruiterDao();
-+
-+
-     @Override
-     public boolean saveJobAnnouncement(JobAnnouncement jobAnnouncement) {
-         return false;
-@@ -42,4 +48,78 @@
-     public List<JobAnnouncement> getAllJobAnnouncements() {
-         return List.of();
-     }
-+
-+    @Override
-+    public Optional<Integer> getJobAnnouncementId(String jobTitle, String recruiterName) {
-+        String sql = "SELECT ID FROM JOBANNOUNCEMENT WHERE JobTitle = ? AND RecruiterName = ?";
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+            stmt.setString(1, jobTitle);
-+            stmt.setString(2, recruiterName);
-+
-+            try (ResultSet rs = stmt.executeQuery()) {
-+                if (rs.next()) {
-+                    // Restituisci l'ID come Optional<Integer>
-+                    return Optional.of(rs.getInt("ID"));
-+                } else {
-+                    // Se non trovato, restituisci Optional.empty()
-+                    return Optional.empty();
-+                }
-+            }
-+        } catch (SQLException e) {
-+            // Gestione dell'errore (ad esempio, log o rilancio dell'eccezione)
-+            e.printStackTrace();
-+            return Optional.empty();  // Restituisce un Optional vuoto in caso di errore
-+        }
-+    }
-+
-+    @Override
-+    public Optional<JobAnnouncement> getJobAnnouncementById(Integer jobAnnouncementId) {
-+        String sql = "SELECT JobTitle, JobType, RoleJob, Location, WorkingHours, CompanyName, Salary, Description, isActive, RecruiterName FROM JOBANNOUNCEMENT WHERE ID = ?";
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+            // Imposta il parametro dell'ID
-+            stmt.setInt(1, jobAnnouncementId);
-+
-+            try (ResultSet rs = stmt.executeQuery()) {
-+                if (rs.next()) {
-+                    // Estrai i dati dal ResultSet
-+                    String jobTitle = rs.getString("JobTitle");
-+                    String jobType = rs.getString("JobType");
-+                    String role = rs.getString("RoleJob");
-+                    String location = rs.getString("Location");
-+                    int workingHours = rs.getInt("WorkingHours");
-+                    String companyName = rs.getString("CompanyName");
-+                    double salary = rs.getDouble("Salary");
-+                    String description = rs.getString("Description");
-+                    boolean isActive = rs.getBoolean("isActive");
-+                    String recruiterName = rs.getString("RecruiterName");
-+
-+                    // Recupera il recruiter in modo sicuro
-+                    Optional<Recruiter> recruiterOPT = daoRecruiter.getRecruiter(recruiterName);
-+
-+                    if (recruiterOPT.isPresent()) {
-+                        Recruiter recruiter = recruiterOPT.get();
-+                        // Crea il JobAnnouncement e restituiscilo
-+                        JobAnnouncement jobAnnouncement = new JobAnnouncement(jobTitle, jobType, role, location, workingHours, companyName, salary, description, isActive, recruiter);
-+                        return Optional.of(jobAnnouncement);
-+                    } else {
-+                        // Se il recruiter non esiste, restituisci Optional.empty()
-+                        return Optional.empty();
-+                    }
-+                }
-+            }
-+        } catch (SQLException e) {
-+            e.printStackTrace(); // Gestire l'errore come appropriato
-+        }
-+
-+        return Optional.empty(); // Se non trovato
-+    }
-+
-+
-+
- }
-Index: src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseJobApplicationDao.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package org.example.togetjob.model.dao.concreteobjects;\n\nimport org.example.togetjob.model.dao.abstractobjects.JobApplicationDao;\nimport org.example.togetjob.model.entity.JobAnnouncement;\nimport org.example.togetjob.model.entity.JobApplication;\nimport org.example.togetjob.model.entity.Student;\n\nimport java.util.List;\nimport java.util.Optional;\n\npublic class DataBaseJobApplicationDao implements JobApplicationDao {\n    @Override\n    public void saveJobApplication(JobApplication jobApplication) {\n    }\n\n    @Override\n    public Optional<JobApplication> getJobApplication(Student student, JobAnnouncement jobAnnouncement) {\n        return Optional.empty();\n    }\n\n    @Override\n    public boolean updateJobApplication(JobApplication jobApplication) {\n        return false;\n    }\n\n    @Override\n    public void deleteJobApplication(JobApplication jobApplication) {\n    }\n\n    @Override\n    public boolean jobApplicationExists(Student student, JobAnnouncement jobAnnouncement) {\n        return false;\n    }\n\n    @Override\n    public List<JobApplication> getAllJobApplications(Student student) {\n        return List.of();\n    }\n\n    @Override\n    public List<JobApplication> getJobApplicationsByAnnouncement(JobAnnouncement jobAnnouncement) {\n        return List.of();\n    }\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseJobApplicationDao.java b/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseJobApplicationDao.java
---- a/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseJobApplicationDao.java	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ b/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseJobApplicationDao.java	(date 1738855349840)
-@@ -1,44 +1,284 @@
- package org.example.togetjob.model.dao.concreteobjects;
- 
-+import org.example.togetjob.connection.DatabaseConfig;
-+import org.example.togetjob.model.dao.abstractobjects.JobAnnouncementDao;
- import org.example.togetjob.model.dao.abstractobjects.JobApplicationDao;
--import org.example.togetjob.model.entity.JobAnnouncement;
--import org.example.togetjob.model.entity.JobApplication;
--import org.example.togetjob.model.entity.Student;
-+import org.example.togetjob.model.dao.abstractobjects.StudentDao;
-+import org.example.togetjob.model.entity.*;
- 
-+import java.sql.*;
-+import java.time.LocalDate;
-+import java.util.ArrayList;
- import java.util.List;
- import java.util.Optional;
- 
- public class DataBaseJobApplicationDao implements JobApplicationDao {
-+
-+    JobAnnouncementDao daoJobAnnouncement = new DataBaseJobAnnouncementDao() ;
-+    StudentDao daoStudent = new DataBaseStudentDao() ;
-+
-     @Override
-     public void saveJobApplication(JobApplication jobApplication) {
-+        try {
-+            Optional<Integer> jobAnnouncementId = daoJobAnnouncement.getJobAnnouncementId(
-+                    jobApplication.getJobAnnouncement().getJobTitle(),
-+                    jobApplication.getJobAnnouncement().getRecruiter().getName()
-+            );
-+
-+            int jobAnnouncementIdValue = jobAnnouncementId.orElseThrow(() -> new RuntimeException());
-+
-+            String sql = "INSERT INTO JOBAPPLICATION (ApplicationDate, UsernameStudent, Status, CoverLetter, JobAnnouncementID) VALUES (?, ?, ?, ?, ?)";
-+
-+            try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+                 PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+                stmt.setDate(1, Date.valueOf(jobApplication.getApplicationDate()));
-+                stmt.setString(2, jobApplication.getStudent().getUsername());
-+                stmt.setString(3, jobApplication.getStatus().toString());
-+                stmt.setString(4, jobApplication.getCoverLetter());
-+                stmt.setInt(5, jobAnnouncementIdValue);
-+
-+                stmt.executeUpdate();
-+            }
-+        } catch (SQLException e) {
-+            throw new RuntimeException("Database error while saving job application", e);
-+        }
-     }
-+
-+
-+
-+
- 
-     @Override
-     public Optional<JobApplication> getJobApplication(Student student, JobAnnouncement jobAnnouncement) {
--        return Optional.empty();
-+        try {
-+            // Recupera l'ID dell'annuncio di lavoro
-+            Optional<Integer> jobAnnouncementId = daoJobAnnouncement.getJobAnnouncementId(
-+                    jobAnnouncement.getJobTitle(),
-+                    jobAnnouncement.getRecruiter().getName()
-+            );
-+
-+            // Gestisci il caso in cui l'Optional è vuoto, lanciando un'eccezione
-+            int jobAnnouncementIdValue = jobAnnouncementId.orElseThrow(() -> new RuntimeException());
-+
-+            // SQL per selezionare i dati della JobApplication
-+            String sql = "SELECT ApplicationDate, Status, CoverLetter FROM JOBAPPLICATION WHERE UsernameStudent = ? AND JobAnnouncementID = ?";
-+
-+            try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+                 PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+                // Imposta i parametri della query
-+                stmt.setString(1, student.getUsername());
-+                stmt.setInt(2, jobAnnouncementIdValue);
-+
-+                try (ResultSet rs = stmt.executeQuery()) {
-+                    if (rs.next()) {  // Verifica se ci sono risultati
-+                        // Legge i dati dal ResultSet
-+                        LocalDate applicationDate = rs.getDate("ApplicationDate").toLocalDate();
-+                        Status status = Status.valueOf(rs.getString("Status").toUpperCase());
-+                        String coverLetter = rs.getString("CoverLetter");
-+
-+                        // Crea il JobApplication e lo restituisce come Optional
-+                        JobApplication jobApplication = new JobApplication(applicationDate, student, status, coverLetter, jobAnnouncement);
-+                        return Optional.of(jobApplication);
-+                    }
-+                }
-+            }
-+        } catch (SQLException | RuntimeException e) {
-+            // Gestione delle eccezioni: stampa stack trace o log
-+            e.printStackTrace();
-+        }
-+
-+        return Optional.empty();  // Restituisce Optional vuoto se non trovata una corrispondenza o errore
-     }
-+
- 
-     @Override
-     public boolean updateJobApplication(JobApplication jobApplication) {
-+        try {
-+            // Recupera l'ID dell'annuncio di lavoro
-+            Optional<Integer> jobAnnouncementId = daoJobAnnouncement.getJobAnnouncementId(
-+                    jobApplication.getJobAnnouncement().getJobTitle(),
-+                    jobApplication.getJobAnnouncement().getRecruiter().getName());
-+
-+            // Gestisci il caso in cui l'Optional è vuoto, lanciando un'eccezione
-+            int jobAnnouncementIdValue = jobAnnouncementId.orElseThrow(() -> new RuntimeException("Job Announcement not found"));
-+
-+            // SQL per aggiornare i dati della JobApplication
-+            String sql = "UPDATE JOBAPPLICATION SET Status = ?, CoverLetter = ? WHERE UsernameStudent = ? AND JobAnnouncementID = ?;";
-+
-+            try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+                 PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+                // Imposta i parametri della query
-+                stmt.setString(1, jobApplication.getStatus().toString());  // Status come stringa
-+                stmt.setString(2, jobApplication.getCoverLetter());
-+                stmt.setString(3, jobApplication.getStudent().getUsername());
-+                stmt.setInt(4, jobAnnouncementIdValue);  // ID dell'annuncio di lavoro
-+
-+                stmt.executeUpdate();
-+                return true;
-+
-+            }
-+        } catch (SQLException | RuntimeException e) {
-+            // Gestione delle eccezioni: stampa stack trace o log
-+            e.printStackTrace();
-+        }
-         return false;
-     }
- 
-+
-     @Override
-     public void deleteJobApplication(JobApplication jobApplication) {
-+        try {
-+            // Recupera l'ID dell'annuncio di lavoro
-+            Optional<Integer> jobAnnouncementId = daoJobAnnouncement.getJobAnnouncementId(
-+                    jobApplication.getJobAnnouncement().getJobTitle(),
-+                    jobApplication.getJobAnnouncement().getRecruiter().getName());
-+
-+            // Gestisci il caso in cui l'Optional è vuoto, lanciando un'eccezione
-+            int jobAnnouncementIdValue = jobAnnouncementId.orElseThrow(() -> new RuntimeException("Job Announcement not found"));
-+
-+            // SQL per eliminare la JobApplication
-+            String sql = "DELETE FROM JOBAPPLICATION WHERE UsernameStudent = ? AND JobAnnouncementID = ?;";
-+
-+            try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+                 PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+                // Imposta i parametri della query
-+                stmt.setString(1, jobApplication.getStudent().getUsername());  // Username dello studente
-+                stmt.setInt(2, jobAnnouncementIdValue);  // ID dell'annuncio di lavoro
-+
-+            }
-+        } catch (SQLException | RuntimeException e) {
-+            // Gestione delle eccezioni: stampa stack trace o log
-+            e.printStackTrace();
-+        }
-     }
-+
- 
-     @Override
-     public boolean jobApplicationExists(Student student, JobAnnouncement jobAnnouncement) {
-+        try {
-+            // Recupera l'ID dell'annuncio di lavoro
-+            Optional<Integer> jobAnnouncementId = daoJobAnnouncement.getJobAnnouncementId(
-+                    jobAnnouncement.getJobTitle(),
-+                    jobAnnouncement.getRecruiter().getName());
-+
-+            // Gestisci il caso in cui l'Optional è vuoto, lanciando un'eccezione
-+            int jobAnnouncementIdValue = jobAnnouncementId.orElseThrow(() -> new RuntimeException("Job Announcement not found"));
-+
-+            // SQL per verificare se la JobApplication esiste
-+            String sql = "SELECT COUNT(*) FROM JOBAPPLICATION WHERE UsernameStudent = ? AND JobAnnouncementID = ?;";
-+
-+            try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+                 PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+                // Imposta i parametri della query
-+                stmt.setString(1, student.getUsername());  // Username dello studente
-+                stmt.setInt(2, jobAnnouncementIdValue);  // ID dell'annuncio di lavoro
-+
-+                try (ResultSet rs = stmt.executeQuery()) {
-+                    if (rs.next()) {
-+                        // Se la query restituisce un valore maggiore di 0, significa che la JobApplication esiste
-+                        return rs.getInt(1) > 0;
-+                    }
-+                }
-+
-+            }
-+        } catch (SQLException | RuntimeException e) {
-+            // Gestione delle eccezioni: stampa stack trace o log
-+            e.printStackTrace();
-+        }
-         return false;
-     }
- 
-     @Override
-     public List<JobApplication> getAllJobApplications(Student student) {
--        return List.of();
-+
-+        List<JobApplication> jobApplications = new ArrayList<>();
-+
-+        String sql = "SELECT ApplicationDate, Status, CoverLetter , JobAnnouncementID FROM JOBAPPLICATION WHERE UsernameStudent = ?;";
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+            // Imposta il parametro della query
-+            stmt.setString(1, student.getUsername());
-+
-+            try (ResultSet rs = stmt.executeQuery()) {
-+                while (rs.next()) {
-+                    LocalDate applicationDate = rs.getDate("ApplicationDate").toLocalDate();
-+                    Status status = Status.valueOf(rs.getString("Status").toUpperCase());
-+                    String coverLetter = rs.getString("CoverLetter");
-+                    Integer jobAnnouncemntId = rs.getInt("JobAnnouncementID");
-+
-+                    // Ottieni il JobAnnouncement e controlla se è presente
-+                    Optional<JobAnnouncement> jobAnnouncementOPT = daoJobAnnouncement.getJobAnnouncementById(jobAnnouncemntId);
-+
-+                    if (jobAnnouncementOPT.isPresent()) {
-+                        JobAnnouncement jobAnnouncement = jobAnnouncementOPT.get();
-+                        // Creazione della JobApplication
-+                        JobApplication jobApplication = new JobApplication(applicationDate, student, status, coverLetter, jobAnnouncement);
-+
-+                        // Aggiungi alla lista
-+                        jobApplications.add(jobApplication);
-+                    }
-+                }
-+            }
-+
-+        } catch (SQLException e) {
-+            e.printStackTrace();
-+        }
-+
-+        return jobApplications;
-     }
- 
-     @Override
-     public List<JobApplication> getJobApplicationsByAnnouncement(JobAnnouncement jobAnnouncement) {
--        return List.of();
-+
-+        List<JobApplication> jobApplications = new ArrayList<>();
-+        Optional<Integer> jobAnnouncementIdOPT = daoJobAnnouncement.getJobAnnouncementId( jobAnnouncement.getJobTitle() , jobAnnouncement.getRecruiter().getUsername() ); // Ottieni l'ID dell'annuncio di lavoro
-+        Integer jobAnnouncementId = jobAnnouncementIdOPT.get() ;
-+
-+        String sql = "SELECT ApplicationDate, Status, CoverLetter, UsernameStudent FROM JOBAPPLICATION WHERE JobAnnouncementID = ?;";
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+            // Imposta il parametro della query
-+            stmt.setInt(1, jobAnnouncementId);
-+
-+            try (ResultSet rs = stmt.executeQuery()) {
-+                // Itera su tutte le righe del ResultSet
-+                while (rs.next()) {
-+                    // Per ogni riga, recupera i dati della JobApplication
-+                    LocalDate applicationDate = rs.getDate("ApplicationDate").toLocalDate();
-+                    Status status = Status.valueOf(rs.getString("Status").toUpperCase());
-+                    String coverLetter = rs.getString("CoverLetter");
-+                    String usernameStudent = rs.getString("UsernameStudent");
-+
-+                    // Recupera lo studente dal database usando lo username
-+                    Optional<Student> studentOPT = daoStudent.getStudentByUsername(usernameStudent);
-+
-+                    if (studentOPT.isPresent()) {
-+                        Student student = studentOPT.get();
-+                        // Crea la JobApplication per questa riga
-+                        JobApplication jobApplication = new JobApplication(applicationDate, student, status, coverLetter, jobAnnouncement);
-+                        // Aggiungi alla lista di JobApplications
-+                        jobApplications.add(jobApplication);
-+                    } else {
-+                        // Gestisci il caso in cui lo studente non è trovato (facoltativo)
-+                        System.out.println("Student not found for Username: " + usernameStudent);
-+                    }
-+                }
-+            }
-+
-+        } catch (SQLException e) {
-+            e.printStackTrace();
-+        }
-+
-+        return jobApplications;  // Restituisce la lista di tutte le JobApplication
-     }
-+
- }
-Index: src/main/java/org/example/togetjob/model/dao/abstractobjects/JobAnnouncementDao.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package org.example.togetjob.model.dao.abstractobjects;\n\nimport org.example.togetjob.model.entity.JobAnnouncement;\nimport org.example.togetjob.model.entity.Recruiter;\n\nimport java.util.List;\nimport java.util.Optional;\n\npublic interface JobAnnouncementDao {\n\n    boolean saveJobAnnouncement(JobAnnouncement jobAnnouncement);\n    Optional<JobAnnouncement> getJobAnnouncement(String jobTitle, Recruiter recruiter);\n    boolean updateJobAnnouncement(JobAnnouncement jobAnnouncement);\n    boolean deleteJobAnnouncement(JobAnnouncement jobAnnouncement);\n    boolean jobAnnouncementExists(String jobTitle, Recruiter recruiter);\n    List<JobAnnouncement> getAllJobAnnouncements(Recruiter recruiter);\n    List<JobAnnouncement> getAllJobAnnouncements();\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/org/example/togetjob/model/dao/abstractobjects/JobAnnouncementDao.java b/src/main/java/org/example/togetjob/model/dao/abstractobjects/JobAnnouncementDao.java
---- a/src/main/java/org/example/togetjob/model/dao/abstractobjects/JobAnnouncementDao.java	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ b/src/main/java/org/example/togetjob/model/dao/abstractobjects/JobAnnouncementDao.java	(date 1738854025123)
-@@ -15,4 +15,7 @@
-     boolean jobAnnouncementExists(String jobTitle, Recruiter recruiter);
-     List<JobAnnouncement> getAllJobAnnouncements(Recruiter recruiter);
-     List<JobAnnouncement> getAllJobAnnouncements();
-+    Optional<Integer> getJobAnnouncementId(String jobTitle, String recruiterName);
-+    Optional<JobAnnouncement> getJobAnnouncementById(Integer jobAnnouncementId) ;
-+
- }
-Index: src/main/java/org/example/togetjob/model/dao/abstractobjects/StudentDao.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package org.example.togetjob.model.dao.abstractobjects;\n\nimport org.example.togetjob.model.entity.Student;\n\nimport java.util.List;\nimport java.util.Optional;\n\npublic interface StudentDao {\n\n    void saveStudent(Student student);\n    Optional<Student> getStudent(String username);\n    List<Student> getAllStudents();\n    boolean updateStudent(Student student);\n    boolean deleteStudent(String username);\n    boolean studentExists(String username);\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/org/example/togetjob/model/dao/abstractobjects/StudentDao.java b/src/main/java/org/example/togetjob/model/dao/abstractobjects/StudentDao.java
---- a/src/main/java/org/example/togetjob/model/dao/abstractobjects/StudentDao.java	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ b/src/main/java/org/example/togetjob/model/dao/abstractobjects/StudentDao.java	(date 1738855349846)
-@@ -13,4 +13,5 @@
-     boolean updateStudent(Student student);
-     boolean deleteStudent(String username);
-     boolean studentExists(String username);
-+    Optional<Student> getStudentByUsername(String username) ;
- }
-Index: src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseStudentDao.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package org.example.togetjob.model.dao.concreteobjects;\n\nimport org.example.togetjob.model.dao.abstractobjects.StudentDao;\nimport org.example.togetjob.model.entity.Student;\n\nimport java.util.List;\nimport java.util.Optional;\n\npublic class DataBaseStudentDao implements StudentDao {\n\n    @Override\n    public void saveStudent(Student student) {\n    }\n\n    @Override\n    public Optional<Student> getStudent(String username) {\n        return Optional.empty();\n    }\n\n    @Override\n    public List<Student> getAllStudents() {\n        return List.of();\n    }\n\n    @Override\n    public boolean updateStudent(Student student) {\n        return false;\n    }\n\n    @Override\n    public boolean deleteStudent(String username) {\n        return false;\n    }\n\n    @Override\n    public boolean studentExists(String username) {\n        return false;\n    }\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseStudentDao.java b/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseStudentDao.java
---- a/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseStudentDao.java	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ b/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseStudentDao.java	(date 1738855349851)
-@@ -1,8 +1,13 @@
- package org.example.togetjob.model.dao.concreteobjects;
- 
-+import org.example.togetjob.connection.DatabaseConfig;
- import org.example.togetjob.model.dao.abstractobjects.StudentDao;
-+import org.example.togetjob.model.entity.Role;
- import org.example.togetjob.model.entity.Student;
- 
-+import java.sql.*;
-+import java.time.LocalDate;
-+import java.util.ArrayList;
- import java.util.List;
- import java.util.Optional;
- 
-@@ -10,30 +15,195 @@
- 
-     @Override
-     public void saveStudent(Student student) {
-+        String sql = "INSERT INTO STUDENT (Username, Name, Surname, EmailAddress, Password, Role, DateOfBirth, PhoneNumber, Degrees, CourseAttended, Certifications, WorkExperiences, Skills, Availability) "
-+                + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+            stmt.setString(1, student.getUsername());
-+            stmt.setString(2, student.getName());
-+            stmt.setString(3, student.getSurname());
-+            stmt.setString(4, student.getEmailAddress());
-+            stmt.setString(5, student.getPassword());
-+            stmt.setString(6, student.getRole().name()); // Ruolo (STUDENT)
-+            stmt.setDate(7, Date.valueOf(student.getDateOfBirth())); // Gestisci LocalDate
-+            stmt.setString(8, student.getPhoneNumber());
-+            stmt.setString(9, String.join(",", student.getDegrees())); // Converte lista in stringa separata da virgole
-+            stmt.setString(10, String.join(",", student.getCourseAttended()));
-+            stmt.setString(11, String.join(",", student.getCertifications()));
-+            stmt.setString(12, String.join(",", student.getWorkExperiences()));
-+            stmt.setString(13, String.join(",", student.getSkills()));
-+            stmt.setString(14, student.getAvailability());
-+
-+        } catch (SQLException e) {
-+            e.printStackTrace();
-+        }
-     }
-+
- 
-     @Override
-     public Optional<Student> getStudent(String username) {
-+        String sql = "SELECT * FROM STUDENT WHERE Username = ?";
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+            stmt.setString(1, username);
-+            ResultSet rs = stmt.executeQuery();
-+
-+            if (rs.next()) { // Se esiste un risultato
-+                String name = rs.getString("Name");
-+                String surname = rs.getString("Surname");
-+                String emailAddress = rs.getString("EmailAddress");
-+                String password = rs.getString("Password");
-+
-+                // Recupere le informazioni aggiuntive per lo Student
-+                LocalDate dateOfBirth = rs.getDate("DateOfBirth").toLocalDate();
-+                String phoneNumber = rs.getString("PhoneNumber");
-+                List<String> degrees = List.of(rs.getString("Degrees").split(","));
-+                List<String> courseAttended = List.of(rs.getString("CourseAttended").split(","));
-+                List<String> certifications = List.of(rs.getString("Certifications").split(","));
-+                List<String> workExperiences = List.of(rs.getString("WorkExperiences").split(","));
-+                List<String> skills = List.of(rs.getString("Skills").split(","));
-+                String availability = rs.getString("Availability");
-+
-+                // Creazione dell'oggetto Student
-+                Student student = new Student(name, surname, username, emailAddress, password, Role.STUDENT,
-+                        dateOfBirth, phoneNumber, degrees, courseAttended, certifications,
-+                        workExperiences, skills, availability, null); // Impostiamo `null` per `jobApplications`
-+
-+                return Optional.of(student);
-+            }
-+        } catch (SQLException e) {
-+            e.printStackTrace();
-+        }
-         return Optional.empty();
-     }
- 
-     @Override
-     public List<Student> getAllStudents() {
--        return List.of();
-+        String sql = "SELECT * FROM STUDENT WHERE Role = 'STUDENT'"; // Filtra per gli utenti di tipo 'STUDENT'
-+        List<Student> students = new ArrayList<>();
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql);
-+             ResultSet rs = stmt.executeQuery()) {
-+
-+            while (rs.next()) { // Itera attraverso i risultati
-+                String username = rs.getString("Username");
-+                String name = rs.getString("Name");
-+                String surname = rs.getString("Surname");
-+                String emailAddress = rs.getString("EmailAddress");
-+                String password = rs.getString("Password");
-+
-+                // Recupera i dati aggiuntivi per lo Student
-+                LocalDate dateOfBirth = rs.getDate("DateOfBirth").toLocalDate();
-+                String phoneNumber = rs.getString("PhoneNumber");
-+                List<String> degrees = List.of(rs.getString("Degrees").split(","));
-+                List<String> courseAttended = List.of(rs.getString("CourseAttended").split(","));
-+                List<String> certifications = List.of(rs.getString("Certifications").split(","));
-+                List<String> workExperiences = List.of(rs.getString("WorkExperiences").split(","));
-+                List<String> skills = List.of(rs.getString("Skills").split(","));
-+                String availability = rs.getString("Availability");
-+
-+                // Crea un oggetto Student e aggiungilo alla lista
-+                Student student = new Student(name, surname, username, emailAddress, password, Role.STUDENT,
-+                        dateOfBirth, phoneNumber, degrees, courseAttended, certifications,
-+                        workExperiences, skills, availability, null); // Imposta `null` per jobApplications
-+                students.add(student); // Aggiungi alla lista
-+            }
-+        } catch (SQLException e) {
-+            e.printStackTrace();
-+        }
-+
-+        return students; // Ritorna la lista degli studenti
-     }
-+
- 
-     @Override
-     public boolean updateStudent(Student student) {
--        return false;
-+        String sql = "UPDATE STUDENT SET Name = ?, Surname = ?, EmailAddress = ?, Password = ?, " +
-+                "DateOfBirth = ?, PhoneNumber = ?, Degrees = ?, CourseAttended = ?, Certifications = ?, " +
-+                "WorkExperiences = ?, Skills = ?, Availability = ? WHERE Username = ?";
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+            // Impostiamo i parametri per la query
-+            stmt.setString(1, student.getName());
-+            stmt.setString(2, student.getSurname());
-+            stmt.setString(3, student.getEmailAddress());
-+            stmt.setString(4, student.getPassword());
-+            stmt.setDate(5, Date.valueOf(student.getDateOfBirth())); // Convertiamo LocalDate in java.sql.Date
-+            stmt.setString(6, student.getPhoneNumber());
-+            stmt.setString(7, String.join(",", student.getDegrees())); // Converte la lista in una stringa separata da virgola
-+            stmt.setString(8, String.join(",", student.getCourseAttended()));
-+            stmt.setString(9, String.join(",", student.getCertifications()));
-+            stmt.setString(10, String.join(",", student.getWorkExperiences()));
-+            stmt.setString(11, String.join(",", student.getSkills()));
-+            stmt.setString(12, student.getAvailability());
-+            stmt.setString(13, student.getUsername()); // La chiave primaria è Username
-+
-+            int rowsUpdated = stmt.executeUpdate(); // Eseguiamo la query
-+
-+            return rowsUpdated > 0; // Se almeno una riga è stata aggiornata, ritorna true
-+        } catch (SQLException e) {
-+            e.printStackTrace();
-+        }
-+
-+        return false; // In caso di errore o nessuna riga aggiornata
-     }
-+
- 
-     @Override
-     public boolean deleteStudent(String username) {
--        return false;
-+        String sql = "DELETE FROM STUDENT WHERE Username = ? AND Role = 'STUDENT'";
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+            // Impostiamo il parametro username
-+            stmt.setString(1, username);
-+
-+            int rowsDeleted = stmt.executeUpdate(); // Eseguiamo la query di eliminazione
-+
-+            return rowsDeleted > 0; // Se almeno una riga è stata eliminata, ritorna true
-+        } catch (SQLException e) {
-+            e.printStackTrace();
-+        }
-+
-+        return false; // Se si verifica un errore o nessuna riga è eliminata, ritorna false
-     }
-+
- 
-     @Override
-     public boolean studentExists(String username) {
--        return false;
-+        String sql = "SELECT COUNT(*) FROM STUDENT WHERE Username = ? AND Role = 'STUDENT'";
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+            // Impostiamo il parametro username
-+            stmt.setString(1, username);
-+
-+            try (ResultSet rs = stmt.executeQuery()) {
-+                if (rs.next()) {
-+                    int count = rs.getInt(1); // Ottieni il conteggio dei record trovati
-+                    return count > 0; // Se il conteggio è maggiore di 0, lo studente esiste
-+                }
-+            }
-+        } catch (SQLException e) {
-+            e.printStackTrace();
-+        }
-+
-+        return false; // Se non ci sono risultati, lo studente non esiste
-     }
-+
-+    public Optional<Student> getStudentByUsername(String username){
-+
-+        return getStudent(username) ;
-+
-+    }
-+
- }
-Index: src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseUserDao.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package org.example.togetjob.model.dao.concreteobjects;\n\nimport org.example.togetjob.model.dao.abstractobjects.UserDao;\nimport org.example.togetjob.model.entity.User;\n\nimport java.util.List;\nimport java.util.Optional;\n\npublic class DataBaseUserDao implements UserDao {\n\n    @Override\n    public boolean saveUser(User user) {\n        return false;\n    }\n\n    @Override\n    public Optional<User> getUser(String username) {\n        return Optional.empty();\n    }\n\n    @Override\n    public List<User> getAllUsers() {\n        return List.of();\n    }\n\n    @Override\n    public boolean updateUser(User user) {\n        return false;\n    }\n\n    @Override\n    public boolean deleteUser(String username) {\n        return false;\n    }\n\n    @Override\n    public boolean userExists(String username) {\n        return false;\n    }\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseUserDao.java b/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseUserDao.java
---- a/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseUserDao.java	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ b/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseUserDao.java	(date 1738847596404)
-@@ -1,8 +1,14 @@
- package org.example.togetjob.model.dao.concreteobjects;
- 
-+import org.example.togetjob.connection.DatabaseConfig;
- import org.example.togetjob.model.dao.abstractobjects.UserDao;
-+import org.example.togetjob.model.entity.Recruiter;
-+import org.example.togetjob.model.entity.Role;
-+import org.example.togetjob.model.entity.Student;
- import org.example.togetjob.model.entity.User;
-+import java.sql.* ;
- 
-+import java.util.ArrayList;
- import java.util.List;
- import java.util.Optional;
- 
-@@ -10,31 +16,155 @@
- 
-     @Override
-     public boolean saveUser(User user) {
-+        String sql = "INSERT INTO USER (Username, Name, Surname, EmailAddress, Password, Role) VALUES (?, ?, ?, ?, ?, ?)";
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+            stmt.setString(1, user.getUsername());
-+            stmt.setString(2, user.getName());
-+            stmt.setString(3, user.getSurname());
-+            stmt.setString(4, user.getEmailAddress());
-+            stmt.setString(5, user.getPassword());
-+            stmt.setString(6, user.getRole().name());
-+
-+            return stmt.executeUpdate() > 0; // Ritorna true se almeno una riga è stata inserita
-+        } catch (SQLException e) {
-+            e.printStackTrace();
-+        }
-         return false;
-     }
- 
-     @Override
-     public Optional<User> getUser(String username) {
-+        String sql = "SELECT * FROM USER WHERE Username = ?";
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+            stmt.setString(1, username);
-+            ResultSet rs = stmt.executeQuery();
-+
-+            if (rs.next()) { // Se esiste un risultato
-+                String name = rs.getString("Name");
-+                String surname = rs.getString("Surname");
-+                String emailAddress = rs.getString("EmailAddress");
-+                String password = rs.getString("Password");
-+                Role role = Role.valueOf(rs.getString("Role").toUpperCase()); // Converte la stringa in maiuscolo
-+
-+                User user; // Dichiarazione della variabile
-+
-+                if (role.equals(Role.STUDENT)) {
-+                    user = new Student(name, surname, username, emailAddress, password, role);
-+                } else { // Se non è STUDENT, deve essere RECRUITER
-+                    user = new Recruiter(name, surname, username, emailAddress, password, role);
-+                }
-+
-+                return Optional.of(user);
-+            }
-+        } catch (SQLException e) {
-+            e.printStackTrace();
-+        }
-         return Optional.empty();
-     }
- 
-+
-     @Override
-     public List<User> getAllUsers() {
--        return List.of();
-+        String sql = "SELECT * FROM USER";
-+        List<User> users = new ArrayList<>();
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql);
-+             ResultSet rs = stmt.executeQuery()) {
-+
-+            while (rs.next()) {
-+                String username = rs.getString("Username");
-+                String name = rs.getString("Name");
-+                String surname = rs.getString("Surname");
-+                String emailAddress = rs.getString("EmailAddress");
-+                String password = rs.getString("Password");
-+                Role role = Role.valueOf(rs.getString("Role").toUpperCase()); // Converte la stringa ENUM in Role
-+
-+
-+
-+                User user;
-+                if (role.equals(Role.STUDENT)) {
-+                    user = new Student(name, surname, username, emailAddress, password, role);
-+                } else { // Se non è STUDENT, deve essere RECRUITER
-+                    user = new Recruiter(name, surname, username, emailAddress, password, role);
-+                }
-+
-+                users.add(user);
-+            }
-+        } catch (SQLException e) {
-+            e.printStackTrace();
-+        }
-+
-+        return users;
-     }
-+
- 
-     @Override
-     public boolean updateUser(User user) {
--        return false;
-+        String sql = "UPDATE USER SET Name = ?, Surname = ?, EmailAddress = ?, Password = ?, Role = ? WHERE Username = ?";
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+            stmt.setString(1, user.getName());
-+            stmt.setString(2, user.getSurname());
-+            stmt.setString(3, user.getEmailAddress());
-+            stmt.setString(4, user.getPassword());
-+            stmt.setString(5, user.getRole().name()); // Converte Role in stringa ENUM
-+            stmt.setString(6, user.getUsername());
-+
-+            int rowsUpdated = stmt.executeUpdate(); // Ritorna il numero di righe modificate
-+            return rowsUpdated > 0; // Se almeno una riga è stata aggiornata, ritorna true
-+        } catch (SQLException e) {
-+            e.printStackTrace();
-+            return false;
-+        }
-     }
- 
-     @Override
-     public boolean deleteUser(String username) {
--        return false;
-+        String sql = "DELETE FROM USER WHERE Username = ?";
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+            stmt.setString(1, username);
-+
-+            int rowsDeleted = stmt.executeUpdate(); // Ritorna il numero di righe eliminate
-+            return rowsDeleted > 0; // Se almeno una riga è stata eliminata, ritorna true
-+        } catch (SQLException e) {
-+            e.printStackTrace();
-+            return false;
-+        }
-     }
-+
- 
-     @Override
-     public boolean userExists(String username) {
--        return false;
-+        String sql = "SELECT COUNT(*) FROM USER WHERE Username = ?";
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+            stmt.setString(1, username);
-+
-+            try (ResultSet rs = stmt.executeQuery()) {
-+                if (rs.next()) {
-+                    int count = rs.getInt(1); // Ottieni il conteggio dei record trovati
-+                    return count > 0; // Se il conteggio è maggiore di 0, l'utente esiste
-+                }
-+            }
-+        } catch (SQLException e) {
-+            e.printStackTrace();
-+        }
-+
-+        return false; // Se non ci sono risultati, l'utente non esiste
-     }
-+
- }
-Index: src/main/java/org/example/togetjob/model/entity/JobApplication.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package org.example.togetjob.model.entity;\n\nimport java.time.LocalDate;\n\npublic class JobApplication {\n\n    private LocalDate applicationDate;\n    private Student student;\n    private Status status;\n    private String coverLetter;\n    private JobAnnouncement jobAnnouncement;\n\n\n    public JobApplication(Student student, String coverLetter, JobAnnouncement jobAnnouncement) {\n        this.applicationDate = LocalDate.now();\n        this.student = student;\n        this.status = Status.PENDING;\n        this.coverLetter = coverLetter;\n        this.jobAnnouncement = jobAnnouncement;\n    }\n\n    public LocalDate getApplicationDate() {\n        return applicationDate;\n    }\n\n    public void setApplicationDate(LocalDate applicationDate) {\n        this.applicationDate = applicationDate;\n    }\n\n    public Student getStudent() {\n        return student;\n    }\n\n    public void setStudent(Student student) {\n        this.student = student;\n    }\n\n    public Status getStatus() {\n        return status;\n    }\n\n    public void setStatus(Status status) {\n        this.status = status;\n    }\n\n    public String getCoverLetter() {\n        return coverLetter;\n    }\n\n    public void setCoverLetter(String coverLetter) {\n        this.coverLetter = coverLetter;\n    }\n\n    public JobAnnouncement getJobAnnouncement() {\n        return jobAnnouncement;\n    }\n\n    public void setJobAnnouncement(JobAnnouncement jobAnnouncement) {\n        this.jobAnnouncement = jobAnnouncement;\n    }\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/org/example/togetjob/model/entity/JobApplication.java b/src/main/java/org/example/togetjob/model/entity/JobApplication.java
---- a/src/main/java/org/example/togetjob/model/entity/JobApplication.java	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ b/src/main/java/org/example/togetjob/model/entity/JobApplication.java	(date 1738849609722)
-@@ -19,6 +19,16 @@
-         this.jobAnnouncement = jobAnnouncement;
-     }
- 
-+    public JobApplication(LocalDate localDate , Student student,Status status , String coverLetter, JobAnnouncement jobAnnouncement) {
-+        this.applicationDate = localDate;
-+        this.student = student;
-+        this.status = status;
-+        this.coverLetter = coverLetter;
-+        this.jobAnnouncement = jobAnnouncement;
-+    }
-+
-+
-+
-     public LocalDate getApplicationDate() {
-         return applicationDate;
-     }
-Index: src/main/java/org/example/togetjob/model/dao/abstractobjects/JobApplicationDao.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package org.example.togetjob.model.dao.abstractobjects;\n\nimport org.example.togetjob.model.entity.JobAnnouncement;\nimport org.example.togetjob.model.entity.JobApplication;\nimport org.example.togetjob.model.entity.Student;\n\nimport java.util.List;\nimport java.util.Optional;\n\npublic interface JobApplicationDao {\n\n    void saveJobApplication (JobApplication jobApplication);\n    Optional<JobApplication> getJobApplication(Student student, JobAnnouncement jobAnnouncement);\n    boolean updateJobApplication(JobApplication jobApplication);\n    void deleteJobApplication(JobApplication jobApplication);\n    boolean jobApplicationExists(Student student, JobAnnouncement jobAnnouncement);\n    List<JobApplication> getAllJobApplications(Student student);\n    List<JobApplication> getJobApplicationsByAnnouncement(JobAnnouncement jobAnnouncement);\n\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/org/example/togetjob/model/dao/abstractobjects/JobApplicationDao.java b/src/main/java/org/example/togetjob/model/dao/abstractobjects/JobApplicationDao.java
---- a/src/main/java/org/example/togetjob/model/dao/abstractobjects/JobApplicationDao.java	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ b/src/main/java/org/example/togetjob/model/dao/abstractobjects/JobApplicationDao.java	(date 1738854025118)
-@@ -16,5 +16,4 @@
-     boolean jobApplicationExists(Student student, JobAnnouncement jobAnnouncement);
-     List<JobApplication> getAllJobApplications(Student student);
-     List<JobApplication> getJobApplicationsByAnnouncement(JobAnnouncement jobAnnouncement);
--
- }
-Index: src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseRecruiterDao.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package org.example.togetjob.model.dao.concreteobjects;\n\nimport org.example.togetjob.model.dao.abstractobjects.RecruiterDao;\nimport org.example.togetjob.model.entity.Recruiter;\n\nimport java.util.List;\nimport java.util.Optional;\n\npublic class DataBaseRecruiterDao implements RecruiterDao {\n    @Override\n    public void saveRecruiter(Recruiter recruiter) {\n    }\n\n    @Override\n    public Optional<Recruiter> getRecruiter(String username) {\n        return Optional.empty();\n    }\n\n    @Override\n    public List<Recruiter> getAllRecruiter() {\n        return List.of();\n    }\n\n    @Override\n    public boolean updateRecruiter(Recruiter recruiter) {\n        return false;\n    }\n\n    @Override\n    public boolean deleteRecruiter(String username) {\n        return false;\n    }\n\n    @Override\n    public boolean recruiterExists(String username) {\n        return false;\n    }\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseRecruiterDao.java b/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseRecruiterDao.java
---- a/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseRecruiterDao.java	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ b/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseRecruiterDao.java	(date 1738854694778)
-@@ -1,38 +1,180 @@
- package org.example.togetjob.model.dao.concreteobjects;
- 
-+import org.example.togetjob.connection.DatabaseConfig;
- import org.example.togetjob.model.dao.abstractobjects.RecruiterDao;
- import org.example.togetjob.model.entity.Recruiter;
-+import org.example.togetjob.model.entity.Role;
- 
-+import java.sql.*;
-+import java.util.ArrayList;
- import java.util.List;
- import java.util.Optional;
- 
- public class DataBaseRecruiterDao implements RecruiterDao {
-+
-     @Override
-     public void saveRecruiter(Recruiter recruiter) {
-+        String sql = "INSERT INTO RECRUITER (Username, Name, Surname, EmailAddress, Password, Role, Companies) VALUES (?, ?, ?, ?, ?, ?, ?)";
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+            stmt.setString(1, recruiter.getUsername());
-+            stmt.setString(2, recruiter.getName());
-+            stmt.setString(3, recruiter.getSurname());
-+            stmt.setString(4, recruiter.getEmailAddress());
-+            stmt.setString(5, recruiter.getPassword());
-+            stmt.setString(6, recruiter.getRole().name());
-+
-+            // Convertiamo la lista di companies in una stringa separata da virgole
-+            stmt.setString(7, String.join(",", recruiter.getCompanies()));
-+
-+            stmt.executeUpdate();  // Eseguiamo l'inserimento
-+        } catch (SQLException e) {
-+            e.printStackTrace();  // Gestione dell'errore
-+        }
-     }
-+
- 
-     @Override
-     public Optional<Recruiter> getRecruiter(String username) {
--        return Optional.empty();
-+        String sql = "SELECT * FROM RECRUITER WHERE Username = ?";
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+            stmt.setString(1, username);
-+            ResultSet rs = stmt.executeQuery();
-+
-+            if (rs.next()) {
-+                // Estrazione dei dati
-+                String name = rs.getString("Name");
-+                String surname = rs.getString("Surname");
-+                String emailAddress = rs.getString("EmailAddress");
-+                String password = rs.getString("Password");
-+                Role role = Role.valueOf(rs.getString("Role").toUpperCase());
-+
-+                // Estrazione delle companies e trasformazione in lista
-+                String companiesString = rs.getString("Companies");
-+                List<String> companies = List.of(companiesString.split(","));
-+
-+                // Creazione del recruiter
-+                Recruiter recruiter = new Recruiter(name, surname, username, emailAddress, password, role, companies);
-+
-+                return Optional.of(recruiter);  // Ritorniamo il recruiter
-+            }
-+
-+        } catch (SQLException e) {
-+            e.printStackTrace();  // Gestione dell'errore
-+        }
-+
-+        return Optional.empty();  // Se non esiste un recruiter con quel username
-     }
-+
- 
-     @Override
-     public List<Recruiter> getAllRecruiter() {
--        return List.of();
-+        String sql = "SELECT * FROM RECRUITER";
-+        List<Recruiter> recruiters = new ArrayList<>();
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql);
-+             ResultSet rs = stmt.executeQuery()) {
-+
-+            while (rs.next()) {
-+                // Estrazione dei dati
-+                String username = rs.getString("Username");
-+                String name = rs.getString("Name");
-+                String surname = rs.getString("Surname");
-+                String emailAddress = rs.getString("EmailAddress");
-+                String password = rs.getString("Password");
-+                Role role = Role.valueOf(rs.getString("Role").toUpperCase());
-+
-+                // Estrazione delle companies e trasformazione in lista
-+                String companiesString = rs.getString("Companies");
-+                List<String> companies = List.of(companiesString.split(","));
-+
-+                // Creazione del recruiter
-+                Recruiter recruiter = new Recruiter(name, surname, username, emailAddress, password, role, companies);
-+                recruiters.add(recruiter); // Aggiungi alla lista
-+            }
-+
-+        } catch (SQLException e) {
-+            e.printStackTrace(); // Gestione dell'errore
-+        }
-+
-+        return recruiters; // Ritorna la lista di recruiter
-     }
- 
-     @Override
-     public boolean updateRecruiter(Recruiter recruiter) {
-+        String sql = "UPDATE RECRUITER SET Name = ?, Surname = ?, EmailAddress = ?, Password = ?, Companies = ? WHERE Username = ?";
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+            // Impostazione dei parametri della query
-+            stmt.setString(1, recruiter.getName());
-+            stmt.setString(2, recruiter.getSurname());
-+            stmt.setString(3, recruiter.getEmailAddress());
-+            stmt.setString(4, recruiter.getPassword());
-+
-+            // Le aziende devono essere memorizzate come stringa separata da virgole
-+            String companies = String.join(",", recruiter.getCompanies());
-+            stmt.setString(5, companies);
-+
-+            stmt.setString(6, recruiter.getUsername());
-+
-+            // Esegui l'update e ritorna true se è stato modificato almeno un record
-+            int rowsUpdated = stmt.executeUpdate();
-+            return rowsUpdated > 0;
-+
-+        } catch (SQLException e) {
-+            e.printStackTrace();
-+        }
-         return false;
-     }
- 
-     @Override
-     public boolean deleteRecruiter(String username) {
-+        String sql = "DELETE FROM RECRUITER WHERE Username = ?";
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+            // Impostazione del parametro per il nome utente
-+            stmt.setString(1, username);
-+
-+            // Esegui la delete e ritorna true se almeno una riga è stata eliminata
-+            int rowsDeleted = stmt.executeUpdate();
-+            return rowsDeleted > 0;
-+
-+        } catch (SQLException e) {
-+            e.printStackTrace();
-+        }
-         return false;
-     }
- 
-     @Override
-     public boolean recruiterExists(String username) {
--        return false;
-+        String sql = "SELECT COUNT(*) FROM RECRUITER WHERE Username = ?";
-+
-+        try (Connection conn = DatabaseConfig.getInstance().getConnection();
-+             PreparedStatement stmt = conn.prepareStatement(sql)) {
-+
-+            // Imposta il parametro username
-+            stmt.setString(1, username);
-+
-+            try (ResultSet rs = stmt.executeQuery()) {
-+                if (rs.next()) {
-+                    int count = rs.getInt(1); // Ottieni il numero di righe trovate
-+                    return count > 0; // Se count è maggiore di 0, l'utente esiste
-+                }
-+            }
-+        } catch (SQLException e) {
-+            e.printStackTrace();
-+        }
-+        return false; // Se non ci sono risultati, il recruiter non esiste
-     }
-+
- }
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_29_01_25__13_02__Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25__13_02__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25__13_02__Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25__13_02__Changes_.xml	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ /dev/null	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_29_01_25,_13_02_[Changes]" date="1738152174949" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_13_02_[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 29/01/25, 13:02 [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_29_01_25__13_10__Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25__13_10__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25__13_10__Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25__13_10__Changes_.xml	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ /dev/null	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_29_01_25,_13_10_[Changes]" date="1738152630032" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_13_10_[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 29/01/25, 13:10 [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_11_45_[Changes]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_11_45_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_11_45_[Changes]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_11_45_[Changes]/shelved.patch	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ /dev/null	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-@@ -1,185 +0,0 @@
--Index: src/main/java/it/model/dao/abstractobjects/UserDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.abstractobjects;\n\nimport it.model.entity.User;\n\npublic interface UserDao {\n\n    void createUser(User user);\n    User getUser(int id);\n\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/abstractobjects/UserDao.java b/src/main/java/it/model/dao/abstractobjects/UserDao.java
----- a/src/main/java/it/model/dao/abstractobjects/UserDao.java	(revision 957cfc4114cc9b53da64933351f09d1691ea4b30)
--+++ b/src/main/java/it/model/dao/abstractobjects/UserDao.java	(date 1738190998684)
--@@ -2,6 +2,8 @@
-- 
-- import it.model.entity.User;
-- 
--+import java.util.Optional;
--+
-- public interface UserDao {
-- 
--     void createUser(User user);
--Index: src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.concreteobjects;\n\nimport it.model.dao.abstractobjects.UserDao;\nimport it.model.entity.User;\n\npublic class DataBaseUserDao implements UserDao {\n    @Override\n    public void createUser(User user) {\n    }\n\n    @Override\n    public User getUser(int id) {\n        return null;\n    }\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java b/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java
----- a/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java	(revision 957cfc4114cc9b53da64933351f09d1691ea4b30)
--+++ b/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java	(date 1738190998688)
--@@ -1,15 +1,34 @@
-- package it.model.dao.concreteobjects;
-- 
--+import it.config.ConfigDaoLoader;
-- import it.model.dao.abstractobjects.UserDao;
-- import it.model.entity.User;
-- 
--+import java.sql.Connection;
--+import java.util.Optional;
--+
-- public class DataBaseUserDao implements UserDao {
--+
--+    public DataBaseUserDao(){
--+
--+
--+
--+    }
--+
--+
--+
--     @Override
--     public void createUser(User user) {
--+
--+
--     }
-- 
--     @Override
--     public User getUser(int id) {
--+
--+
--         return null;
--+
--+
--     }
-- }
--Index: src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.abstractobjects;\n\nimport it.model.entity.JobAnnouncement;\n\npublic interface JobAnnouncementDao {\n\n    void createJobAnnouncement(JobAnnouncement jobAnnouncement);\n    JobAnnouncement getJobAnnouncement(int id);\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java b/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java
----- a/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java	(revision 957cfc4114cc9b53da64933351f09d1691ea4b30)
--+++ b/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java	(date 1738190998691)
--@@ -2,8 +2,11 @@
-- 
-- import it.model.entity.JobAnnouncement;
-- 
--+import java.util.Optional;
--+
-- public interface JobAnnouncementDao {
-- 
--     void createJobAnnouncement(JobAnnouncement jobAnnouncement);
--     JobAnnouncement getJobAnnouncement(int id);
--+
-- }
--Index: .idea/workspace.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"Quinto Commit: Fine Db\">\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/it/pattern/state/abstractstate/CliState.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/it/pattern/state/concretestate/ExitState.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/it/pattern/state/concretestate/LoginState.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/it/pattern/state/concretestate/MainMenuState.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/it/pattern/state/concretestate/RegisterState.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/it/pattern/state/contextstate/CliContext.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/Main.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/model/entity/JobAnnouncement.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/model/entity/JobAnnouncement.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/ui.config.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/ui.config.properties\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Exception\" />\n        <option value=\"Enum\" />\n        <option value=\"FxmlFile\" />\n        <option value=\"Interface\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;GaiaMeola&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/GaiaMeola/toGetJob.git&quot;,\n    &quot;accountId&quot;: &quot;0a1af48d-9cff-4190-bde9-bd5096772376&quot;\n  }\n}</component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\n  <component name=\"ProjectId\" id=\"2nypPqqlu30o2C6FKHNbd1EkQVy\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;SONARLINT_PRECOMMIT_ANALYSIS&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/gaiameola/Desktop/ISPW/toGetJob/src/main/resources/org/example/togetjob&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources\" />\n      <recent name=\"$PROJECT_DIR$/src/main/resources/Configurations\" />\n      <recent name=\"$PROJECT_DIR$/target/classes/org/Configurations\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"\" />\n      <created>1729955148511</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1729955148511</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1729955369659</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1729955369659</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663831106</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663831106</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663851839</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663851839</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883418179</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883418179</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883426699</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883426699</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883439672</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883439672</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086967897</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086967897</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086982811</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086982811</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Terzo Commit: Prova Database\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738142978544</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738142978544</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Quarto Commit: Connection prova\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152156784</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152156784</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Quarto Commit: Connection riuscita\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152567157</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152567157</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Quinto Commit: Fine Db\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738157742126</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738157742126</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"13\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Primo Commit\" />\n    <MESSAGE value=\"Secondo Commit: bozza Abstract Factory\" />\n    <MESSAGE value=\"Secondo Commit: Abstract Factory + Singleton completo\" />\n    <MESSAGE value=\"Terzo Commit: Aggiunta Entity\" />\n    <MESSAGE value=\"Terzo Commit: Prova Database\" />\n    <MESSAGE value=\"Quarto Commit: Connection prova\" />\n    <MESSAGE value=\"Quarto Commit: Connection riuscita\" />\n    <MESSAGE value=\"Quinto Commit: Fine Db\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Quinto Commit: Fine Db\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"java-field\">\n          <url>file://$PROJECT_DIR$/src/main/java/it/model/entity/Student.java</url>\n          <line>14</line>\n          <properties field=\"availability\" class=\"it.model.entity.Student\" />\n          <option name=\"timeStamp\" value=\"12\" />\n        </line-breakpoint>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\n          <option name=\"timeStamp\" value=\"14\" />\n        </breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/workspace.xml b/.idea/workspace.xml
----- a/.idea/workspace.xml	(revision 957cfc4114cc9b53da64933351f09d1691ea4b30)
--+++ b/.idea/workspace.xml	(date 1738191600347)
--@@ -4,17 +4,12 @@
--     <option name="autoReloadType" value="SELECTIVE" />
--   </component>
--   <component name="ChangeListManager">
---    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Quinto Commit: Fine Db">
---      <change afterPath="$PROJECT_DIR$/src/main/java/it/pattern/state/abstractstate/CliState.java" afterDir="false" />
---      <change afterPath="$PROJECT_DIR$/src/main/java/it/pattern/state/concretestate/ExitState.java" afterDir="false" />
---      <change afterPath="$PROJECT_DIR$/src/main/java/it/pattern/state/concretestate/LoginState.java" afterDir="false" />
---      <change afterPath="$PROJECT_DIR$/src/main/java/it/pattern/state/concretestate/MainMenuState.java" afterDir="false" />
---      <change afterPath="$PROJECT_DIR$/src/main/java/it/pattern/state/concretestate/RegisterState.java" afterDir="false" />
---      <change afterPath="$PROJECT_DIR$/src/main/java/it/pattern/state/contextstate/CliContext.java" afterDir="false" />
--+    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Quarto Commit: Connection riuscita">
--       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/it/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/Main.java" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/entity/JobAnnouncement.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/entity/JobAnnouncement.java" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/resources/ui.config.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/ui.config.properties" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/UserDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/UserDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java" afterDir="false" />
--     </list>
--     <option name="SHOW_DIALOG" value="false" />
--     <option name="HIGHLIGHT_CONFLICTS" value="true" />
--@@ -25,9 +20,9 @@
--     <option name="RECENT_TEMPLATES">
--       <list>
--         <option value="Exception" />
--+        <option value="Interface" />
--         <option value="Enum" />
--         <option value="FxmlFile" />
---        <option value="Interface" />
--         <option value="Class" />
--       </list>
--     </option>
--@@ -187,15 +182,7 @@
--       <option name="project" value="LOCAL" />
--       <updated>1738152567157</updated>
--     </task>
---    <task id="LOCAL-00012" summary="Quinto Commit: Fine Db">
---      <option name="closed" value="true" />
---      <created>1738157742126</created>
---      <option name="number" value="00012" />
---      <option name="presentableId" value="LOCAL-00012" />
---      <option name="project" value="LOCAL" />
---      <updated>1738157742126</updated>
---    </task>
---    <option name="localTasksCounter" value="13" />
--+    <option name="localTasksCounter" value="12" />
--     <servers />
--   </component>
--   <component name="Vcs.Log.Tabs.Properties">
--@@ -217,8 +204,7 @@
--     <MESSAGE value="Terzo Commit: Prova Database" />
--     <MESSAGE value="Quarto Commit: Connection prova" />
--     <MESSAGE value="Quarto Commit: Connection riuscita" />
---    <MESSAGE value="Quinto Commit: Fine Db" />
---    <option name="LAST_COMMIT_MESSAGE" value="Quinto Commit: Fine Db" />
--+    <option name="LAST_COMMIT_MESSAGE" value="Quarto Commit: Connection riuscita" />
--   </component>
--   <component name="XDebuggerManager">
--     <breakpoint-manager>
--Index: src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.concreteobjects;\n\nimport it.model.dao.abstractobjects.JobAnnouncementDao;\nimport it.model.entity.JobAnnouncement;\n\npublic class DataBaseJobAnnouncementDao implements JobAnnouncementDao {\n    @Override\n    public void createJobAnnouncement(JobAnnouncement jobAnnouncement) {\n\n    }\n\n    @Override\n    public JobAnnouncement getJobAnnouncement(int id) {\n        return null;\n    }\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java b/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java
----- a/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java	(revision 957cfc4114cc9b53da64933351f09d1691ea4b30)
--+++ b/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java	(date 1738191001063)
--@@ -3,6 +3,8 @@
-- import it.model.dao.abstractobjects.JobAnnouncementDao;
-- import it.model.entity.JobAnnouncement;
-- 
--+import java.util.Optional;
--+
-- public class DataBaseJobAnnouncementDao implements JobAnnouncementDao {
--     @Override
--     public void createJobAnnouncement(JobAnnouncement jobAnnouncement) {
--@@ -11,6 +13,8 @@
-- 
--     @Override
--     public JobAnnouncement getJobAnnouncement(int id) {
--+
--         return null;
--+
--     }
-- }
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_23_49_[Changes]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_23_49_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_23_49_[Changes]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_23_49_[Changes]/shelved.patch	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ /dev/null	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-@@ -1,209 +0,0 @@
--Index: src/main/java/it/model/dao/abstractobjects/UserDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.abstractobjects;\n\nimport it.model.entity.User;\n\npublic interface UserDao {\n\n    void createUser(User user);\n    User getUser(int id);\n\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/abstractobjects/UserDao.java b/src/main/java/it/model/dao/abstractobjects/UserDao.java
----- a/src/main/java/it/model/dao/abstractobjects/UserDao.java	(revision 67765a8194750ee3ea2192388b49710eec1980fb)
--+++ b/src/main/java/it/model/dao/abstractobjects/UserDao.java	(date 1738165830131)
--@@ -2,6 +2,8 @@
-- 
-- import it.model.entity.User;
-- 
--+import java.util.Optional;
--+
-- public interface UserDao {
-- 
--     void createUser(User user);
--Index: src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.concreteobjects;\n\nimport it.model.dao.abstractobjects.UserDao;\nimport it.model.entity.User;\n\npublic class DataBaseUserDao implements UserDao {\n    @Override\n    public void createUser(User user) {\n    }\n\n    @Override\n    public User getUser(int id) {\n        return null;\n    }\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java b/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java
----- a/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java	(revision 67765a8194750ee3ea2192388b49710eec1980fb)
--+++ b/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java	(date 1738165830136)
--@@ -1,15 +1,34 @@
-- package it.model.dao.concreteobjects;
-- 
--+import it.config.ConfigDaoLoader;
-- import it.model.dao.abstractobjects.UserDao;
-- import it.model.entity.User;
-- 
--+import java.sql.Connection;
--+import java.util.Optional;
--+
-- public class DataBaseUserDao implements UserDao {
--+
--+    public DataBaseUserDao(){
--+
--+
--+
--+    }
--+
--+
--+
--     @Override
--     public void createUser(User user) {
--+
--+
--     }
-- 
--     @Override
--     public User getUser(int id) {
--+
--+
--         return null;
--+
--+
--     }
-- }
--Index: src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.abstractobjects;\n\nimport it.model.entity.JobAnnouncement;\n\npublic interface JobAnnouncementDao {\n\n    void createJobAnnouncement(JobAnnouncement jobAnnouncement);\n    JobAnnouncement getJobAnnouncement(int id);\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java b/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java
----- a/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java	(revision 67765a8194750ee3ea2192388b49710eec1980fb)
--+++ b/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java	(date 1738165827100)
--@@ -2,8 +2,11 @@
-- 
-- import it.model.entity.JobAnnouncement;
-- 
--+import java.util.Optional;
--+
-- public interface JobAnnouncementDao {
-- 
--     void createJobAnnouncement(JobAnnouncement jobAnnouncement);
--     JobAnnouncement getJobAnnouncement(int id);
--+
-- }
--Index: .idea/workspace.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"Quarto Commit: Connection riuscita\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/config/ConfigDaoLoader.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/config/ConfigDaoLoader.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/connection/DatabaseConfig.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/connection/DatabaseConfig.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/dao.config.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/dao.config.properties\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/db.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/db.properties\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Exception\" />\n        <option value=\"Interface\" />\n        <option value=\"Enum\" />\n        <option value=\"FxmlFile\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;GaiaMeola&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/GaiaMeola/toGetJob.git&quot;,\n    &quot;accountId&quot;: &quot;0a1af48d-9cff-4190-bde9-bd5096772376&quot;\n  }\n}</component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\n  <component name=\"ProjectId\" id=\"2nypPqqlu30o2C6FKHNbd1EkQVy\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"Application.HelloApplication.executor\": \"Run\",\n    \"Application.Main.executor\": \"Run\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"RunOnceActivity.git.unshallow\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"SONARLINT_PRECOMMIT_ANALYSIS\": \"true\",\n    \"git-widget-placeholder\": \"master\",\n    \"kotlin-language-version-configured\": \"true\",\n    \"last_opened_file_path\": \"/Users/gaiameola/Desktop/ISPW/toGetJob/src/main/resources/org/example/togetjob\",\n    \"project.structure.last.edited\": \"Libraries\",\n    \"project.structure.proportion\": \"0.15\",\n    \"project.structure.side.proportion\": \"0.2\",\n    \"settings.editor.selected.configurable\": \"preferences.JavaFX\"\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources\" />\n      <recent name=\"$PROJECT_DIR$/src/main/resources/Configurations\" />\n      <recent name=\"$PROJECT_DIR$/target/classes/org/Configurations\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"\" />\n      <created>1729955148511</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1729955148511</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1729955369659</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1729955369659</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663831106</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663831106</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663851839</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663851839</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883418179</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883418179</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883426699</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883426699</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883439672</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883439672</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086967897</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086967897</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086982811</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086982811</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Terzo Commit: Prova Database\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738142978544</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738142978544</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Quarto Commit: Connection prova\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152156784</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152156784</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Quarto Commit: Connection riuscita\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152567157</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152567157</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"12\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Primo Commit\" />\n    <MESSAGE value=\"Secondo Commit: bozza Abstract Factory\" />\n    <MESSAGE value=\"Secondo Commit: Abstract Factory + Singleton completo\" />\n    <MESSAGE value=\"Terzo Commit: Aggiunta Entity\" />\n    <MESSAGE value=\"Terzo Commit: Prova Database\" />\n    <MESSAGE value=\"Quarto Commit: Connection prova\" />\n    <MESSAGE value=\"Quarto Commit: Connection riuscita\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Quarto Commit: Connection riuscita\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"java-field\">\n          <url>file://$PROJECT_DIR$/src/main/java/it/model/entity/Student.java</url>\n          <line>14</line>\n          <properties field=\"availability\" class=\"it.model.entity.Student\" />\n          <option name=\"timeStamp\" value=\"12\" />\n        </line-breakpoint>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\n          <option name=\"timeStamp\" value=\"14\" />\n        </breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/workspace.xml b/.idea/workspace.xml
----- a/.idea/workspace.xml	(revision 67765a8194750ee3ea2192388b49710eec1980fb)
--+++ b/.idea/workspace.xml	(date 1738166190743)
--@@ -4,12 +4,12 @@
--     <option name="autoReloadType" value="SELECTIVE" />
--   </component>
--   <component name="ChangeListManager">
---    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Quarto Commit: Connection riuscita">
--+    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Quarto Commit: Connection prova">
--       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/it/config/ConfigDaoLoader.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/config/ConfigDaoLoader.java" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/it/connection/DatabaseConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/connection/DatabaseConfig.java" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/resources/dao.config.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/dao.config.properties" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/resources/db.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/db.properties" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/UserDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/UserDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java" afterDir="false" />
--     </list>
--     <option name="SHOW_DIALOG" value="false" />
--     <option name="HIGHLIGHT_CONFLICTS" value="true" />
--@@ -58,23 +58,23 @@
--     <option name="hideEmptyMiddlePackages" value="true" />
--     <option name="showLibraryContents" value="true" />
--   </component>
---  <component name="PropertiesComponent"><![CDATA[{
---  "keyToString": {
---    "Application.HelloApplication.executor": "Run",
---    "Application.Main.executor": "Run",
---    "RunOnceActivity.ShowReadmeOnStart": "true",
---    "RunOnceActivity.git.unshallow": "true",
---    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
---    "SONARLINT_PRECOMMIT_ANALYSIS": "true",
---    "git-widget-placeholder": "master",
---    "kotlin-language-version-configured": "true",
---    "last_opened_file_path": "/Users/gaiameola/Desktop/ISPW/toGetJob/src/main/resources/org/example/togetjob",
---    "project.structure.last.edited": "Libraries",
---    "project.structure.proportion": "0.15",
---    "project.structure.side.proportion": "0.2",
---    "settings.editor.selected.configurable": "preferences.JavaFX"
--+  <component name="PropertiesComponent">{
--+  &quot;keyToString&quot;: {
--+    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,
--+    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
--+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
--+    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
--+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
--+    &quot;SONARLINT_PRECOMMIT_ANALYSIS&quot;: &quot;true&quot;,
--+    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
--+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
--+    &quot;last_opened_file_path&quot;: &quot;/Users/gaiameola/Desktop/ISPW/toGetJob/src/main/resources/org/example/togetjob&quot;,
--+    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,
--+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
--+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
--+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;
--   }
---}]]></component>
--+}</component>
--   <component name="RecentsManager">
--     <key name="CopyFile.RECENT_KEYS">
--       <recent name="$PROJECT_DIR$/src/main/resources/org/example/togetjob" />
--@@ -174,15 +174,7 @@
--       <option name="project" value="LOCAL" />
--       <updated>1738152156784</updated>
--     </task>
---    <task id="LOCAL-00011" summary="Quarto Commit: Connection riuscita">
---      <option name="closed" value="true" />
---      <created>1738152567157</created>
---      <option name="number" value="00011" />
---      <option name="presentableId" value="LOCAL-00011" />
---      <option name="project" value="LOCAL" />
---      <updated>1738152567157</updated>
---    </task>
---    <option name="localTasksCounter" value="12" />
--+    <option name="localTasksCounter" value="11" />
--     <servers />
--   </component>
--   <component name="Vcs.Log.Tabs.Properties">
--@@ -203,8 +195,7 @@
--     <MESSAGE value="Terzo Commit: Aggiunta Entity" />
--     <MESSAGE value="Terzo Commit: Prova Database" />
--     <MESSAGE value="Quarto Commit: Connection prova" />
---    <MESSAGE value="Quarto Commit: Connection riuscita" />
---    <option name="LAST_COMMIT_MESSAGE" value="Quarto Commit: Connection riuscita" />
--+    <option name="LAST_COMMIT_MESSAGE" value="Quarto Commit: Connection prova" />
--   </component>
--   <component name="XDebuggerManager">
--     <breakpoint-manager>
--Index: src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.concreteobjects;\n\nimport it.model.dao.abstractobjects.JobAnnouncementDao;\nimport it.model.entity.JobAnnouncement;\n\npublic class DataBaseJobAnnouncementDao implements JobAnnouncementDao {\n    @Override\n    public void createJobAnnouncement(JobAnnouncement jobAnnouncement) {\n\n    }\n\n    @Override\n    public JobAnnouncement getJobAnnouncement(int id) {\n        return null;\n    }\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java b/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java
----- a/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java	(revision 67765a8194750ee3ea2192388b49710eec1980fb)
--+++ b/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java	(date 1738165830126)
--@@ -3,6 +3,8 @@
-- import it.model.dao.abstractobjects.JobAnnouncementDao;
-- import it.model.entity.JobAnnouncement;
-- 
--+import java.util.Optional;
--+
-- public class DataBaseJobAnnouncementDao implements JobAnnouncementDao {
--     @Override
--     public void createJobAnnouncement(JobAnnouncement jobAnnouncement) {
--@@ -11,6 +13,8 @@
-- 
--     @Override
--     public JobAnnouncement getJobAnnouncement(int id) {
--+
--         return null;
--+
--     }
-- }
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_11_50_[Changes]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_11_50_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_11_50_[Changes]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_11_50_[Changes]/shelved.patch	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ /dev/null	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-@@ -1,216 +0,0 @@
--Index: src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.abstractobjects;\n\nimport it.model.entity.JobAnnouncement;\n\npublic interface JobAnnouncementDao {\n\n    void createJobAnnouncement(JobAnnouncement jobAnnouncement);\n    JobAnnouncement getJobAnnouncement(int id);\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java b/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java
----- a/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java	(revision 4e3262832b11e9cf13cc18ce6ae0cdc7e1dcb6ec)
--+++ b/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java	(date 1738233937494)
--@@ -2,8 +2,11 @@
-- 
-- import it.model.entity.JobAnnouncement;
-- 
--+import java.util.Optional;
--+
-- public interface JobAnnouncementDao {
-- 
--     void createJobAnnouncement(JobAnnouncement jobAnnouncement);
--     JobAnnouncement getJobAnnouncement(int id);
--+
-- }
--Index: .idea/workspace.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"Sesto Commit: Pattern State CLI prova\">\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/it/bean/LoginUserBean.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/it/bean/RegisterUserBean.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/it/controller/LoginController.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/it/controller/RegisterController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/controller/ControllerApplicativo/LoginController.java\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/controller/ControllerApplicativo/RegisterController.java\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/controller/ControllerGrafico/fwf.java\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/UserDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/UserDao.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/FileSystemUserDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/FileSystemUserDao.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/InMemoryUserDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/InMemoryUserDao.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/model/entity/JobAnnouncement.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/model/entity/JobAnnouncement.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/model/entity/Recruiter.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/model/entity/Recruiter.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/model/entity/Student.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/model/entity/Student.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/model/entity/User.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/model/entity/User.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/pattern/state/contextstate/CliContext.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/pattern/state/contextstate/CliContext.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/dao.config.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/dao.config.properties\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Exception\" />\n        <option value=\"Enum\" />\n        <option value=\"FxmlFile\" />\n        <option value=\"Interface\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;GaiaMeola&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/GaiaMeola/toGetJob.git&quot;,\n    &quot;accountId&quot;: &quot;0a1af48d-9cff-4190-bde9-bd5096772376&quot;\n  }\n}</component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\n  <component name=\"ProjectId\" id=\"2nypPqqlu30o2C6FKHNbd1EkQVy\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;SONARLINT_PRECOMMIT_ANALYSIS&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/gaiameola/Desktop/ISPW/toGetJob/src/main/resources/org/example/togetjob&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources\" />\n      <recent name=\"$PROJECT_DIR$/src/main/resources/Configurations\" />\n      <recent name=\"$PROJECT_DIR$/target/classes/org/Configurations\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"\" />\n      <created>1729955148511</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1729955148511</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1729955369659</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1729955369659</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663831106</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663831106</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663851839</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663851839</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883418179</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883418179</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883426699</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883426699</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883439672</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883439672</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086967897</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086967897</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086982811</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086982811</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Terzo Commit: Prova Database\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738142978544</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738142978544</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Quarto Commit: Connection prova\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152156784</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152156784</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Quarto Commit: Connection riuscita\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152567157</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152567157</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Quinto Commit: Fine Db\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738157742126</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738157742126</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Sesto Commit: Pattern State CLI prova\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738179850232</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738179850233</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"14\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Primo Commit\" />\n    <MESSAGE value=\"Secondo Commit: bozza Abstract Factory\" />\n    <MESSAGE value=\"Secondo Commit: Abstract Factory + Singleton completo\" />\n    <MESSAGE value=\"Terzo Commit: Aggiunta Entity\" />\n    <MESSAGE value=\"Terzo Commit: Prova Database\" />\n    <MESSAGE value=\"Quarto Commit: Connection prova\" />\n    <MESSAGE value=\"Quarto Commit: Connection riuscita\" />\n    <MESSAGE value=\"Quinto Commit: Fine Db\" />\n    <MESSAGE value=\"Sesto Commit: Pattern State CLI prova\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Sesto Commit: Pattern State CLI prova\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\n          <option name=\"timeStamp\" value=\"14\" />\n        </breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/workspace.xml b/.idea/workspace.xml
----- a/.idea/workspace.xml	(revision 4e3262832b11e9cf13cc18ce6ae0cdc7e1dcb6ec)
--+++ b/.idea/workspace.xml	(date 1738233954360)
--@@ -4,25 +4,12 @@
--     <option name="autoReloadType" value="SELECTIVE" />
--   </component>
--   <component name="ChangeListManager">
---    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Sesto Commit: Pattern State CLI prova">
---      <change afterPath="$PROJECT_DIR$/src/main/java/it/bean/LoginUserBean.java" afterDir="false" />
---      <change afterPath="$PROJECT_DIR$/src/main/java/it/bean/RegisterUserBean.java" afterDir="false" />
---      <change afterPath="$PROJECT_DIR$/src/main/java/it/controller/LoginController.java" afterDir="false" />
---      <change afterPath="$PROJECT_DIR$/src/main/java/it/controller/RegisterController.java" afterDir="false" />
--+    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Quinto Commit: Fine Db">
--       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/it/controller/ControllerApplicativo/LoginController.java" beforeDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/it/controller/ControllerApplicativo/RegisterController.java" beforeDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/it/controller/ControllerGrafico/fwf.java" beforeDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java" afterDir="false" />
--       <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/UserDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/UserDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java" afterDir="false" />
--       <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/FileSystemUserDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/FileSystemUserDao.java" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/InMemoryUserDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/InMemoryUserDao.java" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/entity/JobAnnouncement.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/entity/JobAnnouncement.java" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/entity/Recruiter.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/entity/Recruiter.java" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/entity/Student.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/entity/Student.java" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/entity/User.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/entity/User.java" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/it/pattern/state/contextstate/CliContext.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/pattern/state/contextstate/CliContext.java" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/resources/dao.config.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/dao.config.properties" afterDir="false" />
--     </list>
--     <option name="SHOW_DIALOG" value="false" />
--     <option name="HIGHLIGHT_CONFLICTS" value="true" />
--@@ -49,12 +36,12 @@
--     &quot;assignee&quot;: &quot;GaiaMeola&quot;
--   }
-- }</component>
---  <component name="GithubPullRequestsUISettings">{
---  &quot;selectedUrlAndAccountId&quot;: {
---    &quot;url&quot;: &quot;https://github.com/GaiaMeola/toGetJob.git&quot;,
---    &quot;accountId&quot;: &quot;0a1af48d-9cff-4190-bde9-bd5096772376&quot;
---  }
---}</component>
--+  <component name="GithubPullRequestsUISettings"><![CDATA[{
--+  "selectedUrlAndAccountId": {
--+    "url": "https://github.com/GaiaMeola/toGetJob.git",
--+    "accountId": "10ff2728-a55b-45dc-b4f1-a35abedc973c"
--+  }
--+}]]></component>
--   <component name="MavenImportPreferences">
--     <option name="generalSettings">
--       <MavenGeneralSettings>
--@@ -203,15 +190,7 @@
--       <option name="project" value="LOCAL" />
--       <updated>1738157742126</updated>
--     </task>
---    <task id="LOCAL-00013" summary="Sesto Commit: Pattern State CLI prova">
---      <option name="closed" value="true" />
---      <created>1738179850232</created>
---      <option name="number" value="00013" />
---      <option name="presentableId" value="LOCAL-00013" />
---      <option name="project" value="LOCAL" />
---      <updated>1738179850233</updated>
---    </task>
---    <option name="localTasksCounter" value="14" />
--+    <option name="localTasksCounter" value="13" />
--     <servers />
--   </component>
--   <component name="Vcs.Log.Tabs.Properties">
--@@ -234,12 +213,17 @@
--     <MESSAGE value="Quarto Commit: Connection prova" />
--     <MESSAGE value="Quarto Commit: Connection riuscita" />
--     <MESSAGE value="Quinto Commit: Fine Db" />
---    <MESSAGE value="Sesto Commit: Pattern State CLI prova" />
---    <option name="LAST_COMMIT_MESSAGE" value="Sesto Commit: Pattern State CLI prova" />
--+    <option name="LAST_COMMIT_MESSAGE" value="Quinto Commit: Fine Db" />
--   </component>
--   <component name="XDebuggerManager">
--     <breakpoint-manager>
--       <breakpoints>
--+        <line-breakpoint enabled="true" type="java-field">
--+          <url>file://$PROJECT_DIR$/src/main/java/it/model/entity/Student.java</url>
--+          <line>14</line>
--+          <properties field="availability" class="it.model.entity.Student" />
--+          <option name="timeStamp" value="12" />
--+        </line-breakpoint>
--         <breakpoint enabled="true" type="java-exception">
--           <properties class="java.lang.NullPointerException" package="java.lang" />
--           <option name="timeStamp" value="14" />
--Index: src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.concreteobjects;\n\nimport it.model.dao.abstractobjects.JobAnnouncementDao;\nimport it.model.entity.JobAnnouncement;\n\npublic class DataBaseJobAnnouncementDao implements JobAnnouncementDao {\n    @Override\n    public void createJobAnnouncement(JobAnnouncement jobAnnouncement) {\n\n    }\n\n    @Override\n    public JobAnnouncement getJobAnnouncement(int id) {\n        return null;\n    }\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java b/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java
----- a/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java	(revision 4e3262832b11e9cf13cc18ce6ae0cdc7e1dcb6ec)
--+++ b/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java	(date 1738233940232)
--@@ -3,6 +3,8 @@
-- import it.model.dao.abstractobjects.JobAnnouncementDao;
-- import it.model.entity.JobAnnouncement;
-- 
--+import java.util.Optional;
--+
-- public class DataBaseJobAnnouncementDao implements JobAnnouncementDao {
--     @Override
--     public void createJobAnnouncement(JobAnnouncement jobAnnouncement) {
--@@ -11,6 +13,8 @@
-- 
--     @Override
--     public JobAnnouncement getJobAnnouncement(int id) {
--+
--         return null;
--+
--     }
-- }
--Index: src/main/java/it/model/dao/abstractobjects/UserDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.abstractobjects;\n\nimport it.model.entity.User;\n\nimport java.util.List;\nimport java.util.Optional;\n\npublic interface UserDao {\n\n    boolean saveUser(User user);\n    Optional<User> getUser(String username);\n    List<User> getAllUsers();\n    boolean updateUser(User user);\n    boolean deleteUser(String username);\n    boolean userExists(String username);\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/abstractobjects/UserDao.java b/src/main/java/it/model/dao/abstractobjects/UserDao.java
----- a/src/main/java/it/model/dao/abstractobjects/UserDao.java	(revision 4e3262832b11e9cf13cc18ce6ae0cdc7e1dcb6ec)
--+++ b/src/main/java/it/model/dao/abstractobjects/UserDao.java	(date 1738233933350)
--@@ -5,6 +5,8 @@
-- import java.util.List;
-- import java.util.Optional;
-- 
--+import java.util.Optional;
--+
-- public interface UserDao {
-- 
--     boolean saveUser(User user);
--Index: src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.concreteobjects;\n\nimport it.model.dao.abstractobjects.UserDao;\nimport it.model.entity.User;\n\nimport java.util.List;\nimport java.util.Optional;\n\npublic class DataBaseUserDao implements UserDao {\n\n    @Override\n    public boolean saveUser(User user) {\n        return false;\n    }\n\n    @Override\n    public Optional<User> getUser(String username) {\n        return Optional.empty();\n    }\n\n    @Override\n    public List<User> getAllUsers() {\n        return List.of();\n    }\n\n    @Override\n    public boolean updateUser(User user) {\n        return false;\n    }\n\n    @Override\n    public boolean deleteUser(String username) {\n        return false;\n    }\n\n    @Override\n    public boolean userExists(String username) {\n        return false;\n    }\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java b/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java
----- a/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java	(revision 4e3262832b11e9cf13cc18ce6ae0cdc7e1dcb6ec)
--+++ b/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java	(date 1738233937467)
--@@ -3,38 +3,13 @@
-- import it.model.dao.abstractobjects.UserDao;
-- import it.model.entity.User;
-- 
---import java.util.List;
---import java.util.Optional;
---
-- public class DataBaseUserDao implements UserDao {
---
---    @Override
---    public boolean saveUser(User user) {
---        return false;
---    }
---
---    @Override
---    public Optional<User> getUser(String username) {
---        return Optional.empty();
---    }
---
---    @Override
---    public List<User> getAllUsers() {
---        return List.of();
---    }
---
--     @Override
---    public boolean updateUser(User user) {
---        return false;
--+    public void createUser(User user) {
--     }
-- 
--     @Override
---    public boolean deleteUser(String username) {
---        return false;
---    }
---
---    @Override
---    public boolean userExists(String username) {
---        return false;
--+    public User getUser(int id) {
--+        return null;
--     }
-- }
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_12_06_[Changes]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_12_06_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_12_06_[Changes]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_12_06_[Changes]/shelved.patch	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ /dev/null	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-@@ -1,176 +0,0 @@
--Index: src/main/java/it/model/dao/abstractobjects/UserDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.abstractobjects;\n\nimport it.model.entity.User;\n\nimport java.util.List;\nimport java.util.Optional;\n\npublic interface UserDao {\n\n    boolean saveUser(User user);\n    Optional<User> getUser(String username);\n    List<User> getAllUsers();\n    boolean updateUser(User user);\n    boolean deleteUser(String username);\n    boolean userExists(String username);\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/abstractobjects/UserDao.java b/src/main/java/it/model/dao/abstractobjects/UserDao.java
----- a/src/main/java/it/model/dao/abstractobjects/UserDao.java	(revision aa8a0b0d97825d158de03edf704fd34384f83009)
--+++ b/src/main/java/it/model/dao/abstractobjects/UserDao.java	(date 1738234617508)
--@@ -5,6 +5,8 @@
-- import java.util.List;
-- import java.util.Optional;
-- 
--+import java.util.Optional;
--+
-- public interface UserDao {
-- 
--     boolean saveUser(User user);
--Index: src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.concreteobjects;\n\nimport it.model.dao.abstractobjects.UserDao;\nimport it.model.entity.User;\n\nimport java.util.List;\nimport java.util.Optional;\n\npublic class DataBaseUserDao implements UserDao {\n\n    @Override\n    public boolean saveUser(User user) {\n        return false;\n    }\n\n    @Override\n    public Optional<User> getUser(String username) {\n        return Optional.empty();\n    }\n\n    @Override\n    public List<User> getAllUsers() {\n        return List.of();\n    }\n\n    @Override\n    public boolean updateUser(User user) {\n        return false;\n    }\n\n    @Override\n    public boolean deleteUser(String username) {\n        return false;\n    }\n\n    @Override\n    public boolean userExists(String username) {\n        return false;\n    }\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java b/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java
----- a/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java	(revision aa8a0b0d97825d158de03edf704fd34384f83009)
--+++ b/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java	(date 1738234602428)
--@@ -3,38 +3,15 @@
-- import it.model.dao.abstractobjects.UserDao;
-- import it.model.entity.User;
-- 
---import java.util.List;
---import java.util.Optional;
---
-- public class DataBaseUserDao implements UserDao {
-- 
--     @Override
---    public boolean saveUser(User user) {
---        return false;
---    }
---
---    @Override
---    public Optional<User> getUser(String username) {
---        return Optional.empty();
---    }
---
---    @Override
---    public List<User> getAllUsers() {
---        return List.of();
---    }
---
---    @Override
---    public boolean updateUser(User user) {
---        return false;
--+    public void createUser(User user) {
--     }
-- 
--     @Override
---    public boolean deleteUser(String username) {
---        return false;
--+    public User getUser(int id) {
--+        return null;
--     }
-- 
---    @Override
---    public boolean userExists(String username) {
---        return false;
---    }
-- }
--Index: src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.abstractobjects;\n\nimport it.model.entity.JobAnnouncement;\n\npublic interface JobAnnouncementDao {\n\n    void createJobAnnouncement(JobAnnouncement jobAnnouncement);\n    JobAnnouncement getJobAnnouncement(int id);\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java b/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java
----- a/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java	(revision aa8a0b0d97825d158de03edf704fd34384f83009)
--+++ b/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java	(date 1738234602431)
--@@ -2,8 +2,11 @@
-- 
-- import it.model.entity.JobAnnouncement;
-- 
--+import java.util.Optional;
--+
-- public interface JobAnnouncementDao {
-- 
--     void createJobAnnouncement(JobAnnouncement jobAnnouncement);
--     JobAnnouncement getJobAnnouncement(int id);
--+
-- }
--Index: .idea/workspace.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"Settimo Commit: prova Caso d'uso Registrazione\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Exception\" />\n        <option value=\"Enum\" />\n        <option value=\"FxmlFile\" />\n        <option value=\"Interface\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;GaiaMeola&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/GaiaMeola/toGetJob.git&quot;,\n    &quot;accountId&quot;: &quot;0a1af48d-9cff-4190-bde9-bd5096772376&quot;\n  }\n}</component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\n  <component name=\"ProjectId\" id=\"2nypPqqlu30o2C6FKHNbd1EkQVy\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;SONARLINT_PRECOMMIT_ANALYSIS&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/gaiameola/Desktop/ISPW/toGetJob/src/main/resources/org/example/togetjob&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources\" />\n      <recent name=\"$PROJECT_DIR$/src/main/resources/Configurations\" />\n      <recent name=\"$PROJECT_DIR$/target/classes/org/Configurations\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"\" />\n      <created>1729955148511</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1729955148511</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1729955369659</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1729955369659</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663831106</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663831106</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663851839</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663851839</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883418179</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883418179</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883426699</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883426699</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883439672</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883439672</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086967897</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086967897</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086982811</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086982811</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Terzo Commit: Prova Database\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738142978544</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738142978544</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Quarto Commit: Connection prova\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152156784</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152156784</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Quarto Commit: Connection riuscita\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152567157</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152567157</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Quinto Commit: Fine Db\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738157742126</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738157742126</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Sesto Commit: Pattern State CLI prova\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738179850232</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738179850233</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"Settimo Commit: prova Caso d'uso Registrazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738233820826</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738233820826</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"Settimo Commit: prova Caso d'uso Registrazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738234210460</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738234210460</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"16\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Primo Commit\" />\n    <MESSAGE value=\"Secondo Commit: bozza Abstract Factory\" />\n    <MESSAGE value=\"Secondo Commit: Abstract Factory + Singleton completo\" />\n    <MESSAGE value=\"Terzo Commit: Aggiunta Entity\" />\n    <MESSAGE value=\"Terzo Commit: Prova Database\" />\n    <MESSAGE value=\"Quarto Commit: Connection prova\" />\n    <MESSAGE value=\"Quarto Commit: Connection riuscita\" />\n    <MESSAGE value=\"Quinto Commit: Fine Db\" />\n    <MESSAGE value=\"Sesto Commit: Pattern State CLI prova\" />\n    <MESSAGE value=\"Settimo Commit: prova Caso d'uso Registrazione\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Settimo Commit: prova Caso d'uso Registrazione\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\n          <option name=\"timeStamp\" value=\"14\" />\n        </breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/workspace.xml b/.idea/workspace.xml
----- a/.idea/workspace.xml	(revision aa8a0b0d97825d158de03edf704fd34384f83009)
--+++ b/.idea/workspace.xml	(date 1738235013130)
--@@ -4,7 +4,13 @@
--     <option name="autoReloadType" value="SELECTIVE" />
--   </component>
--   <component name="ChangeListManager">
---    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Settimo Commit: prova Caso d'uso Registrazione" />
--+    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Settimo Commit: prova Caso d'uso Registrazione">
--+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/UserDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/UserDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java" afterDir="false" />
--+    </list>
--     <option name="SHOW_DIALOG" value="false" />
--     <option name="HIGHLIGHT_CONFLICTS" value="true" />
--     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
--@@ -22,6 +28,11 @@
--     </option>
--   </component>
--   <component name="Git.Settings">
--+    <option name="RECENT_BRANCH_BY_REPOSITORY">
--+      <map>
--+        <entry key="$PROJECT_DIR$" value="master" />
--+      </map>
--+    </option>
--     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
--   </component>
--   <component name="GitHubPullRequestSearchHistory">{
--@@ -30,12 +41,12 @@
--     &quot;assignee&quot;: &quot;GaiaMeola&quot;
--   }
-- }</component>
---  <component name="GithubPullRequestsUISettings">{
---  &quot;selectedUrlAndAccountId&quot;: {
---    &quot;url&quot;: &quot;https://github.com/GaiaMeola/toGetJob.git&quot;,
---    &quot;accountId&quot;: &quot;0a1af48d-9cff-4190-bde9-bd5096772376&quot;
--+  <component name="GithubPullRequestsUISettings"><![CDATA[{
--+  "selectedUrlAndAccountId": {
--+    "url": "https://github.com/GaiaMeola/toGetJob.git",
--+    "accountId": "10ff2728-a55b-45dc-b4f1-a35abedc973c"
--   }
---}</component>
--+}]]></component>
--   <component name="MavenImportPreferences">
--     <option name="generalSettings">
--       <MavenGeneralSettings>
--Index: src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.concreteobjects;\n\nimport it.model.dao.abstractobjects.JobAnnouncementDao;\nimport it.model.entity.JobAnnouncement;\n\npublic class DataBaseJobAnnouncementDao implements JobAnnouncementDao {\n    @Override\n    public void createJobAnnouncement(JobAnnouncement jobAnnouncement) {\n\n    }\n\n    @Override\n    public JobAnnouncement getJobAnnouncement(int id) {\n        return null;\n    }\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java b/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java
----- a/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java	(revision aa8a0b0d97825d158de03edf704fd34384f83009)
--+++ b/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java	(date 1738234617504)
--@@ -3,6 +3,8 @@
-- import it.model.dao.abstractobjects.JobAnnouncementDao;
-- import it.model.entity.JobAnnouncement;
-- 
--+import java.util.Optional;
--+
-- public class DataBaseJobAnnouncementDao implements JobAnnouncementDao {
--     @Override
--     public void createJobAnnouncement(JobAnnouncement jobAnnouncement) {
--@@ -11,6 +13,8 @@
-- 
--     @Override
--     public JobAnnouncement getJobAnnouncement(int id) {
--+
--         return null;
--+
--     }
-- }
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_30_01_25__11_50__Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25__11_50__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25__11_50__Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25__11_50__Changes_.xml	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ /dev/null	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_30_01_25,_11_50_[Changes]" date="1738234219252" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_11_50_[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 30/01/25, 11:50 [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_30_01_25__12_50PM__Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25__12_50PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25__12_50PM__Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25__12_50PM__Changes_.xml	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ /dev/null	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_30_01_25,_12_50 PM_[Changes]" date="1738237816017" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_12_50 PM_[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 30/01/25, 12:50 PM [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_30_01_25__12_06__Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25__12_06__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25__12_06__Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25__12_06__Changes_.xml	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ /dev/null	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_30_01_25,_12_06_[Changes]" date="1738235193265" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_12_06_[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 30/01/25, 12:06 [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_30_01_25__11_45__Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25__11_45__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25__11_45__Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25__11_45__Changes_.xml	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ /dev/null	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_30_01_25,_11_45_[Changes]" date="1738233940279" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_11_45_[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 30/01/25, 11:45 [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_13_10_[Changes]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_13_10_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_13_10_[Changes]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_13_10_[Changes]/shelved.patch	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ /dev/null	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-@@ -1,231 +0,0 @@
--Index: src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.abstractobjects;\n\nimport it.model.entity.JobAnnouncement;\n\npublic interface JobAnnouncementDao {\n\n    void createJobAnnouncement(JobAnnouncement jobAnnouncement);\n    JobAnnouncement getJobAnnouncement(int id);\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java b/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java
----- a/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java	(revision dee1507e40f6d42bf55776382900e9814aa36957)
--+++ b/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java	(date 1738152171515)
--@@ -2,8 +2,11 @@
-- 
-- import it.model.entity.JobAnnouncement;
-- 
--+import java.util.Optional;
--+
-- public interface JobAnnouncementDao {
-- 
--     void createJobAnnouncement(JobAnnouncement jobAnnouncement);
--     JobAnnouncement getJobAnnouncement(int id);
--+
-- }
--Index: .idea/workspace.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"Terzo Commit: Prova Database\">\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/it/config/DatabaseConfig.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/db.properties\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/Main.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/config/ConfigDaoLoader.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/config/ConfigDaoLoader.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/dao.config.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/dao.config.properties\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Exception\" />\n        <option value=\"Interface\" />\n        <option value=\"Enum\" />\n        <option value=\"FxmlFile\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;GaiaMeola&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/GaiaMeola/toGetJob.git&quot;,\n    &quot;accountId&quot;: &quot;0a1af48d-9cff-4190-bde9-bd5096772376&quot;\n  }\n}</component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\n  <component name=\"ProjectId\" id=\"2nypPqqlu30o2C6FKHNbd1EkQVy\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"Application.HelloApplication.executor\": \"Run\",\n    \"Application.Main.executor\": \"Run\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"RunOnceActivity.git.unshallow\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"SONARLINT_PRECOMMIT_ANALYSIS\": \"true\",\n    \"git-widget-placeholder\": \"master\",\n    \"kotlin-language-version-configured\": \"true\",\n    \"last_opened_file_path\": \"/Users/gaiameola/Desktop/ISPW/toGetJob/src/main/resources/org/example/togetjob\",\n    \"project.structure.last.edited\": \"Libraries\",\n    \"project.structure.proportion\": \"0.15\",\n    \"project.structure.side.proportion\": \"0.2\",\n    \"settings.editor.selected.configurable\": \"preferences.JavaFX\"\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources\" />\n      <recent name=\"$PROJECT_DIR$/src/main/resources/Configurations\" />\n      <recent name=\"$PROJECT_DIR$/target/classes/org/Configurations\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"\" />\n      <created>1729955148511</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1729955148511</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1729955369659</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1729955369659</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663831106</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663831106</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663851839</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663851839</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883418179</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883418179</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883426699</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883426699</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883439672</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883439672</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086967897</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086967897</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086982811</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086982811</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Terzo Commit: Prova Database\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738142978544</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738142978544</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"10\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Primo Commit\" />\n    <MESSAGE value=\"Secondo Commit: bozza Abstract Factory\" />\n    <MESSAGE value=\"Secondo Commit: Abstract Factory + Singleton completo\" />\n    <MESSAGE value=\"Terzo Commit: Aggiunta Entity\" />\n    <MESSAGE value=\"Terzo Commit: Prova Database\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Terzo Commit: Prova Database\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"java-field\">\n          <url>file://$PROJECT_DIR$/src/main/java/it/model/entity/Student.java</url>\n          <line>14</line>\n          <properties field=\"availability\" class=\"it.model.entity.Student\" />\n          <option name=\"timeStamp\" value=\"12\" />\n        </line-breakpoint>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\n          <option name=\"timeStamp\" value=\"14\" />\n        </breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/workspace.xml b/.idea/workspace.xml
----- a/.idea/workspace.xml	(revision dee1507e40f6d42bf55776382900e9814aa36957)
--+++ b/.idea/workspace.xml	(date 1738152624503)
--@@ -4,13 +4,12 @@
--     <option name="autoReloadType" value="SELECTIVE" />
--   </component>
--   <component name="ChangeListManager">
---    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Terzo Commit: Prova Database">
---      <change afterPath="$PROJECT_DIR$/src/main/java/it/config/DatabaseConfig.java" afterDir="false" />
---      <change afterPath="$PROJECT_DIR$/src/main/resources/db.properties" afterDir="false" />
--+    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Terzo Commit: Aggiunta Entity">
--       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/it/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/Main.java" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/it/config/ConfigDaoLoader.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/config/ConfigDaoLoader.java" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/resources/dao.config.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/dao.config.properties" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/UserDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/UserDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java" afterDir="false" />
--     </list>
--     <option name="SHOW_DIALOG" value="false" />
--     <option name="HIGHLIGHT_CONFLICTS" value="true" />
--@@ -23,8 +22,8 @@
--         <option value="Exception" />
--         <option value="Interface" />
--         <option value="Enum" />
---        <option value="FxmlFile" />
--         <option value="Class" />
--+        <option value="FxmlFile" />
--       </list>
--     </option>
--   </component>
--@@ -59,23 +58,23 @@
--     <option name="hideEmptyMiddlePackages" value="true" />
--     <option name="showLibraryContents" value="true" />
--   </component>
---  <component name="PropertiesComponent"><![CDATA[{
---  "keyToString": {
---    "Application.HelloApplication.executor": "Run",
---    "Application.Main.executor": "Run",
---    "RunOnceActivity.ShowReadmeOnStart": "true",
---    "RunOnceActivity.git.unshallow": "true",
---    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
---    "SONARLINT_PRECOMMIT_ANALYSIS": "true",
---    "git-widget-placeholder": "master",
---    "kotlin-language-version-configured": "true",
---    "last_opened_file_path": "/Users/gaiameola/Desktop/ISPW/toGetJob/src/main/resources/org/example/togetjob",
---    "project.structure.last.edited": "Libraries",
---    "project.structure.proportion": "0.15",
---    "project.structure.side.proportion": "0.2",
---    "settings.editor.selected.configurable": "preferences.JavaFX"
--+  <component name="PropertiesComponent">{
--+  &quot;keyToString&quot;: {
--+    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,
--+    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
--+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
--+    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
--+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
--+    &quot;SONARLINT_PRECOMMIT_ANALYSIS&quot;: &quot;true&quot;,
--+    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
--+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
--+    &quot;last_opened_file_path&quot;: &quot;/Users/gaiameola/Desktop/ISPW/toGetJob/src/main/resources/org/example/togetjob&quot;,
--+    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,
--+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
--+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
--+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;
--   }
---}]]></component>
--+}</component>
--   <component name="RecentsManager">
--     <key name="CopyFile.RECENT_KEYS">
--       <recent name="$PROJECT_DIR$/src/main/resources/org/example/togetjob" />
--@@ -159,15 +158,7 @@
--       <option name="project" value="LOCAL" />
--       <updated>1738086982811</updated>
--     </task>
---    <task id="LOCAL-00009" summary="Terzo Commit: Prova Database">
---      <option name="closed" value="true" />
---      <created>1738142978544</created>
---      <option name="number" value="00009" />
---      <option name="presentableId" value="LOCAL-00009" />
---      <option name="project" value="LOCAL" />
---      <updated>1738142978544</updated>
---    </task>
---    <option name="localTasksCounter" value="10" />
--+    <option name="localTasksCounter" value="9" />
--     <servers />
--   </component>
--   <component name="Vcs.Log.Tabs.Properties">
--@@ -186,8 +177,7 @@
--     <MESSAGE value="Secondo Commit: bozza Abstract Factory" />
--     <MESSAGE value="Secondo Commit: Abstract Factory + Singleton completo" />
--     <MESSAGE value="Terzo Commit: Aggiunta Entity" />
---    <MESSAGE value="Terzo Commit: Prova Database" />
---    <option name="LAST_COMMIT_MESSAGE" value="Terzo Commit: Prova Database" />
--+    <option name="LAST_COMMIT_MESSAGE" value="Terzo Commit: Aggiunta Entity" />
--   </component>
--   <component name="XDebuggerManager">
--     <breakpoint-manager>
--@@ -198,10 +188,6 @@
--           <properties field="availability" class="it.model.entity.Student" />
--           <option name="timeStamp" value="12" />
--         </line-breakpoint>
---        <breakpoint enabled="true" type="java-exception">
---          <properties class="java.lang.NullPointerException" package="java.lang" />
---          <option name="timeStamp" value="14" />
---        </breakpoint>
--       </breakpoints>
--     </breakpoint-manager>
--   </component>
--Index: src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.concreteobjects;\n\nimport it.model.dao.abstractobjects.JobAnnouncementDao;\nimport it.model.entity.JobAnnouncement;\n\npublic class DataBaseJobAnnouncementDao implements JobAnnouncementDao {\n    @Override\n    public void createJobAnnouncement(JobAnnouncement jobAnnouncement) {\n\n    }\n\n    @Override\n    public JobAnnouncement getJobAnnouncement(int id) {\n        return null;\n    }\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java b/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java
----- a/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java	(revision dee1507e40f6d42bf55776382900e9814aa36957)
--+++ b/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java	(date 1738152174920)
--@@ -3,6 +3,8 @@
-- import it.model.dao.abstractobjects.JobAnnouncementDao;
-- import it.model.entity.JobAnnouncement;
-- 
--+import java.util.Optional;
--+
-- public class DataBaseJobAnnouncementDao implements JobAnnouncementDao {
--     @Override
--     public void createJobAnnouncement(JobAnnouncement jobAnnouncement) {
--@@ -11,6 +13,8 @@
-- 
--     @Override
--     public JobAnnouncement getJobAnnouncement(int id) {
--+
--         return null;
--+
--     }
-- }
--Index: src/main/java/it/model/dao/abstractobjects/UserDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.abstractobjects;\n\nimport it.model.entity.User;\n\npublic interface UserDao {\n\n    void createUser(User user);\n    User getUser(int id);\n\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/abstractobjects/UserDao.java b/src/main/java/it/model/dao/abstractobjects/UserDao.java
----- a/src/main/java/it/model/dao/abstractobjects/UserDao.java	(revision dee1507e40f6d42bf55776382900e9814aa36957)
--+++ b/src/main/java/it/model/dao/abstractobjects/UserDao.java	(date 1738152174923)
--@@ -2,6 +2,8 @@
-- 
-- import it.model.entity.User;
-- 
--+import java.util.Optional;
--+
-- public interface UserDao {
-- 
--     void createUser(User user);
--Index: src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.concreteobjects;\n\nimport it.model.dao.abstractobjects.UserDao;\nimport it.model.entity.User;\n\npublic class DataBaseUserDao implements UserDao {\n    @Override\n    public void createUser(User user) {\n    }\n\n    @Override\n    public User getUser(int id) {\n        return null;\n    }\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java b/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java
----- a/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java	(revision dee1507e40f6d42bf55776382900e9814aa36957)
--+++ b/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java	(date 1738152174928)
--@@ -1,15 +1,34 @@
-- package it.model.dao.concreteobjects;
-- 
--+import it.config.ConfigDaoLoader;
-- import it.model.dao.abstractobjects.UserDao;
-- import it.model.entity.User;
-- 
--+import java.sql.Connection;
--+import java.util.Optional;
--+
-- public class DataBaseUserDao implements UserDao {
--+
--+    public DataBaseUserDao(){
--+
--+
--+
--+    }
--+
--+
--+
--     @Override
--     public void createUser(User user) {
--+
--+
--     }
-- 
--     @Override
--     public User getUser(int id) {
--+
--+
--         return null;
--+
--+
--     }
-- }
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_12_50 PM_[Changes]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_12_50 PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_12_50 PM_[Changes]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_12_50 PM_[Changes]/shelved.patch	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ /dev/null	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-@@ -1,118 +0,0 @@
--Index: src/main/java/it/model/entity/Recruiter.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.entity;\n\nimport java.util.List;\n\npublic class Recruiter extends User{\n\n    private List<String> companies;\n    private List<Recruiter> collaborators;\n\n\n    // Costruttore base per User\n    public Recruiter(String username, String password, String name, String surname, String emailAddress, Role role) {\n        super(name, surname, username, emailAddress, password, role); // Chiamata alla superclasse User\n    }\n\n    public Recruiter(String name, String surname, String username, String emailAddress, String password, Role role, List<String> companies, List<Recruiter> collaborators) {\n        super(name, surname, username, emailAddress, password, role);\n        this.companies = companies;\n        this.collaborators = collaborators;\n    }\n\n    // Costruttore base per Recruiter\n\n\n    public List<String> getCompanies() {\n        return companies;\n    }\n\n    public List<Recruiter> getCollaborators() {\n        return collaborators;\n    }\n\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/entity/Recruiter.java b/src/main/java/it/model/entity/Recruiter.java
----- a/src/main/java/it/model/entity/Recruiter.java	(revision 08a5351cf0c13e14a88db30b8274650bbe2869d9)
--+++ b/src/main/java/it/model/entity/Recruiter.java	(date 1738237699576)
--@@ -2,7 +2,7 @@
-- 
-- import java.util.List;
-- 
---public class Recruiter extends User{
--+public class Recruiter extends User {
-- 
--     private List<String> companies;
--     private List<Recruiter> collaborators;
--Index: src/main/java/it/pattern/state/concretestate/RegisterState.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.pattern.state.concretestate;\n\nimport it.pattern.state.abstractstate.CliState;\nimport it.pattern.state.contextstate.CliContext;\n\npublic class RegisterState implements CliState {\n    @Override\n    public void showMenu() {\n            return;\n    }\n\n    @Override\n    public void goNext(CliContext context, String input) {\n        context.setState(new MainMenuState());\n    }\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/pattern/state/concretestate/RegisterState.java b/src/main/java/it/pattern/state/concretestate/RegisterState.java
----- a/src/main/java/it/pattern/state/concretestate/RegisterState.java	(revision 08a5351cf0c13e14a88db30b8274650bbe2869d9)
--+++ b/src/main/java/it/pattern/state/concretestate/RegisterState.java	(date 1738235582767)
--@@ -1,16 +1,47 @@
-- package it.pattern.state.concretestate;
-- 
--+import it.bean.RegisterUserBean;
--+import it.controller.RegisterController;
-- import it.pattern.state.abstractstate.CliState;
-- import it.pattern.state.contextstate.CliContext;
-- 
--+import java.util.Scanner;
--+
-- public class RegisterState implements CliState {
--+
--+    private RegisterController registerController = new RegisterController();
--+
--     @Override
--     public void showMenu() {
---            return;
--+        System.out.println("\n ---Register---");
--+        System.out.println("Please enter the following details to register:");
--+        System.out.println("1. Username");
--+        System.out.println("2. Password");
--+        System.out.println("3. Name");
--+        System.out.println("4. Surname");
--+        System.out.println("5. Email");
--+        System.out.println("6. Role (student/recruiter)");
--+        System.out.println("To submit, type 'submit'.");
--     }
-- 
--     @Override
--     public void goNext(CliContext context, String input) {
--+
--+        Scanner scanner = new Scanner(System.in);
--+
--+        System.out.print("Enter username: ");
--+        String username = scanner.nextLine();
--+        System.out.print("Enter password: ");
--+        String password = scanner.nextLine();
--+        System.out.print("Enter name: ");
--+        String name = scanner.nextLine();
--+        System.out.print("Enter surname: ");
--+        String surname = scanner.nextLine();
--+        System.out.print("Enter email: ");
--+        String email = scanner.nextLine();
--+        System.out.print("Enter role (student/recruiter): ");
--+        String roleInput = scanner.nextLine();
--+
--         context.setState(new MainMenuState());
--     }
-- }
--Index: .idea/workspace.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"Settimo Commit: prova Caso d'uso Registrazione\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Exception\" />\n        <option value=\"Enum\" />\n        <option value=\"FxmlFile\" />\n        <option value=\"Interface\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;GaiaMeola&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/GaiaMeola/toGetJob.git&quot;,\n    &quot;accountId&quot;: &quot;0a1af48d-9cff-4190-bde9-bd5096772376&quot;\n  }\n}</component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\n  <component name=\"ProjectId\" id=\"2nypPqqlu30o2C6FKHNbd1EkQVy\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;SONARLINT_PRECOMMIT_ANALYSIS&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/gaiameola/Desktop/ISPW/toGetJob/src/main/resources/org/example/togetjob&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources\" />\n      <recent name=\"$PROJECT_DIR$/src/main/resources/Configurations\" />\n      <recent name=\"$PROJECT_DIR$/target/classes/org/Configurations\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"\" />\n      <created>1729955148511</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1729955148511</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1729955369659</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1729955369659</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663831106</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663831106</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663851839</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663851839</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883418179</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883418179</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883426699</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883426699</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883439672</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883439672</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086967897</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086967897</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086982811</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086982811</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Terzo Commit: Prova Database\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738142978544</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738142978544</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Quarto Commit: Connection prova\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152156784</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152156784</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Quarto Commit: Connection riuscita\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152567157</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152567157</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Quinto Commit: Fine Db\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738157742126</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738157742126</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Sesto Commit: Pattern State CLI prova\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738179850232</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738179850233</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"Settimo Commit: prova Caso d'uso Registrazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738233820826</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738233820826</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"Settimo Commit: prova Caso d'uso Registrazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738234210460</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738234210460</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"Settimo Commit: prova Caso d'uso Registrazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738234584655</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738234584655</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"17\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Primo Commit\" />\n    <MESSAGE value=\"Secondo Commit: bozza Abstract Factory\" />\n    <MESSAGE value=\"Secondo Commit: Abstract Factory + Singleton completo\" />\n    <MESSAGE value=\"Terzo Commit: Aggiunta Entity\" />\n    <MESSAGE value=\"Terzo Commit: Prova Database\" />\n    <MESSAGE value=\"Quarto Commit: Connection prova\" />\n    <MESSAGE value=\"Quarto Commit: Connection riuscita\" />\n    <MESSAGE value=\"Quinto Commit: Fine Db\" />\n    <MESSAGE value=\"Sesto Commit: Pattern State CLI prova\" />\n    <MESSAGE value=\"Settimo Commit: prova Caso d'uso Registrazione\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Settimo Commit: prova Caso d'uso Registrazione\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\n          <option name=\"timeStamp\" value=\"14\" />\n        </breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/workspace.xml b/.idea/workspace.xml
----- a/.idea/workspace.xml	(revision 08a5351cf0c13e14a88db30b8274650bbe2869d9)
--+++ b/.idea/workspace.xml	(date 1738237699612)
--@@ -4,7 +4,11 @@
--     <option name="autoReloadType" value="SELECTIVE" />
--   </component>
--   <component name="ChangeListManager">
---    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Settimo Commit: prova Caso d'uso Registrazione" />
--+    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Settimo Commit: prova Caso d'uso Registrazione">
--+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/entity/Recruiter.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/entity/Recruiter.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/pattern/state/concretestate/RegisterState.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/pattern/state/concretestate/RegisterState.java" afterDir="false" />
--+    </list>
--     <option name="SHOW_DIALOG" value="false" />
--     <option name="HIGHLIGHT_CONFLICTS" value="true" />
--     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
--@@ -216,7 +220,15 @@
--       <option name="project" value="LOCAL" />
--       <updated>1738234584655</updated>
--     </task>
---    <option name="localTasksCounter" value="17" />
--+    <task id="LOCAL-00017" summary="Settimo Commit: prova Caso d'uso Registrazione">
--+      <option name="closed" value="true" />
--+      <created>1738235147374</created>
--+      <option name="number" value="00017" />
--+      <option name="presentableId" value="LOCAL-00017" />
--+      <option name="project" value="LOCAL" />
--+      <updated>1738235147374</updated>
--+    </task>
--+    <option name="localTasksCounter" value="18" />
--     <servers />
--   </component>
--   <component name="Vcs.Log.Tabs.Properties">
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_30_01_25__11_56__Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25__11_56__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25__11_56__Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25__11_56__Changes_.xml	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ /dev/null	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_30_01_25,_11_56_[Changes]" date="1738234617523" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_11_56_[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 30/01/25, 11:56 [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_16_50_[Changes]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_16_50_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_16_50_[Changes]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_16_50_[Changes]/shelved.patch	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ /dev/null	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-@@ -1,206 +0,0 @@
--Index: src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.abstractobjects;\n\nimport it.model.entity.JobAnnouncement;\n\npublic interface JobAnnouncementDao {\n\n    void createJobAnnouncement(JobAnnouncement jobAnnouncement);\n    JobAnnouncement getJobAnnouncement(int id);\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java b/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java
----- a/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java	(revision b7483c0a6180fffe2502577bc1b328920dc1a19f)
--+++ b/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java	(date 1738152626196)
--@@ -2,8 +2,11 @@
-- 
-- import it.model.entity.JobAnnouncement;
-- 
--+import java.util.Optional;
--+
-- public interface JobAnnouncementDao {
-- 
--     void createJobAnnouncement(JobAnnouncement jobAnnouncement);
--     JobAnnouncement getJobAnnouncement(int id);
--+
-- }
--Index: .idea/workspace.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"Quarto Commit: Connection prova\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/dao.config.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/dao.config.properties\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Exception\" />\n        <option value=\"Interface\" />\n        <option value=\"Enum\" />\n        <option value=\"FxmlFile\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;GaiaMeola&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/GaiaMeola/toGetJob.git&quot;,\n    &quot;accountId&quot;: &quot;0a1af48d-9cff-4190-bde9-bd5096772376&quot;\n  }\n}</component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\n  <component name=\"ProjectId\" id=\"2nypPqqlu30o2C6FKHNbd1EkQVy\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"Application.HelloApplication.executor\": \"Run\",\n    \"Application.Main.executor\": \"Run\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"RunOnceActivity.git.unshallow\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"SONARLINT_PRECOMMIT_ANALYSIS\": \"true\",\n    \"git-widget-placeholder\": \"master\",\n    \"kotlin-language-version-configured\": \"true\",\n    \"last_opened_file_path\": \"/Users/gaiameola/Desktop/ISPW/toGetJob/src/main/resources/org/example/togetjob\",\n    \"project.structure.last.edited\": \"Libraries\",\n    \"project.structure.proportion\": \"0.15\",\n    \"project.structure.side.proportion\": \"0.2\",\n    \"settings.editor.selected.configurable\": \"preferences.JavaFX\"\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources\" />\n      <recent name=\"$PROJECT_DIR$/src/main/resources/Configurations\" />\n      <recent name=\"$PROJECT_DIR$/target/classes/org/Configurations\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"\" />\n      <created>1729955148511</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1729955148511</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1729955369659</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1729955369659</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663831106</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663831106</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663851839</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663851839</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883418179</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883418179</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883426699</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883426699</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883439672</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883439672</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086967897</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086967897</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086982811</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086982811</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Terzo Commit: Prova Database\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738142978544</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738142978544</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Quarto Commit: Connection prova\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152156784</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152156784</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"11\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Primo Commit\" />\n    <MESSAGE value=\"Secondo Commit: bozza Abstract Factory\" />\n    <MESSAGE value=\"Secondo Commit: Abstract Factory + Singleton completo\" />\n    <MESSAGE value=\"Terzo Commit: Aggiunta Entity\" />\n    <MESSAGE value=\"Terzo Commit: Prova Database\" />\n    <MESSAGE value=\"Quarto Commit: Connection prova\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Quarto Commit: Connection prova\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"java-field\">\n          <url>file://$PROJECT_DIR$/src/main/java/it/model/entity/Student.java</url>\n          <line>14</line>\n          <properties field=\"availability\" class=\"it.model.entity.Student\" />\n          <option name=\"timeStamp\" value=\"12\" />\n        </line-breakpoint>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\n          <option name=\"timeStamp\" value=\"14\" />\n        </breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/workspace.xml b/.idea/workspace.xml
----- a/.idea/workspace.xml	(revision b7483c0a6180fffe2502577bc1b328920dc1a19f)
--+++ b/.idea/workspace.xml	(date 1738165693236)
--@@ -4,9 +4,12 @@
--     <option name="autoReloadType" value="SELECTIVE" />
--   </component>
--   <component name="ChangeListManager">
---    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Quarto Commit: Connection prova">
--+    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Terzo Commit: Prova Database">
--       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/resources/dao.config.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/dao.config.properties" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/UserDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/UserDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java" afterDir="false" />
--     </list>
--     <option name="SHOW_DIALOG" value="false" />
--     <option name="HIGHLIGHT_CONFLICTS" value="true" />
--@@ -55,23 +58,23 @@
--     <option name="hideEmptyMiddlePackages" value="true" />
--     <option name="showLibraryContents" value="true" />
--   </component>
---  <component name="PropertiesComponent"><![CDATA[{
---  "keyToString": {
---    "Application.HelloApplication.executor": "Run",
---    "Application.Main.executor": "Run",
---    "RunOnceActivity.ShowReadmeOnStart": "true",
---    "RunOnceActivity.git.unshallow": "true",
---    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
---    "SONARLINT_PRECOMMIT_ANALYSIS": "true",
---    "git-widget-placeholder": "master",
---    "kotlin-language-version-configured": "true",
---    "last_opened_file_path": "/Users/gaiameola/Desktop/ISPW/toGetJob/src/main/resources/org/example/togetjob",
---    "project.structure.last.edited": "Libraries",
---    "project.structure.proportion": "0.15",
---    "project.structure.side.proportion": "0.2",
---    "settings.editor.selected.configurable": "preferences.JavaFX"
--+  <component name="PropertiesComponent">{
--+  &quot;keyToString&quot;: {
--+    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,
--+    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
--+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
--+    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
--+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
--+    &quot;SONARLINT_PRECOMMIT_ANALYSIS&quot;: &quot;true&quot;,
--+    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
--+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
--+    &quot;last_opened_file_path&quot;: &quot;/Users/gaiameola/Desktop/ISPW/toGetJob/src/main/resources/org/example/togetjob&quot;,
--+    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,
--+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
--+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
--+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;
--   }
---}]]></component>
--+}</component>
--   <component name="RecentsManager">
--     <key name="CopyFile.RECENT_KEYS">
--       <recent name="$PROJECT_DIR$/src/main/resources/org/example/togetjob" />
--@@ -163,15 +166,7 @@
--       <option name="project" value="LOCAL" />
--       <updated>1738142978544</updated>
--     </task>
---    <task id="LOCAL-00010" summary="Quarto Commit: Connection prova">
---      <option name="closed" value="true" />
---      <created>1738152156784</created>
---      <option name="number" value="00010" />
---      <option name="presentableId" value="LOCAL-00010" />
---      <option name="project" value="LOCAL" />
---      <updated>1738152156784</updated>
---    </task>
---    <option name="localTasksCounter" value="11" />
--+    <option name="localTasksCounter" value="10" />
--     <servers />
--   </component>
--   <component name="Vcs.Log.Tabs.Properties">
--@@ -191,8 +186,7 @@
--     <MESSAGE value="Secondo Commit: Abstract Factory + Singleton completo" />
--     <MESSAGE value="Terzo Commit: Aggiunta Entity" />
--     <MESSAGE value="Terzo Commit: Prova Database" />
---    <MESSAGE value="Quarto Commit: Connection prova" />
---    <option name="LAST_COMMIT_MESSAGE" value="Quarto Commit: Connection prova" />
--+    <option name="LAST_COMMIT_MESSAGE" value="Terzo Commit: Prova Database" />
--   </component>
--   <component name="XDebuggerManager">
--     <breakpoint-manager>
--Index: src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.concreteobjects;\n\nimport it.model.dao.abstractobjects.JobAnnouncementDao;\nimport it.model.entity.JobAnnouncement;\n\npublic class DataBaseJobAnnouncementDao implements JobAnnouncementDao {\n    @Override\n    public void createJobAnnouncement(JobAnnouncement jobAnnouncement) {\n\n    }\n\n    @Override\n    public JobAnnouncement getJobAnnouncement(int id) {\n        return null;\n    }\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java b/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java
----- a/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java	(revision b7483c0a6180fffe2502577bc1b328920dc1a19f)
--+++ b/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java	(date 1738152629993)
--@@ -3,6 +3,8 @@
-- import it.model.dao.abstractobjects.JobAnnouncementDao;
-- import it.model.entity.JobAnnouncement;
-- 
--+import java.util.Optional;
--+
-- public class DataBaseJobAnnouncementDao implements JobAnnouncementDao {
--     @Override
--     public void createJobAnnouncement(JobAnnouncement jobAnnouncement) {
--@@ -11,6 +13,8 @@
-- 
--     @Override
--     public JobAnnouncement getJobAnnouncement(int id) {
--+
--         return null;
--+
--     }
-- }
--Index: src/main/java/it/model/dao/abstractobjects/UserDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.abstractobjects;\n\nimport it.model.entity.User;\n\npublic interface UserDao {\n\n    void createUser(User user);\n    User getUser(int id);\n\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/abstractobjects/UserDao.java b/src/main/java/it/model/dao/abstractobjects/UserDao.java
----- a/src/main/java/it/model/dao/abstractobjects/UserDao.java	(revision b7483c0a6180fffe2502577bc1b328920dc1a19f)
--+++ b/src/main/java/it/model/dao/abstractobjects/UserDao.java	(date 1738152629996)
--@@ -2,6 +2,8 @@
-- 
-- import it.model.entity.User;
-- 
--+import java.util.Optional;
--+
-- public interface UserDao {
-- 
--     void createUser(User user);
--Index: src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.concreteobjects;\n\nimport it.model.dao.abstractobjects.UserDao;\nimport it.model.entity.User;\n\npublic class DataBaseUserDao implements UserDao {\n    @Override\n    public void createUser(User user) {\n    }\n\n    @Override\n    public User getUser(int id) {\n        return null;\n    }\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java b/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java
----- a/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java	(revision b7483c0a6180fffe2502577bc1b328920dc1a19f)
--+++ b/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java	(date 1738152630000)
--@@ -1,15 +1,34 @@
-- package it.model.dao.concreteobjects;
-- 
--+import it.config.ConfigDaoLoader;
-- import it.model.dao.abstractobjects.UserDao;
-- import it.model.entity.User;
-- 
--+import java.sql.Connection;
--+import java.util.Optional;
--+
-- public class DataBaseUserDao implements UserDao {
--+
--+    public DataBaseUserDao(){
--+
--+
--+
--+    }
--+
--+
--+
--     @Override
--     public void createUser(User user) {
--+
--+
--     }
-- 
--     @Override
--     public User getUser(int id) {
--+
--+
--         return null;
--+
--+
--     }
-- }
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_29_01_25__23_49__Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25__23_49__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25__23_49__Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25__23_49__Changes_.xml	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ /dev/null	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_29_01_25,_23_49_[Changes]" date="1738191001098" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_23_49_[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 29/01/25, 23:49 [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_11_56_[Changes]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_11_56_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_11_56_[Changes]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_11_56_[Changes]/shelved.patch	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ /dev/null	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-@@ -1,172 +0,0 @@
--Index: src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.concreteobjects;\n\nimport it.model.dao.abstractobjects.UserDao;\nimport it.model.entity.User;\n\nimport java.util.List;\nimport java.util.Optional;\n\npublic class DataBaseUserDao implements UserDao {\n\n    @Override\n    public boolean saveUser(User user) {\n        return false;\n    }\n\n    @Override\n    public Optional<User> getUser(String username) {\n        return Optional.empty();\n    }\n\n    @Override\n    public List<User> getAllUsers() {\n        return List.of();\n    }\n\n    @Override\n    public boolean updateUser(User user) {\n        return false;\n    }\n\n    @Override\n    public boolean deleteUser(String username) {\n        return false;\n    }\n\n    @Override\n    public boolean userExists(String username) {\n        return false;\n    }\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java b/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java
----- a/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java	(revision 897effc6ccb38b89492c5ebd471d238044f425a6)
--+++ b/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java	(date 1738234546542)
--@@ -3,38 +3,15 @@
-- import it.model.dao.abstractobjects.UserDao;
-- import it.model.entity.User;
-- 
---import java.util.List;
---import java.util.Optional;
---
-- public class DataBaseUserDao implements UserDao {
-- 
--     @Override
---    public boolean saveUser(User user) {
---        return false;
---    }
---
---    @Override
---    public Optional<User> getUser(String username) {
---        return Optional.empty();
---    }
---
---    @Override
---    public List<User> getAllUsers() {
---        return List.of();
---    }
---
---    @Override
---    public boolean updateUser(User user) {
---        return false;
--+    public void createUser(User user) {
--     }
-- 
--     @Override
---    public boolean deleteUser(String username) {
---        return false;
--+    public User getUser(int id) {
--+        return null;
--     }
-- 
---    @Override
---    public boolean userExists(String username) {
---        return false;
---    }
-- }
--Index: src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.abstractobjects;\n\nimport it.model.entity.JobAnnouncement;\n\npublic interface JobAnnouncementDao {\n\n    void createJobAnnouncement(JobAnnouncement jobAnnouncement);\n    JobAnnouncement getJobAnnouncement(int id);\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java b/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java
----- a/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java	(revision 897effc6ccb38b89492c5ebd471d238044f425a6)
--+++ b/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java	(date 1738234214303)
--@@ -2,8 +2,11 @@
-- 
-- import it.model.entity.JobAnnouncement;
-- 
--+import java.util.Optional;
--+
-- public interface JobAnnouncementDao {
-- 
--     void createJobAnnouncement(JobAnnouncement jobAnnouncement);
--     JobAnnouncement getJobAnnouncement(int id);
--+
-- }
--Index: .idea/workspace.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"Settimo Commit: prova Caso d'uso Registrazione\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Exception\" />\n        <option value=\"Enum\" />\n        <option value=\"FxmlFile\" />\n        <option value=\"Interface\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;GaiaMeola&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/GaiaMeola/toGetJob.git&quot;,\n    &quot;accountId&quot;: &quot;0a1af48d-9cff-4190-bde9-bd5096772376&quot;\n  }\n}</component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\n  <component name=\"ProjectId\" id=\"2nypPqqlu30o2C6FKHNbd1EkQVy\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;SONARLINT_PRECOMMIT_ANALYSIS&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/gaiameola/Desktop/ISPW/toGetJob/src/main/resources/org/example/togetjob&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources\" />\n      <recent name=\"$PROJECT_DIR$/src/main/resources/Configurations\" />\n      <recent name=\"$PROJECT_DIR$/target/classes/org/Configurations\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"\" />\n      <created>1729955148511</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1729955148511</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1729955369659</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1729955369659</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663831106</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663831106</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663851839</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663851839</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883418179</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883418179</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883426699</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883426699</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883439672</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883439672</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086967897</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086967897</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086982811</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086982811</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Terzo Commit: Prova Database\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738142978544</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738142978544</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Quarto Commit: Connection prova\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152156784</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152156784</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Quarto Commit: Connection riuscita\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152567157</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152567157</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Quinto Commit: Fine Db\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738157742126</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738157742126</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Sesto Commit: Pattern State CLI prova\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738179850232</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738179850233</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"Settimo Commit: prova Caso d'uso Registrazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738233820826</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738233820826</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"15\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Primo Commit\" />\n    <MESSAGE value=\"Secondo Commit: bozza Abstract Factory\" />\n    <MESSAGE value=\"Secondo Commit: Abstract Factory + Singleton completo\" />\n    <MESSAGE value=\"Terzo Commit: Aggiunta Entity\" />\n    <MESSAGE value=\"Terzo Commit: Prova Database\" />\n    <MESSAGE value=\"Quarto Commit: Connection prova\" />\n    <MESSAGE value=\"Quarto Commit: Connection riuscita\" />\n    <MESSAGE value=\"Quinto Commit: Fine Db\" />\n    <MESSAGE value=\"Sesto Commit: Pattern State CLI prova\" />\n    <MESSAGE value=\"Settimo Commit: prova Caso d'uso Registrazione\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Settimo Commit: prova Caso d'uso Registrazione\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\n          <option name=\"timeStamp\" value=\"14\" />\n        </breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/workspace.xml b/.idea/workspace.xml
----- a/.idea/workspace.xml	(revision 897effc6ccb38b89492c5ebd471d238044f425a6)
--+++ b/.idea/workspace.xml	(date 1738234437555)
--@@ -4,8 +4,12 @@
--     <option name="autoReloadType" value="SELECTIVE" />
--   </component>
--   <component name="ChangeListManager">
---    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Settimo Commit: prova Caso d'uso Registrazione">
--+    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Sesto Commit: Pattern State CLI prova">
--       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/UserDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/UserDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java" afterDir="false" />
--     </list>
--     <option name="SHOW_DIALOG" value="false" />
--     <option name="HIGHLIGHT_CONFLICTS" value="true" />
--@@ -194,15 +198,7 @@
--       <option name="project" value="LOCAL" />
--       <updated>1738179850233</updated>
--     </task>
---    <task id="LOCAL-00014" summary="Settimo Commit: prova Caso d'uso Registrazione">
---      <option name="closed" value="true" />
---      <created>1738233820826</created>
---      <option name="number" value="00014" />
---      <option name="presentableId" value="LOCAL-00014" />
---      <option name="project" value="LOCAL" />
---      <updated>1738233820826</updated>
---    </task>
---    <option name="localTasksCounter" value="15" />
--+    <option name="localTasksCounter" value="14" />
--     <servers />
--   </component>
--   <component name="Vcs.Log.Tabs.Properties">
--@@ -226,8 +222,7 @@
--     <MESSAGE value="Quarto Commit: Connection riuscita" />
--     <MESSAGE value="Quinto Commit: Fine Db" />
--     <MESSAGE value="Sesto Commit: Pattern State CLI prova" />
---    <MESSAGE value="Settimo Commit: prova Caso d'uso Registrazione" />
---    <option name="LAST_COMMIT_MESSAGE" value="Settimo Commit: prova Caso d'uso Registrazione" />
--+    <option name="LAST_COMMIT_MESSAGE" value="Sesto Commit: Pattern State CLI prova" />
--   </component>
--   <component name="XDebuggerManager">
--     <breakpoint-manager>
--Index: src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.concreteobjects;\n\nimport it.model.dao.abstractobjects.JobAnnouncementDao;\nimport it.model.entity.JobAnnouncement;\n\npublic class DataBaseJobAnnouncementDao implements JobAnnouncementDao {\n    @Override\n    public void createJobAnnouncement(JobAnnouncement jobAnnouncement) {\n\n    }\n\n    @Override\n    public JobAnnouncement getJobAnnouncement(int id) {\n        return null;\n    }\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java b/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java
----- a/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java	(revision 897effc6ccb38b89492c5ebd471d238044f425a6)
--+++ b/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java	(date 1738234219212)
--@@ -3,6 +3,8 @@
-- import it.model.dao.abstractobjects.JobAnnouncementDao;
-- import it.model.entity.JobAnnouncement;
-- 
--+import java.util.Optional;
--+
-- public class DataBaseJobAnnouncementDao implements JobAnnouncementDao {
--     @Override
--     public void createJobAnnouncement(JobAnnouncement jobAnnouncement) {
--@@ -11,6 +13,8 @@
-- 
--     @Override
--     public JobAnnouncement getJobAnnouncement(int id) {
--+
--         return null;
--+
--     }
-- }
--Index: src/main/java/it/model/dao/abstractobjects/UserDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.abstractobjects;\n\nimport it.model.entity.User;\n\nimport java.util.List;\nimport java.util.Optional;\n\npublic interface UserDao {\n\n    boolean saveUser(User user);\n    Optional<User> getUser(String username);\n    List<User> getAllUsers();\n    boolean updateUser(User user);\n    boolean deleteUser(String username);\n    boolean userExists(String username);\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/abstractobjects/UserDao.java b/src/main/java/it/model/dao/abstractobjects/UserDao.java
----- a/src/main/java/it/model/dao/abstractobjects/UserDao.java	(revision 897effc6ccb38b89492c5ebd471d238044f425a6)
--+++ b/src/main/java/it/model/dao/abstractobjects/UserDao.java	(date 1738234219217)
--@@ -5,6 +5,8 @@
-- import java.util.List;
-- import java.util.Optional;
-- 
--+import java.util.Optional;
--+
-- public interface UserDao {
-- 
--     boolean saveUser(User user);
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_13_02_[Changes]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_13_02_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_13_02_[Changes]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_13_02_[Changes]/shelved.patch	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ /dev/null	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-@@ -1,236 +0,0 @@
--Index: src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.abstractobjects;\n\nimport it.model.entity.JobAnnouncement;\n\npublic interface JobAnnouncementDao {\n\n    void createJobAnnouncement(JobAnnouncement jobAnnouncement);\n    JobAnnouncement getJobAnnouncement(int id);\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java b/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java
----- a/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java	(revision 192986b6b18ef63ca27d3769033d2251a9598641)
--+++ b/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java	(date 1738144583800)
--@@ -2,8 +2,11 @@
-- 
-- import it.model.entity.JobAnnouncement;
-- 
--+import java.util.Optional;
--+
-- public interface JobAnnouncementDao {
-- 
--     void createJobAnnouncement(JobAnnouncement jobAnnouncement);
--     JobAnnouncement getJobAnnouncement(int id);
--+
-- }
--Index: .idea/workspace.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"Terzo Commit: Aggiunta Entity\">\n      <change afterPath=\"$PROJECT_DIR$/libs/mysql-connector-j-9.2.0.jar\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/it/controller/ControllerApplicativo/RegisterController.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob/BozzaSchermataHomeStudente.fxml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob/BozzaSchermataRecruiter.fxml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob/BozzaSchermataStudent.fxml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/Main.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/controller/ControllerApplicativo/Delete.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/controller/ControllerApplicativo/LoginController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/module-info.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/module-info.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Exception\" />\n        <option value=\"Interface\" />\n        <option value=\"Enum\" />\n        <option value=\"Class\" />\n        <option value=\"FxmlFile\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;GaiaMeola&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/GaiaMeola/toGetJob.git&quot;,\n    &quot;accountId&quot;: &quot;0a1af48d-9cff-4190-bde9-bd5096772376&quot;\n  }\n}</component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\n  <component name=\"ProjectId\" id=\"2nypPqqlu30o2C6FKHNbd1EkQVy\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"Application.HelloApplication.executor\": \"Run\",\n    \"Application.Main.executor\": \"Run\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"RunOnceActivity.git.unshallow\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"SONARLINT_PRECOMMIT_ANALYSIS\": \"true\",\n    \"git-widget-placeholder\": \"master\",\n    \"kotlin-language-version-configured\": \"true\",\n    \"last_opened_file_path\": \"/Users/gaiameola/Desktop/ISPW/toGetJob/src/main/resources/org/example/togetjob\",\n    \"project.structure.last.edited\": \"Libraries\",\n    \"project.structure.proportion\": \"0.15\",\n    \"project.structure.side.proportion\": \"0.2\",\n    \"settings.editor.selected.configurable\": \"preferences.JavaFX\"\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources\" />\n      <recent name=\"$PROJECT_DIR$/src/main/resources/Configurations\" />\n      <recent name=\"$PROJECT_DIR$/target/classes/org/Configurations\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"\" />\n      <created>1729955148511</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1729955148511</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1729955369659</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1729955369659</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663831106</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663831106</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663851839</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663851839</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883418179</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883418179</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883426699</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883426699</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883439672</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883439672</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086967897</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086967897</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086982811</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086982811</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"9\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Primo Commit\" />\n    <MESSAGE value=\"Secondo Commit: bozza Abstract Factory\" />\n    <MESSAGE value=\"Secondo Commit: Abstract Factory + Singleton completo\" />\n    <MESSAGE value=\"Terzo Commit: Aggiunta Entity\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Terzo Commit: Aggiunta Entity\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"java-field\">\n          <url>file://$PROJECT_DIR$/src/main/java/it/model/entity/Student.java</url>\n          <line>14</line>\n          <properties field=\"availability\" class=\"it.model.entity.Student\" />\n          <option name=\"timeStamp\" value=\"12\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/workspace.xml b/.idea/workspace.xml
----- a/.idea/workspace.xml	(revision 192986b6b18ef63ca27d3769033d2251a9598641)
--+++ b/.idea/workspace.xml	(date 1738148211384)
--@@ -4,16 +4,12 @@
--     <option name="autoReloadType" value="SELECTIVE" />
--   </component>
--   <component name="ChangeListManager">
---    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Terzo Commit: Aggiunta Entity">
---      <change afterPath="$PROJECT_DIR$/libs/mysql-connector-j-9.2.0.jar" afterDir="false" />
---      <change afterPath="$PROJECT_DIR$/src/main/java/it/controller/ControllerApplicativo/RegisterController.java" afterDir="false" />
---      <change afterPath="$PROJECT_DIR$/src/main/resources/org/example/togetjob/BozzaSchermataHomeStudente.fxml" afterDir="false" />
---      <change afterPath="$PROJECT_DIR$/src/main/resources/org/example/togetjob/BozzaSchermataRecruiter.fxml" afterDir="false" />
---      <change afterPath="$PROJECT_DIR$/src/main/resources/org/example/togetjob/BozzaSchermataStudent.fxml" afterDir="false" />
--+    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Secondo Commit: Abstract Factory + Singleton completo">
--       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/it/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/Main.java" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/it/controller/ControllerApplicativo/Delete.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/controller/ControllerApplicativo/LoginController.java" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/module-info.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/module-info.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/JobAnnouncementDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/UserDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/abstractobjects/UserDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java" afterDir="false" />
--     </list>
--     <option name="SHOW_DIALOG" value="false" />
--     <option name="HIGHLIGHT_CONFLICTS" value="true" />
--@@ -27,7 +23,6 @@
--         <option value="Interface" />
--         <option value="Enum" />
--         <option value="Class" />
---        <option value="FxmlFile" />
--       </list>
--     </option>
--   </component>
--@@ -40,12 +35,12 @@
--     &quot;assignee&quot;: &quot;GaiaMeola&quot;
--   }
-- }</component>
---  <component name="GithubPullRequestsUISettings">{
---  &quot;selectedUrlAndAccountId&quot;: {
---    &quot;url&quot;: &quot;https://github.com/GaiaMeola/toGetJob.git&quot;,
---    &quot;accountId&quot;: &quot;0a1af48d-9cff-4190-bde9-bd5096772376&quot;
---  }
---}</component>
--+  <component name="GithubPullRequestsUISettings"><![CDATA[{
--+  "selectedUrlAndAccountId": {
--+    "url": "https://github.com/GaiaMeola/toGetJob.git",
--+    "accountId": "10ff2728-a55b-45dc-b4f1-a35abedc973c"
--+  }
--+}]]></component>
--   <component name="MavenImportPreferences">
--     <option name="generalSettings">
--       <MavenGeneralSettings>
--@@ -72,7 +67,6 @@
--     "SONARLINT_PRECOMMIT_ANALYSIS": "true",
--     "git-widget-placeholder": "master",
--     "kotlin-language-version-configured": "true",
---    "last_opened_file_path": "/Users/gaiameola/Desktop/ISPW/toGetJob/src/main/resources/org/example/togetjob",
--     "project.structure.last.edited": "Libraries",
--     "project.structure.proportion": "0.15",
--     "project.structure.side.proportion": "0.2",
--@@ -80,9 +74,6 @@
--   }
-- }]]></component>
--   <component name="RecentsManager">
---    <key name="CopyFile.RECENT_KEYS">
---      <recent name="$PROJECT_DIR$/src/main/resources/org/example/togetjob" />
---    </key>
--     <key name="MoveFile.RECENT_KEYS">
--       <recent name="$PROJECT_DIR$/src/main/resources" />
--       <recent name="$PROJECT_DIR$/src/main/resources/Configurations" />
--@@ -146,42 +137,14 @@
--       <option name="project" value="LOCAL" />
--       <updated>1737883439672</updated>
--     </task>
---    <task id="LOCAL-00007" summary="Terzo Commit: Aggiunta Entity">
---      <option name="closed" value="true" />
---      <created>1738086967897</created>
---      <option name="number" value="00007" />
---      <option name="presentableId" value="LOCAL-00007" />
---      <option name="project" value="LOCAL" />
---      <updated>1738086967897</updated>
---    </task>
---    <task id="LOCAL-00008" summary="Terzo Commit: Aggiunta Entity">
---      <option name="closed" value="true" />
---      <created>1738086982811</created>
---      <option name="number" value="00008" />
---      <option name="presentableId" value="LOCAL-00008" />
---      <option name="project" value="LOCAL" />
---      <updated>1738086982811</updated>
---    </task>
---    <option name="localTasksCounter" value="9" />
--+    <option name="localTasksCounter" value="7" />
--     <servers />
--   </component>
---  <component name="Vcs.Log.Tabs.Properties">
---    <option name="TAB_STATES">
---      <map>
---        <entry key="MAIN">
---          <value>
---            <State />
---          </value>
---        </entry>
---      </map>
---    </option>
---  </component>
--   <component name="VcsManagerConfiguration">
--     <MESSAGE value="Primo Commit" />
--     <MESSAGE value="Secondo Commit: bozza Abstract Factory" />
--     <MESSAGE value="Secondo Commit: Abstract Factory + Singleton completo" />
---    <MESSAGE value="Terzo Commit: Aggiunta Entity" />
---    <option name="LAST_COMMIT_MESSAGE" value="Terzo Commit: Aggiunta Entity" />
--+    <option name="LAST_COMMIT_MESSAGE" value="Secondo Commit: Abstract Factory + Singleton completo" />
--   </component>
--   <component name="XDebuggerManager">
--     <breakpoint-manager>
--Index: src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.concreteobjects;\n\nimport it.model.dao.abstractobjects.JobAnnouncementDao;\nimport it.model.entity.JobAnnouncement;\n\npublic class DataBaseJobAnnouncementDao implements JobAnnouncementDao {\n    @Override\n    public void createJobAnnouncement(JobAnnouncement jobAnnouncement) {\n\n    }\n\n    @Override\n    public JobAnnouncement getJobAnnouncement(int id) {\n        return null;\n    }\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java b/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java
----- a/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java	(revision 192986b6b18ef63ca27d3769033d2251a9598641)
--+++ b/src/main/java/it/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java	(date 1738144583794)
--@@ -3,6 +3,8 @@
-- import it.model.dao.abstractobjects.JobAnnouncementDao;
-- import it.model.entity.JobAnnouncement;
-- 
--+import java.util.Optional;
--+
-- public class DataBaseJobAnnouncementDao implements JobAnnouncementDao {
--     @Override
--     public void createJobAnnouncement(JobAnnouncement jobAnnouncement) {
--@@ -11,6 +13,8 @@
-- 
--     @Override
--     public JobAnnouncement getJobAnnouncement(int id) {
--+
--         return null;
--+
--     }
-- }
--Index: src/main/java/it/model/dao/abstractobjects/UserDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.abstractobjects;\n\nimport it.model.entity.User;\n\npublic interface UserDao {\n\n    void createUser(User user);\n    User getUser(int id);\n\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/abstractobjects/UserDao.java b/src/main/java/it/model/dao/abstractobjects/UserDao.java
----- a/src/main/java/it/model/dao/abstractobjects/UserDao.java	(revision 192986b6b18ef63ca27d3769033d2251a9598641)
--+++ b/src/main/java/it/model/dao/abstractobjects/UserDao.java	(date 1738147968030)
--@@ -2,6 +2,8 @@
-- 
-- import it.model.entity.User;
-- 
--+import java.util.Optional;
--+
-- public interface UserDao {
-- 
--     void createUser(User user);
--Index: src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package it.model.dao.concreteobjects;\n\nimport it.model.dao.abstractobjects.UserDao;\nimport it.model.entity.User;\n\npublic class DataBaseUserDao implements UserDao {\n    @Override\n    public void createUser(User user) {\n    }\n\n    @Override\n    public User getUser(int id) {\n        return null;\n    }\n}\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java b/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java
----- a/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java	(revision 192986b6b18ef63ca27d3769033d2251a9598641)
--+++ b/src/main/java/it/model/dao/concreteobjects/DataBaseUserDao.java	(date 1738148566473)
--@@ -1,15 +1,34 @@
-- package it.model.dao.concreteobjects;
-- 
--+import it.config.ConfigDaoLoader;
-- import it.model.dao.abstractobjects.UserDao;
-- import it.model.entity.User;
-- 
--+import java.sql.Connection;
--+import java.util.Optional;
--+
-- public class DataBaseUserDao implements UserDao {
--+
--+    public DataBaseUserDao(){
--+
--+
--+
--+    }
--+
--+
--+
--     @Override
--     public void createUser(User user) {
--+
--+
--     }
-- 
--     @Override
--     public User getUser(int id) {
--+
--+
--         return null;
--+
--+
--     }
-- }
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_29_01_25__16_50__Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25__16_50__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25__16_50__Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25__16_50__Changes_.xml	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ /dev/null	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_29_01_25,_16_50_[Changes]" date="1738165830146" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_16_50_[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 29/01/25, 16:50 [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"Merge remote-tracking branch 'origin/master'&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml\">\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/bean/InterviewSchedulingBean.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/exceptions/StudentNotFoundException.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/abstractobjects/InterviewSchedulingDao.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseInterviewSchedulingDao.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemInterviewSchedulingDao.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/InMemoryInterviewSchedulingDao.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/factory/InterviewSchedulingFactory.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateAdapter.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/Main.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/bean/JobCandidateSearchBean.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/bean/StudentInfoSearchBean.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/bean/StudentInfoBean.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/bean/StudentInfoBean.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/boundary/SendAJobApplicationRecruiterBoundary.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/boundary/SendAJobApplicationRecruiterBoundary.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/controller/recruiter/ContactAJobCandidate.java\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/controller/student/SendAJobApplication.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/controller/student/SendAJobApplication.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/abstractfactorydao/AbstractFactoryDaoSingleton.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/abstractfactorydao/AbstractFactoryDaoSingleton.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/abstractobjects/JobAnnouncementDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/abstractobjects/JobAnnouncementDao.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/abstractobjects/RecruiterDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/abstractobjects/RecruiterDao.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/abstractobjects/StudentDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/abstractobjects/StudentDao.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concretefactorydao/DataBaseFactoryDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concretefactorydao/DataBaseFactoryDao.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concretefactorydao/FileSystemFactoryDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concretefactorydao/FileSystemFactoryDao.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concretefactorydao/InMemoryFactoryDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concretefactorydao/InMemoryFactoryDao.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseRecruiterDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseRecruiterDao.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseStudentDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseStudentDao.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemRecruiterDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemRecruiterDao.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemStudentDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemStudentDao.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/InMemoryRecruiterDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/InMemoryRecruiterDao.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/InMemoryStudentDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/InMemoryStudentDao.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/entity/InterviewScheduling.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/entity/InterviewScheduling.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/view/cli/concretestate/HomeStudentState.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/view/cli/concretestate/HomeStudentState.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/view/cli/concretestate/JobAnnouncementRecruiterState.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/view/cli/concretestate/JobAnnouncementRecruiterState.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Enum\" />\n        <option value=\"FxmlFile\" />\n        <option value=\"Exception\" />\n        <option value=\"Interface\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"RESET_MODE\" value=\"HARD\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;GaiaMeola&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/GaiaMeola/toGetJob.git&quot;,\n    &quot;accountId&quot;: &quot;0a1af48d-9cff-4190-bde9-bd5096772376&quot;\n  }\n}</component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\n  <component name=\"ProjectId\" id=\"2nypPqqlu30o2C6FKHNbd1EkQVy\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;SONARLINT_PRECOMMIT_ANALYSIS&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/gaiameola/Desktop/ISPW/toGetJob/src/main/resources/org/example/togetjob&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources\" />\n      <recent name=\"$PROJECT_DIR$/src/main/resources/Configurations\" />\n      <recent name=\"$PROJECT_DIR$/target/classes/org/Configurations\" />\n    </key>\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\n      <recent name=\"org.example.togetjob\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"\" />\n      <created>1729955148511</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1729955148511</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1729955369659</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1729955369659</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663831106</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663831106</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663851839</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663851839</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883418179</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883418179</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883426699</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883426699</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883439672</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883439672</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086967897</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086967897</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086982811</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086982811</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Terzo Commit: Prova Database\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738142978544</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738142978544</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Quarto Commit: Connection prova\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152156784</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152156784</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Quarto Commit: Connection riuscita\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152567157</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152567157</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Quinto Commit: Fine Db\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738157742126</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738157742126</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Sesto Commit: Pattern State CLI prova\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738179850232</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738179850233</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"Settimo Commit: prova Caso d'uso Registrazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738233820826</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738233820826</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"Settimo Commit: prova Caso d'uso Registrazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738234210460</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738234210460</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"Settimo Commit: prova Caso d'uso Registrazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738234584655</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738234584655</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"Settimo Commit: Caso d'uso Registrazione e Login iniziati\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738255911165</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738255911165</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"Settimo Commit: Caso d'uso Registrazione e Login completati\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738320033356</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738320033356</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"Settimo Commit: Aggiunta di HomePageStudent, HomePageRecruiter in modalità cli\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738323917280</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738323917280</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"Settimo Commit: Inizio del caso d'uso Send A Job Application\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738534877519</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738534877519</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\"Settimo Commit: Inizio del caso d'uso Send A Job Application\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738591871116</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738591871116</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"Settimo Commit: Prima parte del caso d'uso funzionante\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738602095720</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738602095720</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"Settimo Commit: Prima parte del caso d'uso funzionante\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738602224321</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738602224321</updated>\n    </task>\n    <task id=\"LOCAL-00024\" summary=\"Settimo Commit: Prima parte del caso d'uso funzionante\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738602353802</created>\n      <option name=\"number\" value=\"00024\" />\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738602353802</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"25\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Primo Commit\" />\n    <MESSAGE value=\"Secondo Commit: bozza Abstract Factory\" />\n    <MESSAGE value=\"Secondo Commit: Abstract Factory + Singleton completo\" />\n    <MESSAGE value=\"Terzo Commit: Aggiunta Entity\" />\n    <MESSAGE value=\"Terzo Commit: Prova Database\" />\n    <MESSAGE value=\"Quarto Commit: Connection prova\" />\n    <MESSAGE value=\"Quarto Commit: Connection riuscita\" />\n    <MESSAGE value=\"Quinto Commit: Fine Db\" />\n    <MESSAGE value=\"Sesto Commit: Pattern State CLI prova\" />\n    <MESSAGE value=\"Settimo Commit: prova Caso d'uso Registrazione\" />\n    <MESSAGE value=\"Settimo Commit: Caso d'uso Registrazione e Login iniziati\" />\n    <MESSAGE value=\"Settimo Commit: Caso d'uso Registrazione e Login completati\" />\n    <MESSAGE value=\"Settimo Commit: Aggiunta di HomePageStudent, HomePageRecruiter in modalità cli\" />\n    <MESSAGE value=\"Settimo Commit: Inizio del caso d'uso Send A Job Application\" />\n    <MESSAGE value=\"Settimo Commit: Prima parte del caso d'uso funzionante\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Settimo Commit: Prima parte del caso d'uso funzionante\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\n          <option name=\"timeStamp\" value=\"14\" />\n        </breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/main/java/org/example/togetjob/view/cli/concretestate/RegisterState.java</url>\n          <line>63</line>\n          <option name=\"timeStamp\" value=\"25\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/main/java/org/example/togetjob/view/cli/concretestate/RegisterState.java</url>\n          <line>68</line>\n          <option name=\"timeStamp\" value=\"26\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ b/.idea/workspace.xml	(date 1738855650295)
-@@ -4,39 +4,27 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Merge remote-tracking branch 'origin/master'&#10;&#10;# Conflicts:&#10;#&#9;.idea/workspace.xml">
--      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/bean/InterviewSchedulingBean.java" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/exceptions/StudentNotFoundException.java" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/abstractobjects/InterviewSchedulingDao.java" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseInterviewSchedulingDao.java" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemInterviewSchedulingDao.java" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/InMemoryInterviewSchedulingDao.java" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/factory/InterviewSchedulingFactory.java" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateAdapter.java" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateController.java" afterDir="false" />
-+    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="file system">
-+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_13_02_[Changes]/shelved.patch" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_13_10_[Changes]/shelved.patch" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_16_50_[Changes]/shelved.patch" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_01_25,_23_49_[Changes]/shelved.patch" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_11_45_[Changes]/shelved.patch" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_11_50_[Changes]/shelved.patch" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_11_56_[Changes]/shelved.patch" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_12_06_[Changes]/shelved.patch" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_01_25,_12_50 PM_[Changes]/shelved.patch" beforeDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/Main.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/bean/JobCandidateSearchBean.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/bean/StudentInfoSearchBean.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/bean/StudentInfoBean.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/bean/StudentInfoBean.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/boundary/SendAJobApplicationRecruiterBoundary.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/boundary/SendAJobApplicationRecruiterBoundary.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/controller/recruiter/ContactAJobCandidate.java" beforeDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/controller/student/SendAJobApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/controller/student/SendAJobApplication.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/abstractfactorydao/AbstractFactoryDaoSingleton.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/abstractfactorydao/AbstractFactoryDaoSingleton.java" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/abstractobjects/JobAnnouncementDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/abstractobjects/JobAnnouncementDao.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/abstractobjects/RecruiterDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/abstractobjects/RecruiterDao.java" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/abstractobjects/JobApplicationDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/abstractobjects/JobApplicationDao.java" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/abstractobjects/StudentDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/abstractobjects/StudentDao.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concretefactorydao/DataBaseFactoryDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concretefactorydao/DataBaseFactoryDao.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concretefactorydao/FileSystemFactoryDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concretefactorydao/FileSystemFactoryDao.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concretefactorydao/InMemoryFactoryDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concretefactorydao/InMemoryFactoryDao.java" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseJobAnnouncementDao.java" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseJobApplicationDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseJobApplicationDao.java" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseRecruiterDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseRecruiterDao.java" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseStudentDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseStudentDao.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemRecruiterDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemRecruiterDao.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemStudentDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemStudentDao.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/InMemoryRecruiterDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/InMemoryRecruiterDao.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/InMemoryStudentDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/InMemoryStudentDao.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/entity/InterviewScheduling.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/entity/InterviewScheduling.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/cli/concretestate/HomeStudentState.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/cli/concretestate/HomeStudentState.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/cli/concretestate/JobAnnouncementRecruiterState.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/cli/concretestate/JobAnnouncementRecruiterState.java" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseUserDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/DataBaseUserDao.java" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/entity/JobApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/entity/JobApplication.java" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/src/main/resources/dao.config.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/dao.config.properties" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-@@ -64,12 +52,12 @@
-     &quot;assignee&quot;: &quot;GaiaMeola&quot;
-   }
- }</component>
--  <component name="GithubPullRequestsUISettings">{
--  &quot;selectedUrlAndAccountId&quot;: {
--    &quot;url&quot;: &quot;https://github.com/GaiaMeola/toGetJob.git&quot;,
--    &quot;accountId&quot;: &quot;0a1af48d-9cff-4190-bde9-bd5096772376&quot;
--  }
--}</component>
-+  <component name="GithubPullRequestsUISettings"><![CDATA[{
-+  "selectedUrlAndAccountId": {
-+    "url": "https://github.com/GaiaMeola/toGetJob.git",
-+    "accountId": "10ff2728-a55b-45dc-b4f1-a35abedc973c"
-+  }
-+}]]></component>
-   <component name="MavenImportPreferences">
-     <option name="generalSettings">
-       <MavenGeneralSettings>
-@@ -97,7 +85,7 @@
-     &quot;git-widget-placeholder&quot;: &quot;master&quot;,
-     &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-     &quot;last_opened_file_path&quot;: &quot;/Users/gaiameola/Desktop/ISPW/toGetJob/src/main/resources/org/example/togetjob&quot;,
--    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,
-+    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
-     &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
-     &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
-     &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;
-@@ -317,7 +305,23 @@
-       <option name="project" value="LOCAL" />
-       <updated>1738602353802</updated>
-     </task>
--    <option name="localTasksCounter" value="25" />
-+    <task id="LOCAL-00025" summary="file system">
-+      <option name="closed" value="true" />
-+      <created>1738768039632</created>
-+      <option name="number" value="00025" />
-+      <option name="presentableId" value="LOCAL-00025" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1738768039632</updated>
-+    </task>
-+    <task id="LOCAL-00026" summary="file system">
-+      <option name="closed" value="true" />
-+      <created>1738768134663</created>
-+      <option name="number" value="00026" />
-+      <option name="presentableId" value="LOCAL-00026" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1738768134663</updated>
-+    </task>
-+    <option name="localTasksCounter" value="27" />
-     <servers />
-   </component>
-   <component name="Vcs.Log.Tabs.Properties">
-@@ -347,7 +351,8 @@
-     <MESSAGE value="Settimo Commit: Aggiunta di HomePageStudent, HomePageRecruiter in modalità cli" />
-     <MESSAGE value="Settimo Commit: Inizio del caso d'uso Send A Job Application" />
-     <MESSAGE value="Settimo Commit: Prima parte del caso d'uso funzionante" />
--    <option name="LAST_COMMIT_MESSAGE" value="Settimo Commit: Prima parte del caso d'uso funzionante" />
-+    <MESSAGE value="file system" />
-+    <option name="LAST_COMMIT_MESSAGE" value="file system" />
-   </component>
-   <component name="XDebuggerManager">
-     <breakpoint-manager>
-Index: src/main/resources/dao.config.properties
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>#le configurazioni possono essere: in memory, jdbc, json\ndao.type = json
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>ISO-8859-1
-===================================================================
-diff --git a/src/main/resources/dao.config.properties b/src/main/resources/dao.config.properties
---- a/src/main/resources/dao.config.properties	(revision c0f34d0966e425bb1ee587c36c66c66a620f085c)
-+++ b/src/main/resources/dao.config.properties	(date 1738833317089)
-@@ -1,2 +1,2 @@
- #le configurazioni possono essere: in memory, jdbc, json
--dao.type = json
-\ No newline at end of file
-+dao.type = jdbc
-\ No newline at end of file
Index: src/main/java/org/example/togetjob/pattern/Notification.java
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/Notification.java b/src/main/java/org/example/togetjob/pattern/Notification.java
deleted file mode 100644
--- a/src/main/java/org/example/togetjob/pattern/Notification.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ /dev/null	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
@@ -1,10 +0,0 @@
-package org.example.togetjob.pattern;
-
-import org.example.togetjob.model.entity.InterviewScheduling;
-import org.example.togetjob.model.entity.JobApplication;
-
-public interface Notification {
-    void showJobApplicationNotification(JobApplication jobApplication);
-    void showInterviewNotification(InterviewScheduling interviewScheduling);
-    void setMessage(String message);
-}
Index: .idea/shelf/Uncommitted_changes_before_Update_at_06_02_25__16_27__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_06_02_25__16_27__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_06_02_25__16_27__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_06_02_25__16_27__Changes_.xml	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ /dev/null	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_06_02_25,_16_27_[Changes]" date="1738855661290" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_06_02_25,_16_27_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 06/02/25, 16:27 [Changes]" />
-</changelist>
\ No newline at end of file
Index: src/main/java/org/example/togetjob/model/factory/NotificationFactory.java
===================================================================
diff --git a/src/main/java/org/example/togetjob/model/factory/NotificationFactory.java b/src/main/java/org/example/togetjob/model/factory/NotificationFactory.java
deleted file mode 100644
--- a/src/main/java/org/example/togetjob/model/factory/NotificationFactory.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ /dev/null	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
@@ -1,39 +0,0 @@
-package org.example.togetjob.model.factory;
-
-import org.example.togetjob.config.ConfigUILoader;
-import org.example.togetjob.exceptions.ConfigException;
-import org.example.togetjob.pattern.CLINotification;
-import org.example.togetjob.pattern.GUINotification;
-import org.example.togetjob.pattern.Notification;
-
-public class NotificationFactory {
-
-    private static final String CONFIG_FILE = "ui.config.properties";
-
-    private NotificationFactory() {
-        //To not create instance
-    }
-
-    public static Notification createNotification(String message) throws ConfigException {
-        ConfigUILoader uiLoader;
-
-        try {
-            uiLoader = new ConfigUILoader(CONFIG_FILE);
-        } catch (ConfigException e) {
-            throw new ConfigException("Error during the configuration", e);
-        }
-
-        String uiType = uiLoader.getProperty("ui.type");
-
-        Notification notification = switch (uiType.toLowerCase()) {
-            case "cli" -> new CLINotification();
-            case "gui" -> new GUINotification();
-            default -> throw new ConfigException("UI not found: " + uiType);
-        };
-
-        notification.setMessage(message);
-        return notification;
-
-    }
-
-}
Index: src/main/java/org/example/togetjob/view/gui/controllergrafico/SendAJobApplicationByStudentController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.togetjob.view.gui.controllergrafico;\n\nimport javafx.application.Platform;\nimport javafx.beans.property.SimpleStringProperty;\nimport javafx.collections.FXCollections;\nimport javafx.collections.ObservableList;\nimport javafx.fxml.FXML;\nimport javafx.scene.control.*;\nimport javafx.scene.layout.VBox;\nimport org.example.togetjob.bean.JobAnnouncementBean;\nimport org.example.togetjob.bean.JobAnnouncementSearchBean;\nimport org.example.togetjob.bean.JobApplicationBean;\nimport org.example.togetjob.printer.Printer;\nimport org.example.togetjob.view.boundary.SendAJobApplicationStudentBoundary;\nimport org.example.togetjob.view.gui.GUIContext;\nimport org.example.togetjob.view.gui.concretestate.HomeStudentState;\n\nimport java.util.List;\n\npublic class SendAJobApplicationByStudentController {\n\n\n    private static final String COMMON_FONT_STYLE = \"-fx-font-family: AppleGothic Regular; -fx-font-size: 18px; -fx-text-fill: #2980b9;\";\n\n    private static final String BUTTON_STYLE = \"-fx-background-color: #b3d9ff; \" +\n            \"-fx-text-fill: #2980b9; \" +\n            \"-fx-border-radius: 10; \" +\n            \"-fx-border-color: #2980b9; \" +\n            \"-fx-border-width: 2; \" +\n            \"-fx-cursor: hand; \" +\n            \"-fx-font-weight: bold; \" +\n            \"-fx-background-radius: 10;\";\n\n    @FXML\n    private TableView<JobAnnouncementBean> jobsTable;\n    @FXML\n    private TableColumn<JobAnnouncementBean, String> jobTitleColumn;\n    @FXML\n    private TableColumn<JobAnnouncementBean, String> companyColumn;\n    @FXML\n    private TableColumn<JobAnnouncementBean, Void> actionsColumn;\n\n    private GUIContext guiContext;\n    private JobAnnouncementSearchBean jobAnnouncementSearchBean;\n    private final SendAJobApplicationStudentBoundary boundary = new SendAJobApplicationStudentBoundary();\n\n    public void setContext(GUIContext context) {\n        this.guiContext = context;\n    }\n\n    public void setJobAnnouncementSearchBean(JobAnnouncementSearchBean jobAnnouncementSearchBean) {\n        this.jobAnnouncementSearchBean = jobAnnouncementSearchBean;\n        if (jobsTable != null) {\n            loadJobAnnouncements();\n        }\n    }\n\n    @FXML\n    private void initialize() {\n\n\n        jobTitleColumn.setCellValueFactory(cellData -> new SimpleStringProperty(cellData.getValue().getJobTitle()));\n        companyColumn.setCellValueFactory(cellData -> new SimpleStringProperty(cellData.getValue().getCompanyName()));\n\n        actionsColumn.setCellFactory(param -> new TableCell<>() {\n            private final Button viewDetailsButton = new Button(\"View Details\");\n            private final Button sendApplicationButton = new Button(\"Send a job application\");\n            private final VBox buttonsBox = new VBox(10, viewDetailsButton, sendApplicationButton);\n\n            {\n                viewDetailsButton.setStyle(BUTTON_STYLE);\n                sendApplicationButton.setStyle(BUTTON_STYLE);\n\n                viewDetailsButton.setOnAction(event -> viewJobDetails(getTableView().getItems().get(getIndex())));\n                sendApplicationButton.setOnAction(event -> openJobApplicationForm(getTableView().getItems().get(getIndex())));\n            }\n\n            @Override\n            protected void updateItem(Void item, boolean empty) {\n                super.updateItem(item, empty);\n                setGraphic(empty ? null : buttonsBox);\n            }\n        });\n\n        if (jobAnnouncementSearchBean != null) {\n            loadJobAnnouncements();\n        }\n    }\n\n    public void loadJobAnnouncements() {\n        if (jobAnnouncementSearchBean == null) {\n            Printer.print(\"ERROR: jobAnnouncementSearchBean is NULL\");\n            return;\n        }\n        List<JobAnnouncementBean> jobList = boundary.getJobAnnouncements(jobAnnouncementSearchBean);\n        ObservableList<JobAnnouncementBean> observableList = FXCollections.observableArrayList(jobList);\n        jobsTable.setItems(observableList);\n    }\n\n    private void viewJobDetails(JobAnnouncementBean job) {\n        Alert alert = new Alert(Alert.AlertType.INFORMATION);\n        alert.setTitle(\"Job Details\");\n        alert.setHeaderText(\"Position: \" + job.getJobTitle() + \" at \" + job.getCompanyName());\n\n        String details = \"\"\"\n                \uD83D\uDCCC Role: %s\n                \uD83C\uDFE2 Job Type: %s\n                \uD83D\uDCCD Location: %s\n                ⏰ Working Hours: %s\n                \uD83D\uDCB0 Salary: %s\n                \"\"\".formatted(\n                job.getRole(),\n                job.getJobType(),\n                job.getLocation(),\n                job.getWorkingHours(),\n                job.getSalary()\n        );\n\n\n        alert.setContentText(details);\n        alert.getDialogPane().setStyle(COMMON_FONT_STYLE);\n        alert.showAndWait();\n    }\n\n\n    private void openJobApplicationForm(JobAnnouncementBean job) {\n        JobApplicationBean applicationBean = boundary.fillJobApplicationForm(job);\n\n        Dialog<JobApplicationBean> dialog = new Dialog<>();\n        dialog.setTitle(\"Apply for: \" + job.getJobTitle());\n\n        TextArea coverLetterField = new TextArea();\n        coverLetterField.setPromptText(\"Write your cover letter here...\");\n        coverLetterField.setPrefRowCount(5);\n        coverLetterField.setStyle(COMMON_FONT_STYLE);\n\n        VBox formBox = new VBox(10, new Label(\"Cover Letter:\"), coverLetterField);\n        formBox.setStyle(\"-fx-padding: 10;\");\n\n        dialog.getDialogPane().setContent(formBox);\n        dialog.getDialogPane().getButtonTypes().addAll(\n                new ButtonType(\"Submit\", ButtonBar.ButtonData.OK_DONE),\n                new ButtonType(\"Go Back\", ButtonBar.ButtonData.CANCEL_CLOSE)\n        );\n\n        dialog.setOnShown(event ->\n                Platform.runLater(() -> {\n                    dialog.getDialogPane().lookupButton(ButtonType.OK).setStyle(BUTTON_STYLE);  // Applica lo stile al bottone \"Submit\"\n                    dialog.getDialogPane().lookupButton(ButtonType.CANCEL).setStyle(BUTTON_STYLE);  // Applica lo stile al bottone \"Go Back\"\n                })\n        );\n\n        dialog.setResultConverter(dialogButton -> {\n            if (dialogButton.getButtonData() == ButtonBar.ButtonData.OK_DONE) {\n                applicationBean.setCoverLetter(coverLetterField.getText());\n                boolean success = boundary.sendAJobApplication(applicationBean);\n                showAlert(success ? Alert.AlertType.INFORMATION : Alert.AlertType.ERROR,\n                        success ? \"Application submitted successfully!\" : \"Failed to submit application.\");\n                return applicationBean;\n            }\n            return null;\n        });\n\n        dialog.showAndWait();\n    }\n\n\n    private void showAlert(Alert.AlertType type, String message) {\n        Alert alert = new Alert(type, message);\n        alert.setTitle(\"Job Application\");\n        alert.setHeaderText(null);\n        alert.showAndWait();\n    }\n\n    @FXML\n    private void handleGoBack() {\n        if (guiContext != null) {\n            guiContext.setState(new HomeStudentState(guiContext));\n            guiContext.showMenu();\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/view/gui/controllergrafico/SendAJobApplicationByStudentController.java b/src/main/java/org/example/togetjob/view/gui/controllergrafico/SendAJobApplicationByStudentController.java
--- a/src/main/java/org/example/togetjob/view/gui/controllergrafico/SendAJobApplicationByStudentController.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ b/src/main/java/org/example/togetjob/view/gui/controllergrafico/SendAJobApplicationByStudentController.java	(date 1739454547553)
@@ -29,6 +29,7 @@
             "-fx-border-width: 2; " +
             "-fx-cursor: hand; " +
             "-fx-font-weight: bold; " +
+            "-fx-font-size: 12px; " +
             "-fx-background-radius: 10;";
 
     @FXML
@@ -153,10 +154,19 @@
         dialog.setResultConverter(dialogButton -> {
             if (dialogButton.getButtonData() == ButtonBar.ButtonData.OK_DONE) {
                 applicationBean.setCoverLetter(coverLetterField.getText());
-                boolean success = boundary.sendAJobApplication(applicationBean);
-                showAlert(success ? Alert.AlertType.INFORMATION : Alert.AlertType.ERROR,
-                        success ? "Application submitted successfully!" : "Failed to submit application.");
-                return applicationBean;
+
+                try {
+
+                    boolean success = boundary.sendAJobApplication(applicationBean);
+
+
+                    showAlert(success ? Alert.AlertType.INFORMATION : Alert.AlertType.ERROR,
+                            success ? "Application submitted successfully!" : "Failed to submit application.");
+
+                } catch (Exception e) {
+                    showAlert(Alert.AlertType.ERROR, "Error: " + e.getMessage());
+                    e.printStackTrace(); // Per il debug
+                }
             }
             return null;
         });
@@ -164,11 +174,11 @@
         dialog.showAndWait();
     }
 
-
-    private void showAlert(Alert.AlertType type, String message) {
-        Alert alert = new Alert(type, message);
-        alert.setTitle("Job Application");
+    private void showAlert(Alert.AlertType alertType, String message) {
+        Alert alert = new Alert(alertType);
+        alert.setTitle("Job Application Status");
         alert.setHeaderText(null);
+        alert.setContentText(message);
         alert.showAndWait();
     }
 
Index: src/main/java/org/example/togetjob/model/entity/JobAnnouncement.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.togetjob.model.entity;\n\nimport org.example.togetjob.pattern.subject.JobApplicationCollectionSubjectRecruiter;\n\npublic class JobAnnouncement {\n\n    private final String jobTitle;\n    private final String jobType;\n    private final String jobRole;\n    private final String location;\n    private final int workingHours;\n    private final String companyName;\n    private final double salary;\n    private String description;\n    private Boolean isActive;\n    private Recruiter recruiter;\n    private final JobApplicationCollectionSubjectRecruiter jobApplicationCollection;\n\n    public JobAnnouncement(String jobTitle, String jobType, String jobRole, String location,\n                           int workingHours, String companyName, double salary) {\n        this.jobTitle = jobTitle;\n        this.jobType = jobType;\n        this.jobRole = jobRole;\n        this.location = location;\n        this.workingHours = workingHours;\n        this.companyName = companyName;\n        this.salary = salary;\n        this.recruiter = null;\n\n        this.jobApplicationCollection = new JobApplicationCollectionSubjectRecruiter();\n    }\n\n    public void setRecruiter(Recruiter recruiter) {\n        this.recruiter = recruiter;\n    }\n\n    public String obtainJobTitle() {\n        return jobTitle;\n    }\n\n    public String obtainJobType() {\n        return jobType;\n    }\n\n    public String obtainJobRole() {\n        return jobRole;\n    }\n\n    public String obtainLocation() {\n        return location;\n    }\n\n    public int obtainWorkingHours() {\n        return workingHours;\n    }\n\n    public String obtainCompanyName() {\n        return companyName;\n    }\n\n    public double obtainSalary() {\n        return salary;\n    }\n\n    public String obtainDescription() {\n        return description;\n    }\n\n    public Boolean isJobActive() {\n        return isActive;\n    }\n\n    public Recruiter getRecruiter() {\n        return recruiter;\n    }\n\n    public void setActive(Boolean active) {\n        isActive = active;\n    }\n\n    public JobApplicationCollectionSubjectRecruiter getJobApplicationCollection() {\n        return jobApplicationCollection;\n    }\n\n    public void setDescription(String description) { this.description = description; }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/model/entity/JobAnnouncement.java b/src/main/java/org/example/togetjob/model/entity/JobAnnouncement.java
--- a/src/main/java/org/example/togetjob/model/entity/JobAnnouncement.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ b/src/main/java/org/example/togetjob/model/entity/JobAnnouncement.java	(date 1739465740915)
@@ -1,6 +1,6 @@
 package org.example.togetjob.model.entity;
 
-import org.example.togetjob.pattern.subject.JobApplicationCollectionSubjectRecruiter;
+import org.example.togetjob.pattern.subject.JobApplicationCollection;
 
 public class JobAnnouncement {
 
@@ -14,7 +14,7 @@
     private String description;
     private Boolean isActive;
     private Recruiter recruiter;
-    private final JobApplicationCollectionSubjectRecruiter jobApplicationCollection;
+    private final JobApplicationCollection jobApplicationCollection;
 
     public JobAnnouncement(String jobTitle, String jobType, String jobRole, String location,
                            int workingHours, String companyName, double salary) {
@@ -27,7 +27,7 @@
         this.salary = salary;
         this.recruiter = null;
 
-        this.jobApplicationCollection = new JobApplicationCollectionSubjectRecruiter();
+        this.jobApplicationCollection = new JobApplicationCollection();
     }
 
     public void setRecruiter(Recruiter recruiter) {
@@ -78,7 +78,7 @@
         isActive = active;
     }
 
-    public JobApplicationCollectionSubjectRecruiter getJobApplicationCollection() {
+    public JobApplicationCollection getJobApplicationCollection() {
         return jobApplicationCollection;
     }
 
Index: src/main/java/org/example/togetjob/pattern/observer/RecruiterNotificationObserver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/observer/RecruiterNotificationObserver.java b/src/main/java/org/example/togetjob/pattern/observer/Observer.java
rename from src/main/java/org/example/togetjob/pattern/observer/RecruiterNotificationObserver.java
rename to src/main/java/org/example/togetjob/pattern/observer/Observer.java
--- a/src/main/java/org/example/togetjob/pattern/observer/RecruiterNotificationObserver.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ b/src/main/java/org/example/togetjob/pattern/observer/Observer.java	(date 1739469158924)
@@ -1,9 +1,20 @@
 package org.example.togetjob.pattern.observer;
 
-import org.example.togetjob.model.entity.JobApplication;
+public abstract class Observer {
+
+    protected boolean isAlive;
 
-public interface RecruiterNotificationObserver {
+    protected Observer() {
+        this.isAlive = false;
+    }
 
-    void update(JobApplication jobApplication);
+    public void start() {
+        this.isAlive = true;
+    }
 
+    public void stop() {
+        this.isAlive = false;
+    }
+
+    public abstract void update();
 }
Index: src/main/java/org/example/togetjob/view/boundary/ContactAJobCandidateRecruiterBoundary.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.togetjob.view.boundary;\n\nimport org.example.togetjob.bean.InterviewSchedulingBean;\nimport org.example.togetjob.bean.JobAnnouncementBean;\nimport org.example.togetjob.bean.StudentInfoBean;\nimport org.example.togetjob.bean.StudentInfoSearchBean;\nimport org.example.togetjob.controller.student.SendAJobApplication;\nimport org.example.togetjob.exceptions.*;\nimport org.example.togetjob.model.dao.abstractfactorydao.AbstractFactoryDaoSingleton;\nimport org.example.togetjob.pattern.adapter.ContactAJobCandidateAdapter;\nimport org.example.togetjob.pattern.adapter.ContactAJobCandidateController;\nimport org.example.togetjob.pattern.subject.SchedulingInterviewCollectionSubjectRecruiter;\n\nimport java.util.List;\n\npublic class ContactAJobCandidateRecruiterBoundary {\n\n    private final ContactAJobCandidateController contactAJobCandidateController;\n\n    public ContactAJobCandidateRecruiterBoundary() {\n        this.contactAJobCandidateController = new ContactAJobCandidateAdapter(\n                new SendAJobApplication(),\n                AbstractFactoryDaoSingleton.getFactoryDao().createStudentDao(),\n                AbstractFactoryDaoSingleton.getFactoryDao().createJobAnnouncementDao(),\n                AbstractFactoryDaoSingleton.getFactoryDao().createJobApplicationDao(),\n                AbstractFactoryDaoSingleton.getFactoryDao().createInterviewSchedulingDao(),\n                new SchedulingInterviewCollectionSubjectRecruiter()\n        );\n    }\n\n    public List<JobAnnouncementBean> getJobAnnouncementsByRecruiter() {\n        return contactAJobCandidateController.getJobAnnouncementsByRecruiter();\n    }\n\n    public List<StudentInfoBean> getFilteredCandidates(StudentInfoSearchBean searchCriteria, JobAnnouncementBean jobAnnouncement) {\n        return contactAJobCandidateController.showFilteredCandidates(searchCriteria, jobAnnouncement);\n    }\n\n    public InterviewSchedulingBean getInterviewSchedulingForm(StudentInfoBean candidate, JobAnnouncementBean jobAnnouncement) {\n        return contactAJobCandidateController.showInterviewSchedulingForm(candidate, jobAnnouncement);\n    }\n\n    public boolean inviteCandidateToInterview(InterviewSchedulingBean interviewDetails) throws DateNotValidException, StudentNotFoundException , JobAnnouncementNotFoundException , JobApplicationNotFoundException , InterviewSchedulingAlreadyExistsException , NotificationException {\n        return contactAJobCandidateController.sendInterviewInvitation(interviewDetails);\n    }\n\n    public List<InterviewSchedulingBean> getInterviewSchedules(JobAnnouncementBean jobAnnouncementBean) throws JobAnnouncementNotFoundException{\n        return contactAJobCandidateController.getInterviewSchedules(jobAnnouncementBean);\n    }\n\n    public boolean modifyInterview(InterviewSchedulingBean interviewScheduling) throws DateNotValidException , StudentNotFoundException , JobAnnouncementNotFoundException , InterviewSchedulingNotFoundException {\n        return contactAJobCandidateController.modifyInterview(interviewScheduling);\n    }\n\n    public boolean deleteInterview(InterviewSchedulingBean interviewScheduling) throws StudentNotFoundException , JobAnnouncementNotFoundException , InterviewSchedulingNotFoundException{\n        return contactAJobCandidateController.deleteInterview(interviewScheduling);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/view/boundary/ContactAJobCandidateRecruiterBoundary.java b/src/main/java/org/example/togetjob/view/boundary/ContactAJobCandidateRecruiterBoundary.java
--- a/src/main/java/org/example/togetjob/view/boundary/ContactAJobCandidateRecruiterBoundary.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ b/src/main/java/org/example/togetjob/view/boundary/ContactAJobCandidateRecruiterBoundary.java	(date 1739461833456)
@@ -9,7 +9,6 @@
 import org.example.togetjob.model.dao.abstractfactorydao.AbstractFactoryDaoSingleton;
 import org.example.togetjob.pattern.adapter.ContactAJobCandidateAdapter;
 import org.example.togetjob.pattern.adapter.ContactAJobCandidateController;
-import org.example.togetjob.pattern.subject.SchedulingInterviewCollectionSubjectRecruiter;
 
 import java.util.List;
 
@@ -23,8 +22,7 @@
                 AbstractFactoryDaoSingleton.getFactoryDao().createStudentDao(),
                 AbstractFactoryDaoSingleton.getFactoryDao().createJobAnnouncementDao(),
                 AbstractFactoryDaoSingleton.getFactoryDao().createJobApplicationDao(),
-                AbstractFactoryDaoSingleton.getFactoryDao().createInterviewSchedulingDao(),
-                new SchedulingInterviewCollectionSubjectRecruiter()
+                AbstractFactoryDaoSingleton.getFactoryDao().createInterviewSchedulingDao()
         );
     }
 
Index: src/main/java/org/example/togetjob/view/boundary/SendAJobApplicationStudentBoundary.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.togetjob.view.boundary;\n\nimport org.example.togetjob.bean.JobAnnouncementBean;\nimport org.example.togetjob.bean.JobAnnouncementSearchBean;\nimport org.example.togetjob.bean.JobApplicationBean;\nimport org.example.togetjob.controller.student.SendAJobApplication;\nimport org.example.togetjob.exceptions.JobAnnouncementNotActiveException;\nimport org.example.togetjob.exceptions.JobAnnouncementNotFoundException;\nimport org.example.togetjob.exceptions.JobApplicationAlreadySentException;\nimport org.example.togetjob.exceptions.RecruiterNotFoundException;\n\nimport java.util.List;\n\npublic class SendAJobApplicationStudentBoundary {\n\n    private final SendAJobApplication controller;\n\n    public SendAJobApplicationStudentBoundary(){\n        this.controller = new SendAJobApplication();\n    }\n\n    public List<JobAnnouncementBean> getJobAnnouncements(JobAnnouncementSearchBean jobAnnouncementSearchBean){\n        return controller.showFilteredJobAnnouncements(jobAnnouncementSearchBean);\n    }\n\n    public JobApplicationBean fillJobApplicationForm(JobAnnouncementBean jobAnnouncementBean){\n        return controller.showJobApplicationForm(jobAnnouncementBean);\n    }\n\n    public boolean sendAJobApplication(JobApplicationBean jobApplicationBean) throws RecruiterNotFoundException , JobAnnouncementNotFoundException , JobAnnouncementNotActiveException , JobApplicationAlreadySentException {\n        return controller.sendAJobApplication(jobApplicationBean);\n    }\n\n    public List<JobApplicationBean> getJobApplicationsByStudent() {\n        return controller.getAllJobApplication();\n    }\n\n    public boolean modifyAJobApplication(JobApplicationBean jobApplicationBean){\n        return controller.modifyJobApplication(jobApplicationBean);\n    }\n\n    public boolean deleteAJobApplication(JobApplicationBean jobApplicationBean){\n        return controller.deleteJobApplication(jobApplicationBean);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/view/boundary/SendAJobApplicationStudentBoundary.java b/src/main/java/org/example/togetjob/view/boundary/SendAJobApplicationStudentBoundary.java
--- a/src/main/java/org/example/togetjob/view/boundary/SendAJobApplicationStudentBoundary.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ b/src/main/java/org/example/togetjob/view/boundary/SendAJobApplicationStudentBoundary.java	(date 1739454372785)
@@ -4,10 +4,7 @@
 import org.example.togetjob.bean.JobAnnouncementSearchBean;
 import org.example.togetjob.bean.JobApplicationBean;
 import org.example.togetjob.controller.student.SendAJobApplication;
-import org.example.togetjob.exceptions.JobAnnouncementNotActiveException;
-import org.example.togetjob.exceptions.JobAnnouncementNotFoundException;
-import org.example.togetjob.exceptions.JobApplicationAlreadySentException;
-import org.example.togetjob.exceptions.RecruiterNotFoundException;
+import org.example.togetjob.exceptions.*;
 
 import java.util.List;
 
@@ -27,7 +24,7 @@
         return controller.showJobApplicationForm(jobAnnouncementBean);
     }
 
-    public boolean sendAJobApplication(JobApplicationBean jobApplicationBean) throws RecruiterNotFoundException , JobAnnouncementNotFoundException , JobAnnouncementNotActiveException , JobApplicationAlreadySentException {
+    public boolean sendAJobApplication(JobApplicationBean jobApplicationBean) throws RecruiterNotFoundException , JobAnnouncementNotFoundException , JobAnnouncementNotActiveException , JobApplicationAlreadySentException, ConfigException {
         return controller.sendAJobApplication(jobApplicationBean);
     }
 
Index: src/main/java/org/example/togetjob/controller/recruiter/PublishAJobAnnouncementController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.togetjob.controller.recruiter;\n\nimport org.example.togetjob.bean.JobAnnouncementBean;\nimport org.example.togetjob.controller.LoginController;\nimport org.example.togetjob.exceptions.InvalidSalaryException;\nimport org.example.togetjob.exceptions.InvalidWorkingHourException;\nimport org.example.togetjob.exceptions.JobAnnouncementAlreadyExists;\nimport org.example.togetjob.exceptions.UserNotLoggedException;\nimport org.example.togetjob.model.dao.abstractfactorydao.AbstractFactoryDaoSingleton;\nimport org.example.togetjob.model.dao.abstractobjects.JobAnnouncementDao;\nimport org.example.togetjob.model.entity.JobAnnouncement;\nimport org.example.togetjob.model.entity.Recruiter;\nimport org.example.togetjob.model.factory.JobAnnouncementFactory;\nimport org.example.togetjob.pattern.observer.RecruiterObserverStudent;\nimport org.example.togetjob.session.SessionManager;\n\nimport java.util.*;\n\npublic class PublishAJobAnnouncementController {\n\n    private final JobAnnouncementDao jobAnnouncementDao;\n    private final LoginController loginController;\n\n    public PublishAJobAnnouncementController(){\n      this.jobAnnouncementDao = AbstractFactoryDaoSingleton.getFactoryDao().createJobAnnouncementDao();\n      this.loginController = new LoginController();\n    }\n\n    public boolean publishJobAnnouncement(JobAnnouncementBean jobAnnouncementBean){\n\n        Recruiter recruiter = getRecruiterFromSession();\n        int workingHours ;\n        double salary ;\n\n        if(isUserLogged()){\n            throw new UserNotLoggedException();\n        }\n\n        if (jobAnnouncementDao.jobAnnouncementExists(jobAnnouncementBean.getJobTitle(), recruiter)) {\n            throw new JobAnnouncementAlreadyExists(\"A job announcement with this title already exists.\");  // false if job announcement exists\n        }\n\n        try {\n            workingHours = Integer.parseInt(jobAnnouncementBean.getWorkingHours());\n        } catch (NumberFormatException e) {\n            throw new InvalidWorkingHourException(\"Working hours must be greater than 0.\");\n        }\n\n        try {\n            salary = Double.parseDouble(jobAnnouncementBean.getSalary());\n        } catch (NumberFormatException e) {\n            throw new InvalidSalaryException(\"Working hours must be greater than 0.\");\n        }\n\n        JobAnnouncement jobAnnouncement = JobAnnouncementFactory.createJobAnnouncement(\n                jobAnnouncementBean.getJobTitle(),\n                jobAnnouncementBean.getJobType(),\n                jobAnnouncementBean.getRole(),\n                jobAnnouncementBean.getLocation(),\n                workingHours,\n                jobAnnouncementBean.getCompanyName(),\n                salary\n        );\n\n        JobAnnouncementFactory.completeJobAnnouncement(\n                jobAnnouncement,\n                jobAnnouncementBean.getDescription(),\n                recruiter,\n                true\n        ); //default\n\n        // register recruiter who publishes the job announcement\n        jobAnnouncement.getJobApplicationCollection().attach(new RecruiterObserverStudent(recruiter));\n        return jobAnnouncementDao.saveJobAnnouncement(jobAnnouncement);\n\n    }\n\n    private Recruiter getRecruiterFromSession() {\n        return SessionManager.getInstance().getRecruiterFromSession();\n    }\n\n    public boolean changeJobAnnouncementStatus(JobAnnouncementBean jobAnnouncementBean, boolean isActive){\n\n        if(isUserLogged()){\n            throw new UserNotLoggedException();\n        }\n\n        Recruiter recruiter = getRecruiterFromSession();\n        Optional<JobAnnouncement> jobAnnouncementOptional = jobAnnouncementDao.getJobAnnouncement(jobAnnouncementBean.getJobTitle(), recruiter);\n\n        if(jobAnnouncementOptional.isPresent()){\n            JobAnnouncement jobAnnouncement = jobAnnouncementOptional.get();\n            jobAnnouncement.setActive(isActive);\n            return jobAnnouncementDao.updateJobAnnouncement(jobAnnouncement);\n        }\n\n        return false;\n    }\n\n    public boolean deleteJobAnnouncement(JobAnnouncementBean jobAnnouncementBean){\n\n        if(isUserLogged()){\n            throw new UserNotLoggedException();\n        }\n\n        Recruiter recruiter = getRecruiterFromSession();\n        Optional<JobAnnouncement> jobAnnouncementOptional = jobAnnouncementDao.getJobAnnouncement(jobAnnouncementBean.getJobTitle(), recruiter);\n\n        return jobAnnouncementOptional.filter(jobAnnouncementDao::deleteJobAnnouncement).isPresent();\n    }\n\n    public List<JobAnnouncementBean> getJobAnnouncement() {\n\n        if(isUserLogged()){\n            throw new UserNotLoggedException();\n        }\n\n        JobAnnouncementService jobAnnouncementService = new JobAnnouncementService(jobAnnouncementDao);\n\n        List<JobAnnouncementBean> jobAnnouncements = jobAnnouncementService.getJobAnnouncementsForCurrentRecruiter();\n\n        return Objects.requireNonNullElse(jobAnnouncements, Collections.emptyList());\n\n    }\n\n    public boolean isUserLogged() throws UserNotLoggedException {\n        if (!loginController.isUserLogged()) {\n            throw new UserNotLoggedException();\n        }\n        return false;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/controller/recruiter/PublishAJobAnnouncementController.java b/src/main/java/org/example/togetjob/controller/recruiter/PublishAJobAnnouncementController.java
--- a/src/main/java/org/example/togetjob/controller/recruiter/PublishAJobAnnouncementController.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ b/src/main/java/org/example/togetjob/controller/recruiter/PublishAJobAnnouncementController.java	(date 1739470144631)
@@ -11,7 +11,6 @@
 import org.example.togetjob.model.entity.JobAnnouncement;
 import org.example.togetjob.model.entity.Recruiter;
 import org.example.togetjob.model.factory.JobAnnouncementFactory;
-import org.example.togetjob.pattern.observer.RecruiterObserverStudent;
 import org.example.togetjob.session.SessionManager;
 
 import java.util.*;
@@ -69,10 +68,7 @@
                 true
         ); //default
 
-        // register recruiter who publishes the job announcement
-        jobAnnouncement.getJobApplicationCollection().attach(new RecruiterObserverStudent(recruiter));
         return jobAnnouncementDao.saveJobAnnouncement(jobAnnouncement);
-
     }
 
     private Recruiter getRecruiterFromSession() {
Index: src/main/java/org/example/togetjob/view/boundary/ContactAJobCandidateStudentBoundary.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.togetjob.view.boundary;\n\n\nimport org.example.togetjob.bean.InterviewSchedulingStudentInfoBean;\nimport org.example.togetjob.controller.student.SendAJobApplication;\nimport org.example.togetjob.model.dao.abstractfactorydao.AbstractFactoryDaoSingleton;\nimport org.example.togetjob.pattern.adapter.ContactAJobCandidateAdapter;\nimport org.example.togetjob.pattern.adapter.ContactAJobCandidateController;\nimport org.example.togetjob.pattern.subject.SchedulingInterviewCollectionSubjectRecruiter;\n\nimport java.util.List;\n\npublic class ContactAJobCandidateStudentBoundary {\n\n    private final ContactAJobCandidateController contactAJobCandidateController;\n\n    public ContactAJobCandidateStudentBoundary() {\n        this.contactAJobCandidateController = new ContactAJobCandidateAdapter(\n                new SendAJobApplication(),\n                AbstractFactoryDaoSingleton.getFactoryDao().createStudentDao(),\n                AbstractFactoryDaoSingleton.getFactoryDao().createJobAnnouncementDao(),\n                AbstractFactoryDaoSingleton.getFactoryDao().createJobApplicationDao(),\n                AbstractFactoryDaoSingleton.getFactoryDao().createInterviewSchedulingDao(),\n                new SchedulingInterviewCollectionSubjectRecruiter()\n        );\n    }\n\n    public List<InterviewSchedulingStudentInfoBean> getAllInterviewSchedulingForStudent() throws IllegalStateException {\n        return contactAJobCandidateController.getAllInterviewSchedulingsForStudent();\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/view/boundary/ContactAJobCandidateStudentBoundary.java b/src/main/java/org/example/togetjob/view/boundary/ContactAJobCandidateStudentBoundary.java
--- a/src/main/java/org/example/togetjob/view/boundary/ContactAJobCandidateStudentBoundary.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ b/src/main/java/org/example/togetjob/view/boundary/ContactAJobCandidateStudentBoundary.java	(date 1739461846418)
@@ -6,7 +6,6 @@
 import org.example.togetjob.model.dao.abstractfactorydao.AbstractFactoryDaoSingleton;
 import org.example.togetjob.pattern.adapter.ContactAJobCandidateAdapter;
 import org.example.togetjob.pattern.adapter.ContactAJobCandidateController;
-import org.example.togetjob.pattern.subject.SchedulingInterviewCollectionSubjectRecruiter;
 
 import java.util.List;
 
@@ -20,8 +19,7 @@
                 AbstractFactoryDaoSingleton.getFactoryDao().createStudentDao(),
                 AbstractFactoryDaoSingleton.getFactoryDao().createJobAnnouncementDao(),
                 AbstractFactoryDaoSingleton.getFactoryDao().createJobApplicationDao(),
-                AbstractFactoryDaoSingleton.getFactoryDao().createInterviewSchedulingDao(),
-                new SchedulingInterviewCollectionSubjectRecruiter()
+                AbstractFactoryDaoSingleton.getFactoryDao().createInterviewSchedulingDao()
         );
     }
 
Index: src/main/java/org/example/togetjob/view/gui/controllergrafico/SendAJobApplicationRecruiterController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/view/gui/controllergrafico/SendAJobApplicationRecruiterController.java b/src/main/java/org/example/togetjob/view/gui/controllergrafico/SendAJobApplicationRecruiterController.java
new file mode 100644
--- /dev/null	(date 1739452769671)
+++ b/src/main/java/org/example/togetjob/view/gui/controllergrafico/SendAJobApplicationRecruiterController.java	(date 1739452769671)
@@ -0,0 +1,261 @@
+package org.example.togetjob.view.gui.controllergrafico;
+
+import javafx.beans.property.SimpleStringProperty;
+import javafx.collections.FXCollections;
+import javafx.collections.ObservableList;
+import javafx.fxml.FXML;
+import javafx.scene.control.*;
+import javafx.scene.layout.HBox;
+import javafx.scene.text.Font;
+import org.example.togetjob.bean.JobAnnouncementBean;
+import org.example.togetjob.bean.JobApplicationBean;
+import org.example.togetjob.view.boundary.PublishAJobAnnouncementRecruiterBoundary;
+import org.example.togetjob.view.boundary.SendAJobApplicationRecruiterBoundary;
+import org.example.togetjob.view.gui.GUIContext;
+import org.example.togetjob.view.gui.concretestate.HomeRecruiterState;
+import org.jetbrains.annotations.NotNull;
+
+import java.util.List;
+
+public class SendAJobApplicationRecruiterController {
+
+    private static final String BUTTON_STYLE = "-fx-background-color: #2980b9; " +
+            "-fx-text-fill: white; " +
+            "-fx-border-radius: 10; " +
+            "-fx-border-color: #2980b9; " +
+            "-fx-border-width: 2; " +
+            "-fx-cursor: hand; " +
+            "-fx-font-weight: bold; " +
+            "-fx-background-radius: 10; " +
+            "-fx-font-size: 14px;" + // Set font size for buttons
+            "-fx-padding: 10 20;"; // Set padding for larger buttons
+
+    @FXML
+    private TableView<JobAnnouncementBean> jobAnnouncementsTable;
+    @FXML
+    private TableColumn<JobAnnouncementBean, String> jobTitleColumn;
+    @FXML
+    private TableColumn<JobAnnouncementBean, String> companyColumn;
+    @FXML
+    private TableColumn<JobAnnouncementBean, Void> actionsColumn;
+
+    private GUIContext context;
+    private final PublishAJobAnnouncementRecruiterBoundary recruiterBoundary = new PublishAJobAnnouncementRecruiterBoundary();
+    private final SendAJobApplicationRecruiterBoundary sendAJobApplicationRecruiterBoundary = new SendAJobApplicationRecruiterBoundary();
+
+    // Set the context and load the job announcements into the table
+    public void setContext(GUIContext context) {
+        this.context = context;
+        loadJobAnnouncements();
+    }
+
+    // Load job announcements from the boundary and display them in the table
+    private void loadJobAnnouncements() {
+        try {
+            List<JobAnnouncementBean> jobAnnouncements = recruiterBoundary.getJobAnnouncements();
+            ObservableList<JobAnnouncementBean> observableList = FXCollections.observableArrayList(jobAnnouncements);
+            jobAnnouncementsTable.setItems(observableList);
+
+            // Display placeholder text when no job announcements are available
+            if (jobAnnouncements.isEmpty()) {
+                jobAnnouncementsTable.setPlaceholder(new Label("No content available"));
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    @FXML
+    private void initialize() {
+        // Set up the cell value factories for each column
+        jobTitleColumn.setCellValueFactory(cellData -> new SimpleStringProperty(cellData.getValue().getJobTitle()));
+        companyColumn.setCellValueFactory(cellData -> new SimpleStringProperty(cellData.getValue().getCompanyName()));
+
+        // Set the font size for the columns
+        setColumnFont(jobTitleColumn);
+        setColumnFont(companyColumn);
+        setColumnFont(actionsColumn);
+
+        // Make the columns equally spaced
+        setColumnAcquiesced(jobTitleColumn);
+        setColumnAcquiesced(companyColumn);
+        setColumnAcquiesced(actionsColumn);
+
+        // Set up actions column with a "View Job Applications" button
+        actionsColumn.setCellFactory(c -> new TableCell<>() {
+            private final Button viewApplicationsButton = new Button("View Job Applications");
+            private final HBox buttonsBox = new HBox(viewApplicationsButton);
+
+            {
+                viewApplicationsButton.setStyle(BUTTON_STYLE);
+                viewApplicationsButton.setOnAction(event -> viewJobApplications(getTableView().getItems().get(getIndex())));
+                buttonsBox.setStyle("-fx-alignment: center;" + "-fx-font-size: 12px;");
+            }
+
+            @Override
+            protected void updateItem(Void item, boolean empty) {
+                super.updateItem(item, empty);
+                setGraphic(empty ? null : buttonsBox);
+            }
+        });
+    }
+
+    // Set the font size for a column
+    private void setColumnFont(TableColumn<?, ?> column) {
+        column.setStyle("-fx-font-size: " + (double) 18 + "px;");
+    }
+
+    // Make the columns equally spaced
+    private void setColumnAcquiesced(TableColumn<?, ?> column) {
+        column.setResizable(true);
+        column.prefWidthProperty().bind(jobAnnouncementsTable.widthProperty().divide(jobAnnouncementsTable.getColumns().size()));
+    }
+
+    // Display job applications for a selected job announcement
+    private void viewJobApplications(JobAnnouncementBean jobAnnouncement) {
+
+        // Fetch only "Pending" job applications
+        List<JobApplicationBean> jobApplications = sendAJobApplicationRecruiterBoundary.getAllJobApplications(jobAnnouncement).stream()
+                .filter(application -> "Pending".equalsIgnoreCase(String.valueOf(application.getStatus())))  // Filter for Pending applications
+                .toList();
+
+        Dialog<Void> dialog = new Dialog<>();
+        dialog.setTitle("Job Applications for: " + jobAnnouncement.getJobTitle());
+
+        dialog.getDialogPane().setMinWidth(600);
+        dialog.getDialogPane().setMinHeight(400);
+
+        TableView<JobApplicationBean> applicationsTable = new TableView<>();
+
+        // Create column for student name
+        TableColumn<JobApplicationBean, String> studentNameColumn = new TableColumn<>("Student Name");
+        studentNameColumn.setCellValueFactory(cellData -> new SimpleStringProperty(cellData.getValue().getStudentUsername()));
+
+        // Create column for cover letter, with wrapping text
+        TableColumn<JobApplicationBean, String> coverLetterColumn = new TableColumn<>("Cover Letter");
+        coverLetterColumn.setCellValueFactory(cellData -> new SimpleStringProperty(cellData.getValue().getCoverLetter()));
+
+        // Create the actions column for Accept/Reject buttons
+        TableColumn<JobApplicationBean, Void> actionsColumnForApplications = getJobApplicationBeanVoidTableColumn(jobApplications, jobAnnouncement);
+
+        // Set font size for each column
+        setColumnFont(studentNameColumn);
+        setColumnFont(coverLetterColumn); // Increase font size for cover letter column
+        setColumnFont(actionsColumnForApplications);
+
+        // Add columns to the table
+        applicationsTable.getColumns().clear();
+        applicationsTable.getColumns().add(studentNameColumn);
+        applicationsTable.getColumns().add(coverLetterColumn);
+        applicationsTable.getColumns().add(actionsColumnForApplications);
+
+        // Make the columns equally spaced
+        setColumnAcquiesced(studentNameColumn);
+        setColumnAcquiesced(coverLetterColumn);
+        setColumnAcquiesced(actionsColumnForApplications);
+
+        // Use TextArea for cover letter to allow for longer text wrapping
+        coverLetterColumn.setCellFactory(column -> {
+            return new TableCell<>() {
+                @Override
+                protected void updateItem(String item, boolean empty) {
+                    super.updateItem(item, empty);
+                    if (item == null || empty) {
+                        setText(null);
+                    } else {
+                        TextArea textArea = new TextArea(item);
+                        textArea.setWrapText(true); // Enable text wrapping
+                        textArea.setFont(Font.font(18)); // Larger font size
+                        textArea.setEditable(false); // Disable text editing
+                        textArea.setPrefRowCount(3); // Set a default row count
+                        textArea.setMaxWidth(450); // Set a maximum width for the text area
+                        setGraphic(textArea);
+                    }
+                }
+            };
+        });
+
+        // Set the items (job applications) in the table
+        ObservableList<JobApplicationBean> applicationsList = FXCollections.observableArrayList(jobApplications);
+        applicationsTable.setItems(applicationsList);
+
+        // Style the table
+        applicationsTable.setStyle("-fx-font-size: 18px; -fx-padding: 5px;");
+
+        // Add the table to the dialog and display
+        dialog.getDialogPane().setContent(applicationsTable);
+        dialog.getDialogPane().getButtonTypes().add(ButtonType.OK);
+        dialog.showAndWait();
+    }
+
+    // Create the actions column with Accept/Reject buttons
+    @NotNull
+    private TableColumn<JobApplicationBean, Void> getJobApplicationBeanVoidTableColumn(List<JobApplicationBean> jobApplications, JobAnnouncementBean jobAnnouncement) {
+        TableColumn<JobApplicationBean, Void> actionsColumnForApplications = new TableColumn<>("Actions");
+        actionsColumnForApplications.setCellFactory(column -> new TableCell<>() {
+            private final Button acceptButton = new Button("Accept");
+            private final Button rejectButton = new Button("Reject");
+
+            {
+                // Set the Accept button style
+                acceptButton.setStyle(BUTTON_STYLE);
+
+                // Set the Reject button style
+                rejectButton.setStyle(BUTTON_STYLE);
+
+                // Handle button actions
+                acceptButton.setOnAction(event -> handleAcceptApplication(getTableView().getItems().get(getIndex()), jobApplications));
+                rejectButton.setOnAction(event -> handleRejectApplication(getTableView().getItems().get(getIndex()), jobApplications));
+            }
+
+            @Override
+            protected void updateItem(Void item, boolean empty) {
+                super.updateItem(item, empty);
+                // Align the buttons horizontally with some padding
+                HBox buttonBox = new HBox(20, acceptButton, rejectButton); // Increase spacing
+                buttonBox.setStyle("-fx-alignment: center; -fx-padding: 10;");
+                setGraphic(empty ? null : buttonBox);
+            }
+        });
+        return actionsColumnForApplications;
+    }
+
+    // Handle the acceptance of a job application
+    private void handleAcceptApplication(JobApplicationBean jobApplication, List<JobApplicationBean> jobApplications) {
+        boolean success = sendAJobApplicationRecruiterBoundary.acceptJobApplication(jobApplication);
+        if (success) {
+            jobApplications.remove(jobApplication); // Remove accepted application from the list
+            showAlert(Alert.AlertType.INFORMATION, "Application Accepted!");
+        } else {
+            showAlert(Alert.AlertType.ERROR, "Failed to Accept Application.");
+        }
+    }
+
+    // Handle the rejection of a job application
+    private void handleRejectApplication(JobApplicationBean jobApplication, List<JobApplicationBean> jobApplications) {
+        boolean success = sendAJobApplicationRecruiterBoundary.rejectJobApplication(jobApplication);
+        if (success) {
+            jobApplications.remove(jobApplication); // Remove rejected application from the list
+            showAlert(Alert.AlertType.INFORMATION, "Application Rejected!");
+        } else {
+            showAlert(Alert.AlertType.ERROR, "Failed to Reject Application.");
+        }
+    }
+
+    // Display an alert with the result of accepting/rejecting the application
+    private void showAlert(Alert.AlertType type, String message) {
+        Alert alert = new Alert(type, message);
+        alert.setTitle("Job Application");
+        alert.setHeaderText(null);
+        alert.showAndWait();
+    }
+
+    // Go back to the previous screen
+    @FXML
+    private void handleGoBack() {
+        if (context != null) {
+            context.setState(new HomeRecruiterState(context));
+            context.showMenu();
+        }
+    }
+}
Index: src/main/java/org/example/togetjob/pattern/subject/Subject.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/subject/Subject.java b/src/main/java/org/example/togetjob/pattern/subject/Subject.java
new file mode 100644
--- /dev/null	(date 1739467812437)
+++ b/src/main/java/org/example/togetjob/pattern/subject/Subject.java	(date 1739467812437)
@@ -0,0 +1,50 @@
+package org.example.togetjob.pattern.subject;
+
+import org.example.togetjob.pattern.observer.Observer;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public abstract class Subject implements Runnable {
+
+    private final List<Observer> observers; //list of observers
+    private final Object MUTEX = new Object(); //synchronize
+    protected boolean isAlive; //to verify the status of subject
+
+    protected Subject(List<Observer> observers, boolean isAlive) {
+        this.observers = observers;
+        this.isAlive = isAlive;
+    }
+
+    public void attach(Observer obs) {
+        synchronized (MUTEX) {
+            this.observers.add(obs); //add an observer
+        }
+    }
+
+    protected void notifyObservers() {
+        List<Observer> observersLocal = null;
+
+        synchronized (MUTEX) {
+            if (this.isThereAnythingToNotify()) {
+                observersLocal = new ArrayList<>(this.observers);
+            }
+
+            if (observersLocal != null) {
+                for (Observer obs : observersLocal) {
+                    obs.update(); //send a notification to the observer
+                }
+            }
+        }
+    }
+
+    @Override
+    public void run() {
+        this.isAlive = true;
+        while (this.isAlive) {
+            this.notifyObservers();
+        }
+    }
+
+    protected abstract boolean isThereAnythingToNotify();
+}
Index: src/main/resources/org/example/togetjob/RecruiterViewJobApplications.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/org/example/togetjob/RecruiterViewJobApplications.fxml b/src/main/resources/org/example/togetjob/fxml/recruiterviewjobapplications.fxml
rename from src/main/resources/org/example/togetjob/RecruiterViewJobApplications.fxml
rename to src/main/resources/org/example/togetjob/fxml/recruiterviewjobapplications.fxml
--- a/src/main/resources/org/example/togetjob/RecruiterViewJobApplications.fxml	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ b/src/main/resources/org/example/togetjob/fxml/recruiterviewjobapplications.fxml	(date 1739452769689)
@@ -6,13 +6,14 @@
 <?import javafx.scene.control.Button?>
 <?import javafx.scene.control.TableColumn?>
 <?import javafx.scene.control.TableView?>
+<?import javafx.scene.effect.InnerShadow?>
 <?import javafx.scene.image.Image?>
 <?import javafx.scene.image.ImageView?>
 <?import javafx.scene.layout.AnchorPane?>
 <?import javafx.scene.layout.VBox?>
 <?import javafx.scene.text.Font?>
 
-<VBox alignment="CENTER" prefHeight="427.0" prefWidth="492.0" spacing="20.0" xmlns="http://javafx.com/javafx/23.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="org.example.togetjob.view.gui.controllergrafico.HomeController">
+<VBox alignment="CENTER" prefHeight="500.0" prefWidth="600.0" spacing="20.0" xmlns="http://javafx.com/javafx/23.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="org.example.togetjob.view.gui.controllergrafico.SendAJobApplicationRecruiterController">
    <padding>
       <Insets bottom="20.0" left="20.0" right="20.0" top="20.0" />
    </padding>
@@ -22,33 +23,37 @@
    <children>
       <AnchorPane prefHeight="406.0" prefWidth="474.0" style="-fx-background-color: linear-gradient(from 0% 0% to 0% 100%, rgba(255,255,255,1) 85%, rgba(240,248,255,0.8) 95%, rgba(220,240,255,0.7) 100%); -fx-border-color: lightgray;">
          <children>
-            <AnchorPane layoutX="-2.0" layoutY="-2.0" minHeight="0.0" minWidth="0.0" prefHeight="388.0" prefWidth="452.0">
+            <AnchorPane layoutX="-2.0" layoutY="-2.0" minHeight="0.0" minWidth="0.0" prefHeight="500.0" prefWidth="600.0">
                <children>
-                  <Button layoutX="-8.0" layoutY="5.0" mnemonicParsing="false" prefHeight="40.0" prefWidth="57.0" style="-fx-background-color: trasparent;">
+                  <Button layoutX="-8.0" layoutY="5.0" mnemonicParsing="false" onAction="#handleGoBack" prefHeight="45.0" prefWidth="69.0" style="-fx-background-color: trasparent;">
                      <font>
                         <Font name="AppleGothic Regular" size="14.0" />
                      </font>
                   </Button>
-                  <TableView editable="true" layoutX="3.0" layoutY="58.0" prefHeight="331.0" prefWidth="450.0" style="-fx-background-color: 00aaff;">
+                  <TableView fx:id="jobAnnouncementsTable" editable="true" layoutX="3.0" layoutY="58.0" prefHeight="428.0" prefWidth="594.0" style="-fx-background-color: 00aaff;">
                      <columns>
-                        <TableColumn fx:id="jobAnnouncementTitle" prefWidth="289.97615814208984" style="-fx-font-family: Apple Gothic;" text="Title" />
-                        <TableColumn prefWidth="160.0238037109375" style="-fx-font-family: Apple Gothic;" text="Status" />
+                        <TableColumn fx:id="jobTitleColumn" prefWidth="194.0" style="-fx-font-family: Apple Gothic;" text="JOBTITLE" />
+                        <TableColumn fx:id="companyColumn" prefWidth="206.0" text="COMPANY NAME" />
+                        <TableColumn fx:id="actionsColumn" prefWidth="193.0" style="-fx-font-family: Apple Gothic;" text="ACTIONS" />
                      </columns>
                   </TableView>
-               </children>
-            </AnchorPane>
-            <ImageView fitHeight="85.0" fitWidth="111.0" layoutX="170.0" layoutY="-16.0" pickOnBounds="true" preserveRatio="true" y="-7.0">
-               <image>
-                  <Image url="@logo-removebg-preview.png" />
-               </image>
-               <viewport>
-                  <Rectangle2D minY="-10.0" />
-               </viewport>
-            </ImageView>
-            <ImageView fitHeight="30.0" fitWidth="30.0" layoutX="10.0" layoutY="10.0" pickOnBounds="true" preserveRatio="true">
+                  <ImageView fitHeight="85.0" fitWidth="111.0" layoutX="228.0" layoutY="-14.0" pickOnBounds="true" preserveRatio="true" y="-7.0">
+                     <image>
+                        <Image url="@../logo-removebg-preview.png" />
+                     </image>
+                     <viewport>
+                        <Rectangle2D minY="-10.0" />
+                     </viewport>
+                  </ImageView>
+               </children>
+            </AnchorPane>
+            <ImageView fitHeight="30.0" fitWidth="30.0" layoutX="10.0" layoutY="10.0" onMouseClicked="#handleGoBack" pickOnBounds="true" preserveRatio="true">
                <image>
-                  <Image url="@back-158491_1920.png" />
+                  <Image url="@../back-158491_1920.png" />
                </image>
+               <effect>
+                  <InnerShadow />
+               </effect>
             </ImageView>
          </children>
       </AnchorPane>
Index: src/main/resources/org/example/togetjob/fxml/homerecruiter.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<?import javafx.geometry.Insets?>\n<?import javafx.scene.Cursor?>\n<?import javafx.scene.control.Button?>\n<?import javafx.scene.control.Label?>\n<?import javafx.scene.control.ListView?>\n<?import javafx.scene.control.Separator?>\n<?import javafx.scene.control.TitledPane?>\n<?import javafx.scene.effect.DropShadow?>\n<?import javafx.scene.effect.Glow?>\n<?import javafx.scene.image.Image?>\n<?import javafx.scene.image.ImageView?>\n<?import javafx.scene.layout.AnchorPane?>\n<?import javafx.scene.layout.VBox?>\n<?import javafx.scene.paint.Color?>\n<?import javafx.scene.text.Font?>\n\n<VBox alignment=\"CENTER\" prefHeight=\"500.0\" prefWidth=\"600.0\" spacing=\"20.0\" xmlns=\"http://javafx.com/javafx/23.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"org.example.togetjob.view.gui.controllergrafico.HomeRecruiterController\">\n   <padding>\n      <Insets bottom=\"20.0\" left=\"20.0\" right=\"20.0\" top=\"20.0\" />\n   </padding>\n   <cursor>\n      <Cursor fx:constant=\"SE_RESIZE\" />\n   </cursor>\n   <children>\n      <AnchorPane prefHeight=\"500.0\" prefWidth=\"600.0\" style=\"-fx-background-color: linear-gradient(from 0% 0% to 0% 100%, rgba(255,255,255,1) 85%, rgba(240,248,255,0.8) 95%, rgba(220,240,255,0.7) 100%); -fx-border-color: lightgray;\">\n         <children>\n            <ImageView fitHeight=\"113.0\" fitWidth=\"126.0\" layoutX=\"16.0\" layoutY=\"35.0\" pickOnBounds=\"true\" preserveRatio=\"true\" AnchorPane.bottomAnchor=\"240.0\" AnchorPane.leftAnchor=\"16.0\" AnchorPane.rightAnchor=\"323.0\" AnchorPane.topAnchor=\"50.0\">\n               <image>\n                  <Image url=\"@../imagerecruiterprogile.jpg\" />\n               </image>\n               <effect>\n                  <DropShadow blurType=\"ONE_PASS_BOX\" height=\"20.0\" radius=\"9.5\" width=\"20.0\">\n                     <color>\n                        <Color red=\"0.16078431904315948\" green=\"0.501960813999176\" blue=\"0.7254902124404907\" />\n                     </color>\n                  </DropShadow>\n               </effect>\n            </ImageView>\n            <Button layoutX=\"16.0\" layoutY=\"192.0\" mnemonicParsing=\"false\" prefHeight=\"41.0\" prefWidth=\"113.0\" style=\"-fx-background-color: #b3d9ff; -fx-text-fill: #2980b9; -fx-border-radius: 5; -fx-background-radius: 15; -fx-border-color: #2980b9; -fx-border-width: 2; -fx-cursor: hand;\" text=\"View Profile\" AnchorPane.topAnchor=\"200.0\">\n               <font>\n                  <Font name=\"AppleGothic Regular\" size=\"14.0\" />\n               </font>\n            </Button>\n            <Button layoutX=\"16.0\" layoutY=\"250.0\" mnemonicParsing=\"false\" prefHeight=\"41.0\" prefWidth=\"113.0\" style=\"-fx-background-color: #b3d9ff; -fx-text-fill: #2980b9; -fx-border-radius: 5; -fx-background-radius: 15; -fx-border-color: #2980b9; -fx-border-width: 2; -fx-cursor: hand;\" text=\"Notifications\" AnchorPane.topAnchor=\"250.0\">\n               <font>\n                  <Font name=\"AppleGothic Regular\" size=\"14.0\" />\n               </font>\n            </Button>\n            <Button layoutX=\"16.0\" layoutY=\"310.0\" mnemonicParsing=\"false\" onAction=\"#handleLogout\" prefHeight=\"41.0\" prefWidth=\"113.0\" style=\"-fx-background-color: #b3d9ff; -fx-text-fill: #2980b9; -fx-border-radius: 5; -fx-background-radius: 15; -fx-border-color: #2980b9; -fx-border-width: 2; -fx-cursor: hand;\" text=\"Logout\" AnchorPane.topAnchor=\"300.0\">\n               <font>\n                  <Font name=\"AppleGothic Regular\" size=\"14.0\" />\n               </font>\n            </Button>\n            <TitledPane fx:id=\"jobAnnouncementField\" animated=\"false\" layoutX=\"170.0\" layoutY=\"16.0\" prefHeight=\"345.0\" prefWidth=\"377.0\" style=\"-fx-background-color: #b3d9ff; -fx-text-fill: #2980b9; -fx-border-color: #b3d9ff;\" text=\"Job Announcements Published\">\n               <font>\n                  <Font name=\"AppleGothic Regular\" size=\"14.0\" />\n               </font>\n               <content>\n                  <ListView fx:id=\"jobAnnouncementBeanListView\" prefHeight=\"291.0\" prefWidth=\"373.0\" />\n               </content>\n            </TitledPane>\n            <Separator layoutX=\"143.0\" layoutY=\"-3.0\" opacity=\"0.5\" orientation=\"VERTICAL\" prefHeight=\"473.0\" prefWidth=\"11.0\" style=\"-fx-background-color: #2980b9;\">\n               <effect>\n                  <Glow />\n               </effect>\n            </Separator>\n            <Label layoutX=\"211.0\" layoutY=\"301.0\" style=\"-fx-text-fill: #2980b9;\" text=\"Do you want to publish a job announcement? \" AnchorPane.bottomAnchor=\"80.0\" AnchorPane.leftAnchor=\"220.0\">\n               <font>\n                  <Font name=\"AppleGothic Regular\" size=\"14.0\" />\n               </font>\n            </Label>\n            <Button layoutX=\"236.0\" layoutY=\"344.0\" mnemonicParsing=\"false\" onAction=\"#handlePublishJobAnnouncementButton\" prefHeight=\"41.0\" prefWidth=\"246.0\" style=\"-fx-background-color: #b3d9ff; -fx-text-fill: #2980b9; -fx-border-radius: 5; -fx-background-radius: 15; -fx-border-color: #2980b9; -fx-border-width: 2; -fx-cursor: hand;\" text=\"Publish a Job Announcement\" AnchorPane.bottomAnchor=\"12.0\" AnchorPane.leftAnchor=\"240.0\" AnchorPane.topAnchor=\"398.0\">\n               <font>\n                  <Font name=\"AppleGothic Regular\" size=\"14.0\" />\n               </font>\n            </Button>\n         </children>\n      </AnchorPane>\n   </children>\n</VBox>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/org/example/togetjob/fxml/homerecruiter.fxml b/src/main/resources/org/example/togetjob/fxml/homerecruiter.fxml
--- a/src/main/resources/org/example/togetjob/fxml/homerecruiter.fxml	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ b/src/main/resources/org/example/togetjob/fxml/homerecruiter.fxml	(date 1739452769686)
@@ -43,7 +43,7 @@
                   <Font name="AppleGothic Regular" size="14.0" />
                </font>
             </Button>
-            <Button layoutX="16.0" layoutY="250.0" mnemonicParsing="false" prefHeight="41.0" prefWidth="113.0" style="-fx-background-color: #b3d9ff; -fx-text-fill: #2980b9; -fx-border-radius: 5; -fx-background-radius: 15; -fx-border-color: #2980b9; -fx-border-width: 2; -fx-cursor: hand;" text="Notifications" AnchorPane.topAnchor="250.0">
+            <Button layoutX="16.0" layoutY="250.0" mnemonicParsing="false" onAction="#handleViewNotifications" prefHeight="41.0" prefWidth="113.0" style="-fx-background-color: #b3d9ff; -fx-text-fill: #2980b9; -fx-border-radius: 5; -fx-background-radius: 15; -fx-border-color: #2980b9; -fx-border-width: 2; -fx-cursor: hand;" text="Notifications" AnchorPane.topAnchor="250.0">
                <font>
                   <Font name="AppleGothic Regular" size="14.0" />
                </font>
Index: src/main/java/org/example/togetjob/pattern/observer/ObserverCLI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/observer/ObserverCLI.java b/src/main/java/org/example/togetjob/pattern/observer/ObserverCLI.java
new file mode 100644
--- /dev/null	(date 1739473340728)
+++ b/src/main/java/org/example/togetjob/pattern/observer/ObserverCLI.java	(date 1739473340728)
@@ -0,0 +1,8 @@
+package org.example.togetjob.pattern.observer;
+
+public class ObserverCLI extends Observer {
+    @Override
+    public void update() {
+            //**//
+    }
+}
Index: src/main/java/org/example/togetjob/model/dao/concretefactorydao/FileSystemFactoryDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.togetjob.model.dao.concretefactorydao;\n\nimport org.example.togetjob.model.dao.abstractfactorydao.AbstractFactoryDaoSingleton;\nimport org.example.togetjob.model.dao.abstractobjects.*;\nimport org.example.togetjob.model.dao.concreteobjects.*;\n\npublic class FileSystemFactoryDao extends AbstractFactoryDaoSingleton {\n\n    @Override\n    public UserDao createUserDao() { return new FileSystemUserDao(); }\n\n    @Override\n    public JobAnnouncementDao createJobAnnouncementDao() { return new FileSystemJobAnnouncementDao(); }\n\n    @Override\n    public StudentDao createStudentDao() { return new FileSystemStudentDao(); }\n\n    @Override\n    public RecruiterDao createRecruiterDao() { return new FileSystemRecruiterDao(); }\n\n    @Override\n    public JobApplicationDao createJobApplicationDao() { return new FileSystemJobApplicationDao(); }\n\n    @Override\n    public InterviewSchedulingDao createInterviewSchedulingDao() { return new FileSystemInterviewSchedulingDao(); }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/model/dao/concretefactorydao/FileSystemFactoryDao.java b/src/main/java/org/example/togetjob/model/dao/concretefactorydao/FileSystemFactoryDao.java
--- a/src/main/java/org/example/togetjob/model/dao/concretefactorydao/FileSystemFactoryDao.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ b/src/main/java/org/example/togetjob/model/dao/concretefactorydao/FileSystemFactoryDao.java	(date 1739473596548)
@@ -23,4 +23,5 @@
 
     @Override
     public InterviewSchedulingDao createInterviewSchedulingDao() { return new FileSystemInterviewSchedulingDao(); }
+
 }
\ No newline at end of file
Index: src/main/java/org/example/togetjob/view/gui/concretestate/SendAJobApplicationRecruiterState.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/view/gui/concretestate/SendAJobApplicationRecruiterState.java b/src/main/java/org/example/togetjob/view/gui/concretestate/SendAJobApplicationRecruiterState.java
new file mode 100644
--- /dev/null	(date 1739452769680)
+++ b/src/main/java/org/example/togetjob/view/gui/concretestate/SendAJobApplicationRecruiterState.java	(date 1739452769680)
@@ -0,0 +1,59 @@
+package org.example.togetjob.view.gui.concretestate;
+
+import javafx.application.Platform;
+import javafx.fxml.FXMLLoader;
+import javafx.scene.Scene;
+import javafx.stage.Stage;
+import org.example.togetjob.view.gui.GUIContext;
+import org.example.togetjob.view.gui.GUIState;
+import org.example.togetjob.view.gui.controllergrafico.SendAJobApplicationRecruiterController;
+
+import java.io.IOException;
+
+public class SendAJobApplicationRecruiterState implements GUIState {
+
+    GUIContext context;
+
+    public SendAJobApplicationRecruiterState(GUIContext context) {
+        this.context = context;
+    }
+
+    @Override
+    public void showMenu() {
+        try {
+
+            FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("/org/example/togetjob/fxml/recruiterviewjobapplications.fxml"));
+            Scene scene = new Scene(fxmlLoader.load(), 600, 500);
+
+
+            SendAJobApplicationRecruiterController controller = fxmlLoader.getController();
+            controller.setContext(context);
+
+
+            Stage stage = context.getStage();
+
+            if (stage == null) {
+                stage = new Stage();
+                context.setStage(stage);
+            }
+
+            stage.setTitle("Filtered Job Announcements by Student");
+            stage.setScene(scene);
+
+
+            stage.setOnCloseRequest(event -> {
+                Platform.exit();  // JavaFX
+                System.exit(0);   // process
+            });
+
+            stage.show();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+    }
+
+    @Override
+    public GUIContext getContext() {
+        return this.context;
+    }
+}
Index: src/main/java/org/example/togetjob/pattern/observer/ObserverGUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/observer/ObserverGUI.java b/src/main/java/org/example/togetjob/pattern/observer/ObserverGUI.java
new file mode 100644
--- /dev/null	(date 1739473351533)
+++ b/src/main/java/org/example/togetjob/pattern/observer/ObserverGUI.java	(date 1739473351533)
@@ -0,0 +1,8 @@
+package org.example.togetjob.pattern.observer;
+
+public class ObserverGUI extends Observer {
+    @Override
+    public void update() {
+        //**//
+    }
+}
Index: src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.togetjob.pattern.adapter;\n\nimport org.example.togetjob.bean.*;\nimport org.example.togetjob.controller.recruiter.JobAnnouncementService;\nimport org.example.togetjob.controller.student.SendAJobApplication;\nimport org.example.togetjob.exceptions.*;\nimport org.example.togetjob.model.dao.abstractobjects.InterviewSchedulingDao;\nimport org.example.togetjob.model.dao.abstractobjects.JobAnnouncementDao;\nimport org.example.togetjob.model.dao.abstractobjects.JobApplicationDao;\nimport org.example.togetjob.model.dao.abstractobjects.StudentDao;\nimport org.example.togetjob.model.entity.*;\nimport org.example.togetjob.model.factory.InterviewSchedulingFactory;\nimport org.example.togetjob.model.factory.NotificationFactory;\nimport org.example.togetjob.pattern.observer.StudentObserverStudent;\nimport org.example.togetjob.pattern.subject.SchedulingInterviewCollectionSubjectRecruiter;\nimport org.example.togetjob.session.SessionManager;\n\n\nimport java.time.LocalDate;\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\nimport java.util.*;\nimport java.util.stream.Collectors;\n\npublic class ContactAJobCandidateAdapter implements ContactAJobCandidateController{\n\n    public static final String DATE_FORMAT = \"yyyy-MM-dd'T'HH:mm\";\n    public static final String JOB_ANNOUNCEMENT_NOT_FOUND_ERROR = \"Error:Job Announcement not found.\";\n    public static final String STUDENT_NOT_FOUND_ERROR = \"Error:Student not found.\";\n\n    private final SendAJobApplication adapt;\n    private final StudentDao studentDao;\n    private final JobAnnouncementDao jobAnnouncementDao;\n    private final JobApplicationDao jobApplicationDao;\n    private final InterviewSchedulingDao interviewSchedulingDao;\n    private final SchedulingInterviewCollectionSubjectRecruiter schedulingInterviewCollectionSubjectRecruiter;\n\n    public ContactAJobCandidateAdapter(SendAJobApplication adapt, StudentDao studentDao, JobAnnouncementDao jobAnnouncementDao, JobApplicationDao jobApplicationDao, InterviewSchedulingDao interviewSchedulingDao, SchedulingInterviewCollectionSubjectRecruiter schedulingInterviewCollectionSubjectRecruiter) {\n        this.adapt = adapt;\n        this.studentDao = studentDao;\n        this.jobAnnouncementDao = jobAnnouncementDao;\n        this.jobApplicationDao = jobApplicationDao;\n        this.interviewSchedulingDao = interviewSchedulingDao;\n        this.schedulingInterviewCollectionSubjectRecruiter = schedulingInterviewCollectionSubjectRecruiter;\n    }\n\n    public List<StudentInfoBean> showFilteredCandidates(StudentInfoSearchBean studentInfoSearchBean, JobAnnouncementBean jobAnnouncementBean) {\n        // Tutte le candidature\n        List<JobApplicationBean> jobApplications = adapt.getJobApplicationsForRecruiter(jobAnnouncementBean);\n\n        List<JobApplicationBean> acceptedApplications = jobApplications.stream()\n                .filter(application -> Status.ACCEPTED.equals(application.getStatus()))\n                .toList();\n\n        Set<String> acceptedStudentUsernames = acceptedApplications.stream()\n                .map(JobApplicationBean::getStudentUsername)\n                .collect(Collectors.toSet());\n\n        List<Student> filteredStudents = studentDao.getAllStudents()\n                .stream()\n                .filter(student -> acceptedStudentUsernames.contains(student.obtainUsername()))\n                .filter(student -> filterByDegrees(student, studentInfoSearchBean.getDegrees()))\n                .filter(student -> filterByCourses(student, studentInfoSearchBean.getCoursesAttended()))\n                .filter(student -> filterByCertifications(student, studentInfoSearchBean.getCertifications()))\n                .filter(student -> filterByWorkExperiences(student, studentInfoSearchBean.getWorkExperiences()))\n                .filter(student -> filterBySkills(student, studentInfoSearchBean.getSkills()))\n                .filter(student -> filterByAvailability(student, studentInfoSearchBean.getAvailability()))\n                .toList();\n\n        return filteredStudents.stream()\n                .map(this::convertToStudentInfoBean)\n                .toList();\n    }\n\n    private boolean filterByDegrees(Student student, List<String> requiredDegrees) {\n        if (requiredDegrees == null || requiredDegrees.isEmpty()) {\n            return true;\n        }\n        if (student.obtainDegrees() == null || student.obtainDegrees().isEmpty()) {\n            return true;\n        }\n        return student.obtainDegrees().stream()\n                .anyMatch(degree -> requiredDegrees.stream()\n                        .anyMatch(reqDegree -> degree.toLowerCase().contains(reqDegree.toLowerCase())));\n    }\n\n    private boolean filterByCourses(Student student, List<String> requiredCourses) {\n        if (requiredCourses == null || requiredCourses.isEmpty()) {\n            return true;\n        }\n        if (student.obtainCoursesAttended() == null || student.obtainCoursesAttended().isEmpty()) {\n            return true;\n        }\n        return student.obtainCoursesAttended().stream()\n                .anyMatch(course -> requiredCourses.stream()\n                        .anyMatch(reqCourse -> course.toLowerCase().contains(reqCourse.toLowerCase())));\n    }\n\n    private boolean filterByCertifications(Student student, List<String> requiredCertifications) {\n        if (requiredCertifications == null || requiredCertifications.isEmpty()) {\n            return true;\n        }\n        if (student.obtainCertifications() == null || student.obtainCertifications().isEmpty()) {\n            return true;\n        }\n        return student.obtainCertifications().stream()\n                .anyMatch(cert -> requiredCertifications.stream()\n                        .anyMatch(reqCert -> cert.toLowerCase().contains(reqCert.toLowerCase())));\n    }\n\n    private boolean filterByWorkExperiences(Student student, List<String> requiredWorkExperiences) {\n        if (requiredWorkExperiences == null || requiredWorkExperiences.isEmpty()) {\n            return true;\n        }\n        if (student.obtainWorkExperiences() == null || student.obtainWorkExperiences().isEmpty()) {\n            return true;\n        }\n        return student.obtainWorkExperiences().stream()\n                .anyMatch(workExp -> requiredWorkExperiences.stream()\n                        .anyMatch(reqWorkExp -> workExp.toLowerCase().contains(reqWorkExp.toLowerCase())));\n    }\n\n    private boolean filterBySkills(Student student, List<String> requiredSkills) {\n        if (requiredSkills == null || requiredSkills.isEmpty()) {\n            return true;\n        }\n        if (student.obtainSkills() == null || student.obtainSkills().isEmpty()) {\n            return true;\n        }\n        return student.obtainSkills().stream()\n                .anyMatch(skill -> requiredSkills.stream()\n                        .anyMatch(reqSkill -> skill.toLowerCase().contains(reqSkill.toLowerCase())));\n    }\n\n    private boolean filterByAvailability(Student student, String requiredAvailability) {\n        if (requiredAvailability == null || requiredAvailability.isEmpty()) {\n            return true;\n        }\n        if (student.obtainAvailability() == null || student.obtainAvailability().isEmpty()) {\n            return true;\n        }\n        return student.obtainAvailability().toLowerCase().contains(requiredAvailability.toLowerCase());\n    }\n\n\n    @Override\n    public InterviewSchedulingBean showInterviewSchedulingForm(StudentInfoBean studentInfoBean, JobAnnouncementBean jobAnnouncementBean) {\n\n        InterviewSchedulingBean form = new InterviewSchedulingBean();\n\n        form.setStudentUsername(studentInfoBean.getUsername());\n        form.setJobTitle(jobAnnouncementBean.getJobTitle());\n        form.setCompanyName(jobAnnouncementBean.getCompanyName());\n\n        form.setInterviewDateTime(\"\");\n        form.setLocation(\"\");\n\n        return form;\n    }\n\n\n    @Override\n    public boolean sendInterviewInvitation(InterviewSchedulingBean interviewSchedulingBean) throws DateNotValidException , StudentNotFoundException , JobAnnouncementNotFoundException , JobApplicationNotFoundException , InterviewSchedulingAlreadyExistsException , NotificationException {\n        if (isDateFuture(interviewSchedulingBean.getInterviewDateTime())) {\n            throw new DateNotValidException(\"The date must be in the future.\");\n        }\n\n        Recruiter recruiter = SessionManager.getInstance().getRecruiterFromSession();\n        Student student = studentDao.getStudent(interviewSchedulingBean.getStudentUsername())\n                .orElseThrow(() -> new StudentNotFoundException(STUDENT_NOT_FOUND_ERROR));\n        JobAnnouncement jobAnnouncement = jobAnnouncementDao.getJobAnnouncement(interviewSchedulingBean.getJobTitle(), recruiter)\n                .orElseThrow(() -> new JobAnnouncementNotFoundException(JOB_ANNOUNCEMENT_NOT_FOUND_ERROR));\n        if (jobApplicationDao.getJobApplication(student, jobAnnouncement).isEmpty()) {\n            throw new JobApplicationNotFoundException(\"Error: Job application not found.\");\n        }\n        if (interviewSchedulingDao.getInterviewScheduling(student, jobAnnouncement).isPresent()) {\n            throw new InterviewSchedulingAlreadyExistsException(\"Error: An Interview Scheduling already exists.\");\n        }\n\n        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(DATE_FORMAT);\n        LocalDateTime interviewDateTime = LocalDateTime.parse(interviewSchedulingBean.getInterviewDateTime(), formatter);\n        InterviewScheduling interviewScheduling = InterviewSchedulingFactory.createInterviewScheduling(\n                interviewDateTime,\n                interviewSchedulingBean.getLocation(), student,\n                jobAnnouncement\n        );\n        interviewSchedulingDao.saveInterviewScheduling(interviewScheduling);\n        try {\n            schedulingInterviewCollectionSubjectRecruiter.attach(new StudentObserverStudent(student, NotificationFactory.createNotification(\"You have an interview scheduling!\")));\n        } catch (ConfigException e) {\n            throw new RuntimeException(e);\n        }\n        try {\n            sendNotification(interviewScheduling);\n        } catch (NotificationException e) {\n           throw new NotificationException(e.getMessage()) ;\n        }\n        return true;\n    }\n\n\n    private void sendNotification(InterviewScheduling interviewScheduling) throws NotificationException {\n\n        try{\n            schedulingInterviewCollectionSubjectRecruiter.addInterviewScheduling(interviewScheduling);\n\n        } catch (NotificationException e) {\n            throw new NotificationException(\"Error during the configuration\", e);\n        }\n\n    }\n\n    @Override\n    public List<JobAnnouncementBean> getJobAnnouncementsByRecruiter() {\n        JobAnnouncementService jobAnnouncementService = new JobAnnouncementService(jobAnnouncementDao);\n\n        List<JobAnnouncementBean> jobAnnouncements = jobAnnouncementService.getJobAnnouncementsForCurrentRecruiter();\n\n        return Objects.requireNonNullElse(jobAnnouncements, Collections.emptyList());\n    }\n\n    @Override\n    public List<InterviewSchedulingStudentInfoBean> getAllInterviewSchedulingsForStudent() throws IllegalStateException {\n\n        Student student = SessionManager.getInstance().getStudentFromSession();\n\n        if (student == null) {\n            throw new IllegalStateException(\"Student not found in session.\");\n        }\n\n        List<InterviewScheduling> interviewSchedulings = interviewSchedulingDao.getAllInterviewScheduling(student);\n\n        return interviewSchedulings.stream()\n                .map(interviewScheduling -> {\n                    InterviewSchedulingStudentInfoBean bean = new InterviewSchedulingStudentInfoBean();\n                    bean.setSubject(interviewScheduling.obtainSubject());\n                    bean.setGreeting(interviewScheduling.obtainGreeting());\n                    bean.setIntroduction(interviewScheduling.obtainIntroduction());\n                    bean.setJobTitle(interviewScheduling.getJobAnnouncement().obtainJobTitle());\n                    bean.setCompanyName(interviewScheduling.getJobAnnouncement().obtainCompanyName());\n                    bean.setInterviewDateTime(interviewScheduling.obtainInterviewDateTime().toString());\n                    bean.setLocation(interviewScheduling.obtainLocation());\n                    bean.setStudentUsername(interviewScheduling.getCandidate().obtainUsername());\n                    return bean;\n                })\n                .toList();\n    }\n\n    @Override\n    public List<InterviewSchedulingBean> getInterviewSchedules(JobAnnouncementBean jobAnnouncementBean) throws JobAnnouncementNotFoundException {\n\n        Recruiter recruiter = SessionManager.getInstance().getRecruiterFromSession();\n        JobAnnouncement jobAnnouncement = jobAnnouncementDao.getJobAnnouncement(jobAnnouncementBean.getJobTitle(), recruiter)\n                .orElseThrow(() -> new JobAnnouncementNotFoundException(JOB_ANNOUNCEMENT_NOT_FOUND_ERROR));\n\n        List<InterviewScheduling> interviewSchedulings = interviewSchedulingDao.getAllInterviewScheduling(jobAnnouncement);\n\n        return interviewSchedulings.stream()\n                .map(interviewScheduling -> {\n                    InterviewSchedulingBean bean = new InterviewSchedulingBean();\n                    bean.setStudentUsername(interviewScheduling.getCandidate().obtainUsername());\n                    bean.setJobTitle(interviewScheduling.getJobAnnouncement().obtainJobTitle());\n                    bean.setCompanyName(interviewScheduling.getJobAnnouncement().obtainCompanyName());\n                    bean.setInterviewDateTime(interviewScheduling.obtainInterviewDateTime().toString());\n                    bean.setLocation(interviewScheduling.obtainLocation());\n                    return bean;\n                })\n                .toList();\n    }\n\n    @Override\n    public boolean modifyInterview(InterviewSchedulingBean interviewSchedulingBean) throws DateNotValidException , StudentNotFoundException , JobAnnouncementNotFoundException , InterviewSchedulingNotFoundException{\n\n        if (isDateFuture(interviewSchedulingBean.getInterviewDateTime())) {\n            throw new DateNotValidException(\"The date must be in the future.\");\n        }\n\n        Recruiter recruiter = SessionManager.getInstance().getRecruiterFromSession();\n\n        Student student = studentDao.getStudent(interviewSchedulingBean.getStudentUsername())\n                .orElseThrow(() -> new StudentNotFoundException(STUDENT_NOT_FOUND_ERROR));\n        JobAnnouncement jobAnnouncement = jobAnnouncementDao.getJobAnnouncement(interviewSchedulingBean.getJobTitle(), recruiter)\n                .orElseThrow(() -> new JobAnnouncementNotFoundException(JOB_ANNOUNCEMENT_NOT_FOUND_ERROR));\n\n        InterviewScheduling interviewScheduling = interviewSchedulingDao.getInterviewScheduling(student, jobAnnouncement)\n                .orElseThrow(() -> new InterviewSchedulingNotFoundException(\"Interview not found.\"));\n\n\n        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(DATE_FORMAT);\n        LocalDateTime interviewDateTime = LocalDateTime.parse(interviewSchedulingBean.getInterviewDateTime(), formatter);\n        interviewScheduling.setInterviewDateTime(interviewDateTime);\n        interviewScheduling.setLocation(interviewSchedulingBean.getLocation());\n\n        interviewSchedulingDao.updateInterviewScheduling(interviewScheduling);\n\n        return true;\n    }\n\n    @Override\n    public boolean deleteInterview(InterviewSchedulingBean interviewSchedulingBean) throws StudentNotFoundException , JobAnnouncementNotFoundException , InterviewSchedulingNotFoundException {\n\n        Recruiter recruiter = SessionManager.getInstance().getRecruiterFromSession();\n        Student student = studentDao.getStudent(interviewSchedulingBean.getStudentUsername())\n                .orElseThrow(() -> new StudentNotFoundException(STUDENT_NOT_FOUND_ERROR));\n        JobAnnouncement jobAnnouncement = jobAnnouncementDao.getJobAnnouncement(interviewSchedulingBean.getJobTitle(), recruiter)\n                .orElseThrow(() -> new JobAnnouncementNotFoundException(JOB_ANNOUNCEMENT_NOT_FOUND_ERROR));\n\n\n        InterviewScheduling interviewScheduling = interviewSchedulingDao.getInterviewScheduling(student, jobAnnouncement)\n                .orElseThrow(() -> new InterviewSchedulingNotFoundException(\"Error: Interview not found.\"));\n\n        interviewSchedulingDao.deleteInterviewScheduling(interviewScheduling);\n\n        return true;\n    }\n\n    private StudentInfoBean convertToStudentInfoBean(Student student) {\n\n        StudentInfoBean studentInfoBean = new StudentInfoBean();\n\n        studentInfoBean.setUsername(student.obtainUsername());\n        studentInfoBean.setDateOfBirth(student.obtainDateOfBirth() != null ? student.obtainDateOfBirth() : LocalDate.of(2000, 1, 1));\n        studentInfoBean.setPhoneNumber(student.obtainPhoneNumber() != null ? student.obtainPhoneNumber() : \"No Phone Provided\");\n        studentInfoBean.setDegrees(student.obtainDegrees() != null ? new ArrayList<>(student.obtainDegrees()) : new ArrayList<>());\n        studentInfoBean.setCoursesAttended(student.obtainCoursesAttended() != null ? new ArrayList<>(student.obtainCoursesAttended()) : new ArrayList<>());\n        studentInfoBean.setCertifications(student.obtainCertifications() != null ? new ArrayList<>(student.obtainCertifications()) : new ArrayList<>());\n        studentInfoBean.setWorkExperiences(student.obtainWorkExperiences() != null ? new ArrayList<>(student.obtainWorkExperiences()) : new ArrayList<>());\n        studentInfoBean.setSkills(student.obtainSkills() != null ? new ArrayList<>(student.obtainSkills()) : new ArrayList<>());\n        studentInfoBean.setAvailability(student.obtainAvailability() != null ? student.obtainAvailability() : \"Not Specified\");\n        return studentInfoBean;\n\n    }\n\n    private boolean isDateFuture(String dateStr) {\n        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(DATE_FORMAT);\n        LocalDateTime interviewDateTime = LocalDateTime.parse(dateStr, formatter);\n        return interviewDateTime.isAfter(LocalDateTime.now());\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateAdapter.java b/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateAdapter.java
--- a/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateAdapter.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ b/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateAdapter.java	(date 1739473751434)
@@ -10,9 +10,6 @@
 import org.example.togetjob.model.dao.abstractobjects.StudentDao;
 import org.example.togetjob.model.entity.*;
 import org.example.togetjob.model.factory.InterviewSchedulingFactory;
-import org.example.togetjob.model.factory.NotificationFactory;
-import org.example.togetjob.pattern.observer.StudentObserverStudent;
-import org.example.togetjob.pattern.subject.SchedulingInterviewCollectionSubjectRecruiter;
 import org.example.togetjob.session.SessionManager;
 
 
@@ -33,15 +30,13 @@
     private final JobAnnouncementDao jobAnnouncementDao;
     private final JobApplicationDao jobApplicationDao;
     private final InterviewSchedulingDao interviewSchedulingDao;
-    private final SchedulingInterviewCollectionSubjectRecruiter schedulingInterviewCollectionSubjectRecruiter;
 
-    public ContactAJobCandidateAdapter(SendAJobApplication adapt, StudentDao studentDao, JobAnnouncementDao jobAnnouncementDao, JobApplicationDao jobApplicationDao, InterviewSchedulingDao interviewSchedulingDao, SchedulingInterviewCollectionSubjectRecruiter schedulingInterviewCollectionSubjectRecruiter) {
+    public ContactAJobCandidateAdapter(SendAJobApplication adapt, StudentDao studentDao, JobAnnouncementDao jobAnnouncementDao, JobApplicationDao jobApplicationDao, InterviewSchedulingDao interviewSchedulingDao) {
         this.adapt = adapt;
         this.studentDao = studentDao;
         this.jobAnnouncementDao = jobAnnouncementDao;
         this.jobApplicationDao = jobApplicationDao;
         this.interviewSchedulingDao = interviewSchedulingDao;
-        this.schedulingInterviewCollectionSubjectRecruiter = schedulingInterviewCollectionSubjectRecruiter;
     }
 
     public List<StudentInfoBean> showFilteredCandidates(StudentInfoSearchBean studentInfoSearchBean, JobAnnouncementBean jobAnnouncementBean) {
@@ -185,31 +180,9 @@
                 jobAnnouncement
         );
         interviewSchedulingDao.saveInterviewScheduling(interviewScheduling);
-        try {
-            schedulingInterviewCollectionSubjectRecruiter.attach(new StudentObserverStudent(student, NotificationFactory.createNotification("You have an interview scheduling!")));
-        } catch (ConfigException e) {
-            throw new RuntimeException(e);
-        }
-        try {
-            sendNotification(interviewScheduling);
-        } catch (NotificationException e) {
-           throw new NotificationException(e.getMessage()) ;
-        }
         return true;
     }
 
-
-    private void sendNotification(InterviewScheduling interviewScheduling) throws NotificationException {
-
-        try{
-            schedulingInterviewCollectionSubjectRecruiter.addInterviewScheduling(interviewScheduling);
-
-        } catch (NotificationException e) {
-            throw new NotificationException("Error during the configuration", e);
-        }
-
-    }
-
     @Override
     public List<JobAnnouncementBean> getJobAnnouncementsByRecruiter() {
         JobAnnouncementService jobAnnouncementService = new JobAnnouncementService(jobAnnouncementDao);
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"Registrazione e Login interfacce ok\">\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/view/gui/concretestate/ContactAJobCandidateState.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/view/gui/concretestate/FilterJobCandidateState.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/view/gui/controllergrafico/ContactAJobCandidateController.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/view/gui/controllergrafico/FilterJobCandidateRecruiterController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/view/gui/concretestate/RecruiterDisplayFiltersState.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/view/gui/concretestate/RecruiterDisplayFiltersState.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/view/gui/controllergrafico/HomeRecruiterController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/view/gui/controllergrafico/HomeRecruiterController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob/RecruiterCreateJobAnnouncement.fxml\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob/RecruiterDisplayFilteredStudent.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob/fxml/filteredjobcandidates.fxml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob/fxml/RecruiterDisplayFilters.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob/fxml/filterjobcandidatesrecruiter.fxml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob/fxml/filteredjobannouncements.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob/fxml/filteredjobannouncements.fxml\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Enum\" />\n        <option value=\"FxmlFile\" />\n        <option value=\"Interface\" />\n        <option value=\"Exception\" />\n        <option value=\"JavaFXApplication\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"RESET_MODE\" value=\"HARD\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;GaiaMeola&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/GaiaMeola/toGetJob.git&quot;,\n    &quot;accountId&quot;: &quot;0a1af48d-9cff-4190-bde9-bd5096772376&quot;\n  }\n}</component>\n  <component name=\"HighlightingSettingsPerFile\">\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/org/example/togetjob/Main.java\" root0=\"FORCE_HIGHLIGHTING\" />\n  </component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\n  <component name=\"ProjectId\" id=\"2nypPqqlu30o2C6FKHNbd1EkQVy\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;SONARLINT_PRECOMMIT_ANALYSIS&quot;: &quot;true&quot;,\n    &quot;extract.method.default.visibility&quot;: &quot;private&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/gaiameola/Desktop/ISPW/toGetJob/src/main/resources/org/example/togetjob&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.externalResources&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CreateClassDialog.RecentsKey\">\n      <recent name=\"org.example.togetjob.model.dao.concretefactorydao\" />\n    </key>\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob/fxml\" />\n      <recent name=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob\" />\n      <recent name=\"$PROJECT_DIR$/target/classes/org/example/togetjob\" />\n      <recent name=\"$PROJECT_DIR$/target/classes/org/example/togetjob/view\" />\n      <recent name=\"$PROJECT_DIR$/src/main/resources\" />\n    </key>\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\n      <recent name=\"org.example.togetjob\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"\" />\n      <created>1729955148511</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1729955148511</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Quarto Commit: Connection prova\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152156784</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152156784</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Quarto Commit: Connection riuscita\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152567157</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152567157</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Quinto Commit: Fine Db\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738157742126</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738157742126</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Sesto Commit: Pattern State CLI prova\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738179850232</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738179850233</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"Settimo Commit: prova Caso d'uso Registrazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738233820826</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738233820826</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"Settimo Commit: prova Caso d'uso Registrazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738234210460</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738234210460</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"Settimo Commit: prova Caso d'uso Registrazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738234584655</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738234584655</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"Settimo Commit: Caso d'uso Registrazione e Login iniziati\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738255911165</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738255911165</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"Settimo Commit: Caso d'uso Registrazione e Login completati\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738320033356</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738320033356</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"Settimo Commit: Aggiunta di HomePageStudent, HomePageRecruiter in modalità cli\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738323917280</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738323917280</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"Settimo Commit: Inizio del caso d'uso Send A Job Application\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738534877519</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738534877519</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\"Settimo Commit: Inizio del caso d'uso Send A Job Application\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738591871116</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738591871116</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"Settimo Commit: Prima parte del caso d'uso funzionante\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738602095720</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738602095720</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"Settimo Commit: Prima parte del caso d'uso funzionante\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738602224321</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738602224321</updated>\n    </task>\n    <task id=\"LOCAL-00024\" summary=\"Settimo Commit: Prima parte del caso d'uso funzionante\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738602353802</created>\n      <option name=\"number\" value=\"00024\" />\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738602353802</updated>\n    </task>\n    <task id=\"LOCAL-00025\" summary=\"Send a Job Application ok\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738847054568</created>\n      <option name=\"number\" value=\"00025\" />\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738847054568</updated>\n    </task>\n    <task id=\"LOCAL-00026\" summary=\"Send a Job Application ok\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738859623269</created>\n      <option name=\"number\" value=\"00026\" />\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738859623269</updated>\n    </task>\n    <task id=\"LOCAL-00027\" summary=\"Send a Job Application ok\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738859799273</created>\n      <option name=\"number\" value=\"00027\" />\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738859799273</updated>\n    </task>\n    <task id=\"LOCAL-00028\" summary=\"Send a Job Application ok\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738925235487</created>\n      <option name=\"number\" value=\"00028\" />\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738925235487</updated>\n    </task>\n    <task id=\"LOCAL-00029\" summary=\"Send a Job Application ok\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738935926115</created>\n      <option name=\"number\" value=\"00029\" />\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738935926115</updated>\n    </task>\n    <task id=\"LOCAL-00030\" summary=\"Send a Job Application ok\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738935935523</created>\n      <option name=\"number\" value=\"00030\" />\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738935935523</updated>\n    </task>\n    <task id=\"LOCAL-00031\" summary=\"Implementazione DATABASE DAO\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738943912969</created>\n      <option name=\"number\" value=\"00031\" />\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738943912969</updated>\n    </task>\n    <task id=\"LOCAL-00032\" summary=\"Implementazione DATABASE DAO\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738945190532</created>\n      <option name=\"number\" value=\"00032\" />\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738945190532</updated>\n    </task>\n    <task id=\"LOCAL-00033\" summary=\"Fine DAO DB che va da testare\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738945926667</created>\n      <option name=\"number\" value=\"00033\" />\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738945926667</updated>\n    </task>\n    <task id=\"LOCAL-00034\" summary=\"Fine DAO DB che va da testare\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739051085131</created>\n      <option name=\"number\" value=\"00034\" />\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739051085131</updated>\n    </task>\n    <task id=\"LOCAL-00035\" summary=\"Interfacce\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739175835404</created>\n      <option name=\"number\" value=\"00035\" />\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739175835404</updated>\n    </task>\n    <task id=\"LOCAL-00036\" summary=\"Duplicazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739220286799</created>\n      <option name=\"number\" value=\"00036\" />\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739220286800</updated>\n    </task>\n    <task id=\"LOCAL-00037\" summary=\"Duplicazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739221026328</created>\n      <option name=\"number\" value=\"00037\" />\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739221026328</updated>\n    </task>\n    <task id=\"LOCAL-00038\" summary=\"Duplicazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739221891152</created>\n      <option name=\"number\" value=\"00038\" />\n      <option name=\"presentableId\" value=\"LOCAL-00038\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739221891152</updated>\n    </task>\n    <task id=\"LOCAL-00039\" summary=\"Duplicazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739222169196</created>\n      <option name=\"number\" value=\"00039\" />\n      <option name=\"presentableId\" value=\"LOCAL-00039\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739222169196</updated>\n    </task>\n    <task id=\"LOCAL-00040\" summary=\"Duplicazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739223095546</created>\n      <option name=\"number\" value=\"00040\" />\n      <option name=\"presentableId\" value=\"LOCAL-00040\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739223095546</updated>\n    </task>\n    <task id=\"LOCAL-00041\" summary=\"Duplicazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739223296491</created>\n      <option name=\"number\" value=\"00041\" />\n      <option name=\"presentableId\" value=\"LOCAL-00041\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739223296491</updated>\n    </task>\n    <task id=\"LOCAL-00042\" summary=\"Duplicazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739223373958</created>\n      <option name=\"number\" value=\"00042\" />\n      <option name=\"presentableId\" value=\"LOCAL-00042\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739223373958</updated>\n    </task>\n    <task id=\"LOCAL-00043\" summary=\"Duplicazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739224722991</created>\n      <option name=\"number\" value=\"00043\" />\n      <option name=\"presentableId\" value=\"LOCAL-00043\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739224722991</updated>\n    </task>\n    <task id=\"LOCAL-00044\" summary=\"Duplicazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739224907675</created>\n      <option name=\"number\" value=\"00044\" />\n      <option name=\"presentableId\" value=\"LOCAL-00044\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739224907675</updated>\n    </task>\n    <task id=\"LOCAL-00045\" summary=\"Duplicazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739225182526</created>\n      <option name=\"number\" value=\"00045\" />\n      <option name=\"presentableId\" value=\"LOCAL-00045\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739225182526</updated>\n    </task>\n    <task id=\"LOCAL-00046\" summary=\"Duplicazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739227822961</created>\n      <option name=\"number\" value=\"00046\" />\n      <option name=\"presentableId\" value=\"LOCAL-00046\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739227822961</updated>\n    </task>\n    <task id=\"LOCAL-00047\" summary=\"Duplicazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739228938425</created>\n      <option name=\"number\" value=\"00047\" />\n      <option name=\"presentableId\" value=\"LOCAL-00047\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739228938425</updated>\n    </task>\n    <task id=\"LOCAL-00048\" summary=\"Duplicazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739229738949</created>\n      <option name=\"number\" value=\"00048\" />\n      <option name=\"presentableId\" value=\"LOCAL-00048\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739229738949</updated>\n    </task>\n    <task id=\"LOCAL-00049\" summary=\"Duplicazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739230414467</created>\n      <option name=\"number\" value=\"00049\" />\n      <option name=\"presentableId\" value=\"LOCAL-00049\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739230414467</updated>\n    </task>\n    <task id=\"LOCAL-00050\" summary=\"commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739286252185</created>\n      <option name=\"number\" value=\"00050\" />\n      <option name=\"presentableId\" value=\"LOCAL-00050\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739286252186</updated>\n    </task>\n    <task id=\"LOCAL-00051\" summary=\"commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739286944297</created>\n      <option name=\"number\" value=\"00051\" />\n      <option name=\"presentableId\" value=\"LOCAL-00051\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739286944297</updated>\n    </task>\n    <task id=\"LOCAL-00052\" summary=\"commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739287156849</created>\n      <option name=\"number\" value=\"00052\" />\n      <option name=\"presentableId\" value=\"LOCAL-00052\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739287156850</updated>\n    </task>\n    <task id=\"LOCAL-00053\" summary=\"Prova: aggiunta di alcune eccezioni\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739296769628</created>\n      <option name=\"number\" value=\"00053\" />\n      <option name=\"presentableId\" value=\"LOCAL-00053\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739296769628</updated>\n    </task>\n    <task id=\"LOCAL-00054\" summary=\"Registrazione e Login interfacce ok\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739356293943</created>\n      <option name=\"number\" value=\"00054\" />\n      <option name=\"presentableId\" value=\"LOCAL-00054\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739356293944</updated>\n    </task>\n    <task id=\"LOCAL-00055\" summary=\"Registrazione e Login interfacce ok\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739360362489</created>\n      <option name=\"number\" value=\"00055\" />\n      <option name=\"presentableId\" value=\"LOCAL-00055\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739360362489</updated>\n    </task>\n    <task id=\"LOCAL-00056\" summary=\"Registrazione e Login interfacce ok\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739360704403</created>\n      <option name=\"number\" value=\"00056\" />\n      <option name=\"presentableId\" value=\"LOCAL-00056\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739360704404</updated>\n    </task>\n    <task id=\"LOCAL-00057\" summary=\"Registrazione e Login interfacce ok\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739374755923</created>\n      <option name=\"number\" value=\"00057\" />\n      <option name=\"presentableId\" value=\"LOCAL-00057\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739374755923</updated>\n    </task>\n    <task id=\"LOCAL-00058\" summary=\"Registrazione e Login interfacce ok\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739397926768</created>\n      <option name=\"number\" value=\"00058\" />\n      <option name=\"presentableId\" value=\"LOCAL-00058\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739397926768</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"59\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Primo Commit\" />\n    <MESSAGE value=\"Secondo Commit: bozza Abstract Factory\" />\n    <MESSAGE value=\"Secondo Commit: Abstract Factory + Singleton completo\" />\n    <MESSAGE value=\"Terzo Commit: Aggiunta Entity\" />\n    <MESSAGE value=\"Terzo Commit: Prova Database\" />\n    <MESSAGE value=\"Quarto Commit: Connection prova\" />\n    <MESSAGE value=\"Quarto Commit: Connection riuscita\" />\n    <MESSAGE value=\"Quinto Commit: Fine Db\" />\n    <MESSAGE value=\"Sesto Commit: Pattern State CLI prova\" />\n    <MESSAGE value=\"Settimo Commit: prova Caso d'uso Registrazione\" />\n    <MESSAGE value=\"Settimo Commit: Caso d'uso Registrazione e Login iniziati\" />\n    <MESSAGE value=\"Settimo Commit: Caso d'uso Registrazione e Login completati\" />\n    <MESSAGE value=\"Settimo Commit: Aggiunta di HomePageStudent, HomePageRecruiter in modalità cli\" />\n    <MESSAGE value=\"Settimo Commit: Inizio del caso d'uso Send A Job Application\" />\n    <MESSAGE value=\"Settimo Commit: Prima parte del caso d'uso funzionante\" />\n    <MESSAGE value=\"Send a Job Application ok\" />\n    <MESSAGE value=\"Implementazione DATABASE DAO\" />\n    <MESSAGE value=\"Fine DAO DB che va da testare\" />\n    <MESSAGE value=\"Interfacce\" />\n    <MESSAGE value=\"Duplicazione\" />\n    <MESSAGE value=\"commit\" />\n    <MESSAGE value=\"Prova: aggiunta di alcune eccezioni\" />\n    <MESSAGE value=\"Registrazione e Login interfacce ok\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Registrazione e Login interfacce ok\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\n          <option name=\"timeStamp\" value=\"14\" />\n        </breakpoint>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.sql.SQLException\" package=\"java.sql\" />\n          <option name=\"timeStamp\" value=\"31\" />\n        </breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ b/.idea/workspace.xml	(date 1739474181705)
@@ -4,18 +4,42 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Registrazione e Login interfacce ok">
-      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/gui/concretestate/ContactAJobCandidateState.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/gui/concretestate/FilterJobCandidateState.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/gui/controllergrafico/ContactAJobCandidateController.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/gui/controllergrafico/FilterJobCandidateRecruiterController.java" afterDir="false" />
+    <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Inizio di Contact a Job Candidate interfaccia">
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/observer/ObserverCLI.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/observer/ObserverGUI.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/subject/JobApplicationCollection.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/subject/Subject.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/gui/concretestate/SendAJobApplicationRecruiterState.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/gui/controllergrafico/SendAJobApplicationRecruiterController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_06_02_25,_16_27_[Changes]/shelved.patch" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/gui/concretestate/RecruiterDisplayFiltersState.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/gui/concretestate/RecruiterDisplayFiltersState.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/module-info.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/module-info.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/controller/recruiter/PublishAJobAnnouncementController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/controller/recruiter/PublishAJobAnnouncementController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/controller/student/SendAJobApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/controller/student/SendAJobApplication.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concretefactorydao/FileSystemFactoryDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concretefactorydao/FileSystemFactoryDao.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/entity/JobAnnouncement.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/entity/JobAnnouncement.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/factory/NotificationFactory.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/CLINotification.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/GUINotification.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/Notification.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateAdapter.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/adapter/ContactAJobCandidateAdapter.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/observer/RecruiterNotificationObserver.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/observer/Observer.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/observer/RecruiterObserverStudent.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/observer/StudentNotificationObserver.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/observer/StudentObserverStudent.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/subject/JobApplicationCollectionSubjectRecruiter.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/subject/SchedulingInterviewCollectionSubjectRecruiter.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/subject/SubjectRecruiter.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/pattern/subject/SubjectStudent.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/boundary/ContactAJobCandidateRecruiterBoundary.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/boundary/ContactAJobCandidateRecruiterBoundary.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/boundary/ContactAJobCandidateStudentBoundary.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/boundary/ContactAJobCandidateStudentBoundary.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/boundary/SendAJobApplicationStudentBoundary.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/boundary/SendAJobApplicationStudentBoundary.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/gui/controllergrafico/HomeRecruiterController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/gui/controllergrafico/HomeRecruiterController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/org/example/togetjob/RecruiterCreateJobAnnouncement.fxml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/org/example/togetjob/RecruiterDisplayFilteredStudent.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/org/example/togetjob/fxml/filteredjobcandidates.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/org/example/togetjob/fxml/RecruiterDisplayFilters.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/org/example/togetjob/fxml/filterjobcandidatesrecruiter.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/org/example/togetjob/fxml/filteredjobannouncements.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/org/example/togetjob/fxml/filteredjobannouncements.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/gui/controllergrafico/SendAJobApplicationByStudentController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/view/gui/controllergrafico/SendAJobApplicationByStudentController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/dao.config.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/dao.config.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/org/example/togetjob/RecruiterViewDetailsJobAnnouncement.fxml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/org/example/togetjob/RecruiterViewJobApplications.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/org/example/togetjob/fxml/recruiterviewjobapplications.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/org/example/togetjob/fxml/homerecruiter.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/org/example/togetjob/fxml/homerecruiter.fxml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -27,9 +51,9 @@
       <list>
         <option value="Enum" />
         <option value="FxmlFile" />
-        <option value="Interface" />
         <option value="Exception" />
         <option value="JavaFXApplication" />
+        <option value="Interface" />
         <option value="Class" />
       </list>
     </option>
@@ -116,14 +140,6 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1729955148511</updated>
-    </task>
-    <task id="LOCAL-00010" summary="Quarto Commit: Connection prova">
-      <option name="closed" value="true" />
-      <created>1738152156784</created>
-      <option name="number" value="00010" />
-      <option name="presentableId" value="LOCAL-00010" />
-      <option name="project" value="LOCAL" />
-      <updated>1738152156784</updated>
     </task>
     <task id="LOCAL-00011" summary="Quarto Commit: Connection riuscita">
       <option name="closed" value="true" />
@@ -509,7 +525,15 @@
       <option name="project" value="LOCAL" />
       <updated>1739397926768</updated>
     </task>
-    <option name="localTasksCounter" value="59" />
+    <task id="LOCAL-00059" summary="Inizio di Contact a Job Candidate interfaccia">
+      <option name="closed" value="true" />
+      <created>1739403547508</created>
+      <option name="number" value="00059" />
+      <option name="presentableId" value="LOCAL-00059" />
+      <option name="project" value="LOCAL" />
+      <updated>1739403547509</updated>
+    </task>
+    <option name="localTasksCounter" value="60" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -547,7 +571,8 @@
     <MESSAGE value="commit" />
     <MESSAGE value="Prova: aggiunta di alcune eccezioni" />
     <MESSAGE value="Registrazione e Login interfacce ok" />
-    <option name="LAST_COMMIT_MESSAGE" value="Registrazione e Login interfacce ok" />
+    <MESSAGE value="Inizio di Contact a Job Candidate interfaccia" />
+    <option name="LAST_COMMIT_MESSAGE" value="Inizio di Contact a Job Candidate interfaccia" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
Index: src/main/java/module-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>module org.example.togetjob {\n    requires javafx.controls;\n    requires javafx.fxml;\n    requires javafx.web;\n\n    requires org.controlsfx.controls;\n    requires com.dlsc.formsfx;\n    requires net.synedra.validatorfx;\n    requires org.kordamp.ikonli.javafx;\n    requires org.kordamp.bootstrapfx.core;\n    requires eu.hansolo.tilesfx;\n    requires com.almasb.fxgl.all;\n    requires com.fasterxml.jackson.databind;\n    requires java.sql;\n    requires annotations;\n    requires mysql.connector.j;\n    requires java.desktop;\n\n    opens org.example.togetjob to javafx.fxml;\n    exports org.example.togetjob;\n    exports org.example.togetjob.view.gui.controllergrafico;\n    exports org.example.togetjob.bean;\n    opens org.example.togetjob.view.gui.controllergrafico to javafx.fxml;\n\n    exports org.example.togetjob.view.gui;\n    opens org.example.togetjob.view.gui to javafx.fxml;\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/module-info.java b/src/main/java/module-info.java
--- a/src/main/java/module-info.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ b/src/main/java/module-info.java	(date 1739452769675)
@@ -2,7 +2,6 @@
     requires javafx.controls;
     requires javafx.fxml;
     requires javafx.web;
-
     requires org.controlsfx.controls;
     requires com.dlsc.formsfx;
     requires net.synedra.validatorfx;
@@ -21,7 +20,6 @@
     exports org.example.togetjob.view.gui.controllergrafico;
     exports org.example.togetjob.bean;
     opens org.example.togetjob.view.gui.controllergrafico to javafx.fxml;
-
     exports org.example.togetjob.view.gui;
     opens org.example.togetjob.view.gui to javafx.fxml;
-}
\ No newline at end of file
+}
Index: src/main/java/org/example/togetjob/controller/student/SendAJobApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.togetjob.controller.student;\n\nimport org.example.togetjob.bean.JobAnnouncementBean;\nimport org.example.togetjob.bean.JobAnnouncementSearchBean;\nimport org.example.togetjob.bean.JobApplicationBean;\nimport org.example.togetjob.exceptions.*;\nimport org.example.togetjob.model.dao.abstractfactorydao.AbstractFactoryDaoSingleton;\nimport org.example.togetjob.model.dao.abstractobjects.JobAnnouncementDao;\nimport org.example.togetjob.model.dao.abstractobjects.JobApplicationDao;\nimport org.example.togetjob.model.dao.abstractobjects.RecruiterDao;\nimport org.example.togetjob.model.entity.*;\nimport org.example.togetjob.model.factory.JobApplicationFactory;\nimport org.example.togetjob.model.factory.NotificationFactory;\nimport org.example.togetjob.pattern.observer.RecruiterObserverStudent;\nimport org.example.togetjob.pattern.subject.JobApplicationCollectionSubjectRecruiter;\nimport org.example.togetjob.session.SessionManager;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Optional;\n\npublic class SendAJobApplication {\n\n    private final JobAnnouncementDao jobAnnouncementDao;\n    private final JobApplicationDao jobApplicationDao;\n    private final RecruiterDao recruiterDao;\n    private final JobApplicationCollectionSubjectRecruiter jobApplicationCollection;\n\n    public SendAJobApplication() {\n        this.jobAnnouncementDao = AbstractFactoryDaoSingleton.getFactoryDao().createJobAnnouncementDao();\n        this.jobApplicationDao = AbstractFactoryDaoSingleton.getFactoryDao().createJobApplicationDao();\n        this.recruiterDao = AbstractFactoryDaoSingleton.getFactoryDao().createRecruiterDao();\n        this.jobApplicationCollection = new JobApplicationCollectionSubjectRecruiter();\n    }\n\n    public List<JobAnnouncementBean> showFilteredJobAnnouncements(JobAnnouncementSearchBean jobAnnouncementSearchBean) {\n        //all job announcements\n        List<JobAnnouncement> allAnnouncements = jobAnnouncementDao.getAllJobAnnouncements();\n\n        List<JobAnnouncement> filteredAnnouncements = allAnnouncements.stream()\n                .filter(announcement -> filterByTitle(announcement, jobAnnouncementSearchBean.getJobTitle()))\n                .filter(announcement -> filterByJobType(announcement, jobAnnouncementSearchBean.getJobType()))\n                .filter(announcement -> filterByRole(announcement, jobAnnouncementSearchBean.getRole()))\n                .filter(announcement -> filterByLocation(announcement, jobAnnouncementSearchBean.getLocation()))\n                .filter(announcement -> filterByWorkingHours(announcement, jobAnnouncementSearchBean.getWorkingHours()))\n                .filter(announcement -> filterByCompanyName(announcement, jobAnnouncementSearchBean.getCompanyName()))\n                .filter(announcement -> filterBySalary(announcement, jobAnnouncementSearchBean.getSalary()))\n                .toList();\n\n        return filteredAnnouncements.stream()\n                .map(this::convertToJobAnnouncementBean)\n                .toList();\n\n    }\n\n    private JobAnnouncementBean convertToJobAnnouncementBean(JobAnnouncement jobAnnouncement) {\n\n        JobAnnouncementBean jobAnnouncementBean = new JobAnnouncementBean();\n\n        jobAnnouncementBean.setJobTitle(jobAnnouncement.obtainJobTitle() != null ? jobAnnouncement.obtainJobTitle() : \"Unknown Title\");\n        jobAnnouncementBean.setJobType(jobAnnouncement.obtainJobType() != null ? jobAnnouncement.obtainJobType() : \"Unknown Type\");\n        jobAnnouncementBean.setRole(jobAnnouncement.obtainJobRole() != null ? jobAnnouncement.obtainJobRole() : \"Unknown Role\");\n        jobAnnouncementBean.setLocation(jobAnnouncement.obtainLocation() != null ? jobAnnouncement.obtainLocation() : \"Unknown Location\");\n        jobAnnouncementBean.setCompanyName(jobAnnouncement.obtainCompanyName() != null ? jobAnnouncement.obtainCompanyName() : \"Unknown Company\");\n        jobAnnouncementBean.setDescription(jobAnnouncement.obtainDescription() != null ? jobAnnouncement.obtainDescription() : \"No Description\");\n\n\n        //map\n        jobAnnouncementBean.setActive(jobAnnouncement.isJobActive() != null && jobAnnouncement.isJobActive());\n        jobAnnouncementBean.setRecruiterUsername(jobAnnouncement.getRecruiter().obtainUsername());\n        jobAnnouncementBean.setWorkingHours(jobAnnouncement.obtainWorkingHours() != 0 ? String.valueOf(jobAnnouncement.obtainWorkingHours()) : \"Not Defined\");\n        jobAnnouncementBean.setSalary(jobAnnouncement.obtainSalary() != 0.0 ? String.valueOf(jobAnnouncement.obtainSalary()) : \"Not Defined\");\n\n        return jobAnnouncementBean;\n\n    }\n\n    private List<JobApplicationBean> convertToJobApplicationBeans(List<JobApplication> jobApplications) {\n        List<JobApplicationBean> jobApplicationBeans = new ArrayList<>();\n\n        for (JobApplication jobApplication : jobApplications) {\n            JobApplicationBean jobApplicationBean = new JobApplicationBean();\n\n            jobApplicationBean.setJobTitle(jobApplication.getJobAnnouncement().obtainJobTitle());\n            jobApplicationBean.setStudentUsername(jobApplication.getStudent().obtainUsername());\n            jobApplicationBean.setCoverLetter(jobApplication.obtainCoverLetter());\n            jobApplicationBean.setRecruiterUsername(jobApplication.getJobAnnouncement().getRecruiter().obtainUsername());\n            jobApplicationBean.setStatus(jobApplication.obtainStatus());\n            jobApplicationBeans.add(jobApplicationBean);\n        }\n\n        return jobApplicationBeans;\n    }\n\n    public JobApplicationBean showJobApplicationForm(JobAnnouncementBean jobAnnouncementBean) {\n\n        JobApplicationBean form = new JobApplicationBean();\n\n        form.setJobTitle(jobAnnouncementBean.getJobTitle());\n        form.setRecruiterUsername(jobAnnouncementBean.getRecruiterUsername());\n        form.setStatus(Status.PENDING);\n        form.setStudentUsername(SessionManager.getInstance().getStudentFromSession().obtainUsername());\n\n        form.setCoverLetter(\"\");\n        return form;\n    }\n\n    public boolean sendAJobApplication(JobApplicationBean jobApplicationBean) throws RecruiterNotFoundException , JobAnnouncementNotFoundException , JobAnnouncementNotActiveException , JobApplicationAlreadySentException {\n\n\n        // Student who wants to send a job application to a job announcement\n        Student student = SessionManager.getInstance().getStudentFromSession();\n\n        //Recruiter who publishes the job announcement\n        Recruiter recruiter = recruiterDao.getRecruiter(jobApplicationBean.getRecruiterUsername())\n                .orElseThrow(() -> new RecruiterNotFoundException(\"Error: Recruiter not found.\"));\n\n        // Job Announcement\n        JobAnnouncement jobAnnouncement = jobAnnouncementDao.getJobAnnouncement(jobApplicationBean.getJobTitle(), recruiter)\n                .orElseThrow(() -> new JobAnnouncementNotFoundException(\"Error: JobAnnouncement not found.\")); // Job Announcement Found\n\n        // Check if the job announcement is still active\n        if (jobAnnouncement.isJobActive() == null || !jobAnnouncement.isJobActive()) {\n            throw new JobAnnouncementNotActiveException(\"This job announcement is no longer active.\");\n        }\n\n        // Check if the student has already applied for this job\n        if (jobApplicationDao.getJobApplication(student, jobAnnouncement).isPresent()) {\n            throw new JobApplicationAlreadySentException(\"You have already applied for this job.\");\n        }\n\n        JobApplication jobApplication = JobApplicationFactory.createJobApplication(student, jobApplicationBean.getCoverLetter(), jobAnnouncement);\n        jobApplicationDao.saveJobApplication(jobApplication); // Persistence\n\n        try {\n            RecruiterObserverStudent recruiterObserver = new RecruiterObserverStudent(recruiter, NotificationFactory.createNotification(\"A new job application has been submitted!\"));\n            jobApplicationCollection.attach(recruiterObserver);\n        } catch (ConfigException e) {\n            throw new RuntimeException(e);\n        }\n\n        try {\n            sendNotificationToRecruiter(jobApplication);\n        } catch (NotificationException e) {\n            return false;\n        }\n\n        return true;\n    }\n\n    public List<JobApplicationBean> getAllJobApplication(){\n\n        Student student = SessionManager.getInstance().getStudentFromSession();\n\n        List<JobApplication> jobApplications = jobApplicationDao.getAllJobApplications(student);\n        return convertToJobApplicationBeans(jobApplications);\n\n    }\n\n    public boolean modifyJobApplication(JobApplicationBean jobApplicationBean) {\n\n        Status status = getStatusJobApplication(jobApplicationBean);\n\n        if (status.equals(Status.PENDING)) {\n            Optional<JobApplication> jobApplicationOPT = getJobApplication(jobApplicationBean);\n            //Job application existing\n\n            if (jobApplicationOPT.isEmpty()) {\n                return false;\n            }\n\n            JobApplication jobApplication = jobApplicationOPT.get();\n            jobApplication.setCoverLetter(jobApplicationBean.getCoverLetter());  // Modify\n            jobApplicationDao.saveJobApplication(jobApplication);\n            return true;\n        }\n\n        return false;\n    }\n\n\n    public boolean deleteJobApplication(JobApplicationBean jobApplicationBean) {\n\n        Optional<JobApplication> jobApplicationOPT = getJobApplication(jobApplicationBean);\n\n        if (jobApplicationOPT.isEmpty()) {\n            return false;\n        }\n\n        JobApplication jobApplication = jobApplicationOPT.get();\n\n        if (!jobApplication.obtainStatus().equals(Status.PENDING)) {\n            return false; //job application already managed\n        }\n\n        jobApplicationDao.deleteJobApplication(jobApplication);\n        jobApplicationCollection.removeJobApplication(jobApplication);\n\n        return true;\n\n    }\n\n    public List<JobApplicationBean> getJobApplicationsForRecruiter(JobAnnouncementBean jobAnnouncementBean){\n\n        Recruiter recruiter = SessionManager.getInstance().getRecruiterFromSession();\n\n        Optional<JobAnnouncement> jobAnnouncementOpt = jobAnnouncementDao.getJobAnnouncement(jobAnnouncementBean.getJobTitle(), recruiter);\n        if (jobAnnouncementOpt.isEmpty()) {\n            return new ArrayList<>();\n        }\n\n        JobAnnouncement jobAnnouncement = jobAnnouncementOpt.get();\n\n        // all the job applications sent to the job announcement\n        List<JobApplication> jobApplications = jobApplicationDao.getJobApplicationsByAnnouncement(jobAnnouncement);\n        return convertToJobApplicationBeans(jobApplications);\n\n    }\n\n\n    public boolean updateJobApplicationStatus(JobApplicationBean jobApplicationBean, Status status) throws JobApplicationNotFoundException {\n\n\n        JobAnnouncement jobAnnouncement = getJobAnnouncementFromBean(jobApplicationBean);\n\n        List<JobApplication> jobApplications = jobApplicationDao.getJobApplicationsByAnnouncement(jobAnnouncement);\n        Optional<JobApplication> jobApplicationOpt = jobApplications.stream()\n                .filter(jobApplication -> jobApplication.getStudent().obtainUsername().equals(jobApplicationBean.getStudentUsername()))\n                .findFirst();\n        if (jobApplicationOpt.isEmpty()) {\n            throw new JobApplicationNotFoundException(\"Error: Job Application not found for the specified student.\");\n        }\n        JobApplication jobApplication = jobApplicationOpt.get();\n        if (!jobApplication.obtainStatus().equals(Status.PENDING)) {\n            return false; // Already Managed\n        }\n        jobApplication.setStatus(status); // (ACCEPTED or REJECTED)\n        jobApplicationDao.updateJobApplication(jobApplication);\n\n        return true;\n\n    }\n\n\n    private JobAnnouncement getJobAnnouncementFromBean(JobApplicationBean jobApplicationBean) {\n        //recruiter from session\n        Recruiter recruiter = SessionManager.getInstance().getRecruiterFromSession();\n\n        // job announcement\n        Optional<JobAnnouncement> jobAnnouncementOpt = jobAnnouncementDao.getJobAnnouncement(jobApplicationBean.getJobTitle(), recruiter);\n\n        if (jobAnnouncementOpt.isEmpty()) {\n            throw new IllegalArgumentException(\"Error: No job announcement found for the recruiter with the specified title.\");\n        }\n\n        return jobAnnouncementOpt.get();\n    }\n\n\n\n    private void sendNotificationToRecruiter(JobApplication jobApplication) throws NotificationException {\n\n        try {\n            jobApplicationCollection.addJobApplication(jobApplication); // notify\n        } catch (NotificationException e) {\n            throw new NotificationException(\"Error during the configuration\", e);\n        }\n\n    }\n\n    private Optional<JobApplication> getJobApplication(JobApplicationBean jobApplicationBean) {\n        Student student = SessionManager.getInstance().getStudentFromSession();\n        Recruiter recruiter = recruiterDao.getRecruiter(jobApplicationBean.getRecruiterUsername())\n                .orElseThrow(() -> new IllegalArgumentException(\"Error: Recruiter not found.\"));\n        JobAnnouncement jobAnnouncement = jobAnnouncementDao.getJobAnnouncement(jobApplicationBean.getJobTitle(), recruiter)\n                .orElseThrow(() -> new IllegalArgumentException(\"Error: Job Announcement not found.\"));\n        return jobApplicationDao.getJobApplication(student, jobAnnouncement);\n    }\n\n\n    private Status getStatusJobApplication(JobApplicationBean jobApplicationBean) {\n\n        Optional<JobApplication> jobApplicationOpt = getJobApplication(jobApplicationBean);\n        if (jobApplicationOpt.isEmpty()) {\n\n            throw new IllegalArgumentException(\"Error: job Application not Found.\");\n\n        }\n\n        JobApplication jobApplication = jobApplicationOpt.get();\n        return jobApplication.obtainStatus();\n\n    }\n\n    //method to filter\n\n    private boolean filterByTitle(JobAnnouncement announcement, String jobTitle) {\n        return jobTitle == null || jobTitle.isEmpty() || announcement.obtainJobTitle().toLowerCase().contains(jobTitle.toLowerCase());\n    }\n\n    private boolean filterByLocation(JobAnnouncement announcement, String location) {\n        return location == null || location.isEmpty() || announcement.obtainLocation().toLowerCase().contains(location.toLowerCase());\n    }\n\n    private boolean filterByRole(JobAnnouncement announcement, String role) {\n        return role == null || role.isEmpty() || announcement.obtainJobRole().toLowerCase().contains(role.toLowerCase());\n    }\n\n    private boolean filterByJobType(JobAnnouncement announcement, String jobType) {\n        return jobType == null || jobType.isEmpty() || announcement.obtainJobType().toLowerCase().contains(jobType.toLowerCase());\n    }\n\n    private boolean filterBySalary(JobAnnouncement announcement, String salary) {\n        if (salary == null || salary.isEmpty()) {\n            return true; //no filter\n        }\n        try {\n            double salaryFilter = Double.parseDouble(salary);\n            return announcement.obtainSalary() >= salaryFilter;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n\n    private boolean filterByWorkingHours(JobAnnouncement announcement, String workingHours) {\n        if (workingHours == null || workingHours.isEmpty()) {\n            return true; //no filter\n        }\n        try {\n            int workingHoursFilter = Integer.parseInt(workingHours);\n            return announcement.obtainWorkingHours() >= workingHoursFilter;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n\n    private boolean filterByCompanyName(JobAnnouncement announcement, String companyName) {\n        return companyName == null || companyName.isEmpty() || announcement.obtainCompanyName().toLowerCase().contains(companyName.toLowerCase());\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/controller/student/SendAJobApplication.java b/src/main/java/org/example/togetjob/controller/student/SendAJobApplication.java
--- a/src/main/java/org/example/togetjob/controller/student/SendAJobApplication.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ b/src/main/java/org/example/togetjob/controller/student/SendAJobApplication.java	(date 1739472635097)
@@ -10,9 +10,7 @@
 import org.example.togetjob.model.dao.abstractobjects.RecruiterDao;
 import org.example.togetjob.model.entity.*;
 import org.example.togetjob.model.factory.JobApplicationFactory;
-import org.example.togetjob.model.factory.NotificationFactory;
-import org.example.togetjob.pattern.observer.RecruiterObserverStudent;
-import org.example.togetjob.pattern.subject.JobApplicationCollectionSubjectRecruiter;
+import org.example.togetjob.pattern.subject.JobApplicationCollection;
 import org.example.togetjob.session.SessionManager;
 
 import java.util.ArrayList;
@@ -24,13 +22,13 @@
     private final JobAnnouncementDao jobAnnouncementDao;
     private final JobApplicationDao jobApplicationDao;
     private final RecruiterDao recruiterDao;
-    private final JobApplicationCollectionSubjectRecruiter jobApplicationCollection;
+    private final JobApplicationCollection jobApplicationCollection;
 
     public SendAJobApplication() {
         this.jobAnnouncementDao = AbstractFactoryDaoSingleton.getFactoryDao().createJobAnnouncementDao();
         this.jobApplicationDao = AbstractFactoryDaoSingleton.getFactoryDao().createJobApplicationDao();
         this.recruiterDao = AbstractFactoryDaoSingleton.getFactoryDao().createRecruiterDao();
-        this.jobApplicationCollection = new JobApplicationCollectionSubjectRecruiter();
+        this.jobApplicationCollection = new JobApplicationCollection();
     }
 
     public List<JobAnnouncementBean> showFilteredJobAnnouncements(JobAnnouncementSearchBean jobAnnouncementSearchBean) {
@@ -53,45 +51,6 @@
 
     }
 
-    private JobAnnouncementBean convertToJobAnnouncementBean(JobAnnouncement jobAnnouncement) {
-
-        JobAnnouncementBean jobAnnouncementBean = new JobAnnouncementBean();
-
-        jobAnnouncementBean.setJobTitle(jobAnnouncement.obtainJobTitle() != null ? jobAnnouncement.obtainJobTitle() : "Unknown Title");
-        jobAnnouncementBean.setJobType(jobAnnouncement.obtainJobType() != null ? jobAnnouncement.obtainJobType() : "Unknown Type");
-        jobAnnouncementBean.setRole(jobAnnouncement.obtainJobRole() != null ? jobAnnouncement.obtainJobRole() : "Unknown Role");
-        jobAnnouncementBean.setLocation(jobAnnouncement.obtainLocation() != null ? jobAnnouncement.obtainLocation() : "Unknown Location");
-        jobAnnouncementBean.setCompanyName(jobAnnouncement.obtainCompanyName() != null ? jobAnnouncement.obtainCompanyName() : "Unknown Company");
-        jobAnnouncementBean.setDescription(jobAnnouncement.obtainDescription() != null ? jobAnnouncement.obtainDescription() : "No Description");
-
-
-        //map
-        jobAnnouncementBean.setActive(jobAnnouncement.isJobActive() != null && jobAnnouncement.isJobActive());
-        jobAnnouncementBean.setRecruiterUsername(jobAnnouncement.getRecruiter().obtainUsername());
-        jobAnnouncementBean.setWorkingHours(jobAnnouncement.obtainWorkingHours() != 0 ? String.valueOf(jobAnnouncement.obtainWorkingHours()) : "Not Defined");
-        jobAnnouncementBean.setSalary(jobAnnouncement.obtainSalary() != 0.0 ? String.valueOf(jobAnnouncement.obtainSalary()) : "Not Defined");
-
-        return jobAnnouncementBean;
-
-    }
-
-    private List<JobApplicationBean> convertToJobApplicationBeans(List<JobApplication> jobApplications) {
-        List<JobApplicationBean> jobApplicationBeans = new ArrayList<>();
-
-        for (JobApplication jobApplication : jobApplications) {
-            JobApplicationBean jobApplicationBean = new JobApplicationBean();
-
-            jobApplicationBean.setJobTitle(jobApplication.getJobAnnouncement().obtainJobTitle());
-            jobApplicationBean.setStudentUsername(jobApplication.getStudent().obtainUsername());
-            jobApplicationBean.setCoverLetter(jobApplication.obtainCoverLetter());
-            jobApplicationBean.setRecruiterUsername(jobApplication.getJobAnnouncement().getRecruiter().obtainUsername());
-            jobApplicationBean.setStatus(jobApplication.obtainStatus());
-            jobApplicationBeans.add(jobApplicationBean);
-        }
-
-        return jobApplicationBeans;
-    }
-
     public JobApplicationBean showJobApplicationForm(JobAnnouncementBean jobAnnouncementBean) {
 
         JobApplicationBean form = new JobApplicationBean();
@@ -105,8 +64,7 @@
         return form;
     }
 
-    public boolean sendAJobApplication(JobApplicationBean jobApplicationBean) throws RecruiterNotFoundException , JobAnnouncementNotFoundException , JobAnnouncementNotActiveException , JobApplicationAlreadySentException {
-
+    public boolean sendAJobApplication(JobApplicationBean jobApplicationBean) throws RecruiterNotFoundException, JobAnnouncementNotFoundException, JobAnnouncementNotActiveException, JobApplicationAlreadySentException, ConfigException {
 
         // Student who wants to send a job application to a job announcement
         Student student = SessionManager.getInstance().getStudentFromSession();
@@ -131,21 +89,10 @@
 
         JobApplication jobApplication = JobApplicationFactory.createJobApplication(student, jobApplicationBean.getCoverLetter(), jobAnnouncement);
         jobApplicationDao.saveJobApplication(jobApplication); // Persistence
-
-        try {
-            RecruiterObserverStudent recruiterObserver = new RecruiterObserverStudent(recruiter, NotificationFactory.createNotification("A new job application has been submitted!"));
-            jobApplicationCollection.attach(recruiterObserver);
-        } catch (ConfigException e) {
-            throw new RuntimeException(e);
-        }
-
-        try {
-            sendNotificationToRecruiter(jobApplication);
-        } catch (NotificationException e) {
-            return false;
-        }
+        jobApplicationCollection.addJobApplication(jobApplication);
 
         return true;
+
     }
 
     public List<JobApplicationBean> getAllJobApplication(){
@@ -256,18 +203,6 @@
         return jobAnnouncementOpt.get();
     }
 
-
-
-    private void sendNotificationToRecruiter(JobApplication jobApplication) throws NotificationException {
-
-        try {
-            jobApplicationCollection.addJobApplication(jobApplication); // notify
-        } catch (NotificationException e) {
-            throw new NotificationException("Error during the configuration", e);
-        }
-
-    }
-
     private Optional<JobApplication> getJobApplication(JobApplicationBean jobApplicationBean) {
         Student student = SessionManager.getInstance().getStudentFromSession();
         Recruiter recruiter = recruiterDao.getRecruiter(jobApplicationBean.getRecruiterUsername())
@@ -338,4 +273,44 @@
         return companyName == null || companyName.isEmpty() || announcement.obtainCompanyName().toLowerCase().contains(companyName.toLowerCase());
     }
 
+
+    private JobAnnouncementBean convertToJobAnnouncementBean(JobAnnouncement jobAnnouncement) {
+
+        JobAnnouncementBean jobAnnouncementBean = new JobAnnouncementBean();
+
+        jobAnnouncementBean.setJobTitle(jobAnnouncement.obtainJobTitle() != null ? jobAnnouncement.obtainJobTitle() : "Unknown Title");
+        jobAnnouncementBean.setJobType(jobAnnouncement.obtainJobType() != null ? jobAnnouncement.obtainJobType() : "Unknown Type");
+        jobAnnouncementBean.setRole(jobAnnouncement.obtainJobRole() != null ? jobAnnouncement.obtainJobRole() : "Unknown Role");
+        jobAnnouncementBean.setLocation(jobAnnouncement.obtainLocation() != null ? jobAnnouncement.obtainLocation() : "Unknown Location");
+        jobAnnouncementBean.setCompanyName(jobAnnouncement.obtainCompanyName() != null ? jobAnnouncement.obtainCompanyName() : "Unknown Company");
+        jobAnnouncementBean.setDescription(jobAnnouncement.obtainDescription() != null ? jobAnnouncement.obtainDescription() : "No Description");
+
+
+        //map
+        jobAnnouncementBean.setActive(jobAnnouncement.isJobActive() != null && jobAnnouncement.isJobActive());
+        jobAnnouncementBean.setRecruiterUsername(jobAnnouncement.getRecruiter().obtainUsername());
+        jobAnnouncementBean.setWorkingHours(jobAnnouncement.obtainWorkingHours() != 0 ? String.valueOf(jobAnnouncement.obtainWorkingHours()) : "Not Defined");
+        jobAnnouncementBean.setSalary(jobAnnouncement.obtainSalary() != 0.0 ? String.valueOf(jobAnnouncement.obtainSalary()) : "Not Defined");
+
+        return jobAnnouncementBean;
+
+    }
+
+    private List<JobApplicationBean> convertToJobApplicationBeans(List<JobApplication> jobApplications) {
+        List<JobApplicationBean> jobApplicationBeans = new ArrayList<>();
+
+        for (JobApplication jobApplication : jobApplications) {
+            JobApplicationBean jobApplicationBean = new JobApplicationBean();
+
+            jobApplicationBean.setJobTitle(jobApplication.getJobAnnouncement().obtainJobTitle());
+            jobApplicationBean.setStudentUsername(jobApplication.getStudent().obtainUsername());
+            jobApplicationBean.setCoverLetter(jobApplication.obtainCoverLetter());
+            jobApplicationBean.setRecruiterUsername(jobApplication.getJobAnnouncement().getRecruiter().obtainUsername());
+            jobApplicationBean.setStatus(jobApplication.obtainStatus());
+            jobApplicationBeans.add(jobApplicationBean);
+        }
+
+        return jobApplicationBeans;
+    }
+
 }
Index: src/main/java/org/example/togetjob/pattern/subject/JobApplicationCollection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/pattern/subject/JobApplicationCollection.java b/src/main/java/org/example/togetjob/pattern/subject/JobApplicationCollection.java
new file mode 100644
--- /dev/null	(date 1739473901650)
+++ b/src/main/java/org/example/togetjob/pattern/subject/JobApplicationCollection.java	(date 1739473901650)
@@ -0,0 +1,70 @@
+package org.example.togetjob.pattern.subject;
+
+import org.example.togetjob.model.entity.JobAnnouncement;
+import org.example.togetjob.model.entity.JobApplication;
+import org.example.togetjob.pattern.observer.Observer;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+public class JobApplicationCollection extends Subject {
+
+    private final List<Observer> observers = new ArrayList<>();
+    private final Map<JobAnnouncement, List<JobApplication>> jobApplicationsMap;
+    private boolean newApplicationAdded;
+
+    public JobApplicationCollection() {
+        super(new ArrayList<>(), true);
+        this.jobApplicationsMap = new HashMap<>();
+        this.newApplicationAdded = false;
+    }
+
+    public void addJobApplication(JobApplication jobApplication) {
+        JobAnnouncement jobAnnouncement = jobApplication.getJobAnnouncement();
+
+        jobApplicationsMap.putIfAbsent(jobAnnouncement, new ArrayList<>());
+        jobApplicationsMap.get(jobAnnouncement).add(jobApplication);
+
+        this.newApplicationAdded = true;
+        this.notifyObservers();
+        this.newApplicationAdded = false;
+    }
+
+    public void removeJobApplication(JobApplication jobApplication) {
+        JobAnnouncement jobAnnouncement = jobApplication.getJobAnnouncement();
+
+        if (jobApplicationsMap.containsKey(jobAnnouncement)) {
+            jobApplicationsMap.get(jobAnnouncement).remove(jobApplication);
+        }
+
+        this.notifyObservers();
+    }
+
+    public List<JobApplication> getJobApplicationsForAnnouncement(JobAnnouncement jobAnnouncement) {
+        return jobApplicationsMap.getOrDefault(jobAnnouncement, new ArrayList<>());
+    }
+
+    public int getPendingApplicationsCount(JobAnnouncement jobAnnouncement) {
+        return jobApplicationsMap.getOrDefault(jobAnnouncement, new ArrayList<>()).size();
+    }
+
+    public List<JobApplication> getAllApplications() {
+        List<JobApplication> allApplications = new ArrayList<>();
+        for (List<JobApplication> applications : jobApplicationsMap.values()) {
+            allApplications.addAll(applications);
+        }
+        return allApplications;
+    }
+
+    @Override
+    protected boolean isThereAnythingToNotify() {
+        return newApplicationAdded;
+    }
+
+    @Override
+    public void attach(Observer observer) {
+        observers.add(observer);
+    }
+}
Index: src/main/java/org/example/togetjob/view/gui/controllergrafico/HomeRecruiterController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.togetjob.view.gui.controllergrafico;\n\nimport javafx.fxml.FXML;\nimport javafx.geometry.Insets;\nimport javafx.geometry.Pos;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.ListCell;\nimport javafx.scene.control.ListView;\nimport javafx.scene.control.TitledPane;\nimport javafx.scene.layout.HBox;\nimport javafx.scene.text.Text;\nimport org.example.togetjob.bean.JobAnnouncementBean;\nimport org.example.togetjob.printer.Printer;\nimport org.example.togetjob.view.boundary.LoginBoundary;\nimport org.example.togetjob.view.boundary.PublishAJobAnnouncementRecruiterBoundary;\nimport org.example.togetjob.view.gui.GUIContext;\nimport org.example.togetjob.view.gui.concretestate.CreateJobAnnouncementState;\nimport org.example.togetjob.view.gui.concretestate.FilterJobCandidateState;\nimport org.example.togetjob.view.gui.concretestate.HomeState;\n\nimport java.util.List;\n\npublic class HomeRecruiterController {\n\n    @FXML\n    private TitledPane jobAnnouncementField;\n\n    @FXML\n    private ListView<JobAnnouncementBean> jobAnnouncementBeanListView;\n\n    private GUIContext context;\n    private final LoginBoundary loginBoundary = new LoginBoundary();\n    private final PublishAJobAnnouncementRecruiterBoundary publishAJobAnnouncementRecruiterBoundary = new PublishAJobAnnouncementRecruiterBoundary();\n\n    public void setContext(GUIContext context){\n        this.context = context;\n    }\n\n    @FXML\n    private void initialize() {\n        List<JobAnnouncementBean> jobAnnouncements = fetchJobAnnouncements();\n        populateJobAnnouncements(jobAnnouncements);\n    }\n\n    @FXML\n    private void handlePublishJobAnnouncementButton(){\n        if (context != null) {\n            Printer.print(\"Going to CreateJobAnnouncement...\");\n            context.setState(new CreateJobAnnouncementState(context));\n            context.showMenu();\n        } else {\n            Printer.print(\"Context is NOT initialized in HomeRecruiter!\");\n        }\n    }\n\n    @FXML\n    private void handleLogout() {\n        if (context != null) {\n            Printer.print(\"Context is initialized!\");\n            loginBoundary.logout();\n            context.setState(new HomeState(context));\n            context.showMenu();\n        } else {\n            Printer.print(\"Context is not initialized!\");\n        }\n    }\n\n    private void populateJobAnnouncements(List<JobAnnouncementBean> jobAnnouncements) {\n        if (jobAnnouncements != null && !jobAnnouncements.isEmpty()) {\n            jobAnnouncementBeanListView.getItems().clear();\n            jobAnnouncementBeanListView.getItems().addAll(jobAnnouncements);\n            jobAnnouncementBeanListView.setCellFactory(param -> createJobAnnouncementCell());\n        } else {\n            Printer.print(\"No job announcements to display.\");\n        }\n    }\n\n    private ListCell<JobAnnouncementBean> createJobAnnouncementCell() {\n        return new ListCell<JobAnnouncementBean>() {\n            @Override\n            protected void updateItem(JobAnnouncementBean jobAnnouncement, boolean empty) {\n                super.updateItem(jobAnnouncement, empty);\n\n                if (empty || jobAnnouncement == null) {\n                    setText(null);\n                    setGraphic(null);\n                } else {\n                    HBox hbox = new HBox(10);\n                    hbox.setAlignment(Pos.CENTER_LEFT);\n                    hbox.setPadding(new Insets(5, 10, 5, 10));\n\n                    Text jobTitleText = new Text(jobAnnouncement.getJobTitle());\n                    jobTitleText.setStyle(\"-fx-font-family: 'Apple Gothic'; -fx-font-weight: bold; -fx-font-size: 14px; -fx-fill: #2980b9;\");\n\n                    Text statusLabelText = new Text(\" - Status:\");\n                    statusLabelText.setStyle(\"-fx-font-family: 'Apple Gothic'; -fx-font-size: 12px; -fx-fill: #2980b9;\");\n\n                    Text statusText = new Text(jobAnnouncement.isActive() ? \"ACTIVE\" : \"INACTIVE\");\n                    statusText.setStyle(\"-fx-font-family: 'Apple Gothic'; -fx-font-size: 12px; \" + getStatusColorStyle(jobAnnouncement.isActive()));\n\n                    hbox.getChildren().addAll(jobTitleText, statusLabelText, statusText);\n\n                    // Create the button panel with the two buttons \"Manage\" and \"Contact a Job Candidate\"\n                    HBox buttonBox = createButtonsForJobAnnouncement(jobAnnouncement);\n                    hbox.getChildren().add(buttonBox);\n\n                    setGraphic(hbox);\n                }\n            }\n        };\n    }\n\n    private String getStatusColorStyle(boolean isActive) {\n        return isActive ? \"-fx-fill: #28A745;\" : \"-fx-fill: #DC3545;\";\n    }\n\n    private HBox createButtonsForJobAnnouncement(JobAnnouncementBean jobAnnouncement) {\n        HBox hbox = new HBox(10);\n\n        // Button 1: \"Manage\"\n        Button manageButton = new Button(\"Manage\");\n        manageButton.setOnAction(event -> handleManageJobAnnouncement(jobAnnouncement));\n\n        // Button 2: \"Contact a Job Candidate\"\n        Button contactButton = new Button(\"Contact a Job Candidate\");\n        contactButton.setOnAction(event -> handleContactJobCandidate(jobAnnouncement));\n\n        String buttonStyle = \"-fx-background-color: #b3d9ff; \" +\n                \"-fx-text-fill: #2980b9; \" +\n                \"-fx-border-radius: 5; \" +\n                \"-fx-border-color: #2980b9; \" +\n                \"-fx-border-width: 2; \" +\n                \"-fx-cursor: hand; \" +\n                \"-fx-font-weight: bold; \" +\n                \"-fx-background-radius: 5;\" +\n                \"-fx-font-size: 11px;\";\n\n        manageButton.setStyle(buttonStyle);\n        contactButton.setStyle(buttonStyle);\n\n        hbox.getChildren().addAll(manageButton, contactButton);\n        return hbox;\n    }\n\n    private void handleManageJobAnnouncement(JobAnnouncementBean jobAnnouncement) {\n        Printer.print(\"Managing Job Announcement: \" + jobAnnouncement.getJobTitle());\n        // Implement the logic for managing the job announcement (e.g., editing or reviewing it)\n    }\n\n    private void handleContactJobCandidate(JobAnnouncementBean jobAnnouncement) {\n        Printer.print(\"Contacting Job Candidate for: \" + jobAnnouncement.getJobTitle());\n        context.setState(new FilterJobCandidateState(context, jobAnnouncement));\n        context.showMenu();\n    }\n\n    private List<JobAnnouncementBean> fetchJobAnnouncements() {\n        return publishAJobAnnouncementRecruiterBoundary.getJobAnnouncements();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/view/gui/controllergrafico/HomeRecruiterController.java b/src/main/java/org/example/togetjob/view/gui/controllergrafico/HomeRecruiterController.java
--- a/src/main/java/org/example/togetjob/view/gui/controllergrafico/HomeRecruiterController.java	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ b/src/main/java/org/example/togetjob/view/gui/controllergrafico/HomeRecruiterController.java	(date 1739452769683)
@@ -17,6 +17,7 @@
 import org.example.togetjob.view.gui.concretestate.CreateJobAnnouncementState;
 import org.example.togetjob.view.gui.concretestate.FilterJobCandidateState;
 import org.example.togetjob.view.gui.concretestate.HomeState;
+import org.example.togetjob.view.gui.concretestate.SendAJobApplicationRecruiterState;
 
 import java.util.List;
 
@@ -156,4 +157,11 @@
     private List<JobAnnouncementBean> fetchJobAnnouncements() {
         return publishAJobAnnouncementRecruiterBoundary.getJobAnnouncements();
     }
+
+    public void handleViewNotifications() {
+        Printer.print("View notifications ...");
+        context.setState(new SendAJobApplicationRecruiterState(context));
+        context.showMenu();
+    }
+
 }
Index: src/main/resources/dao.config.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># in memory, jdbc, file system\ndao.type = jdbc
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/main/resources/dao.config.properties b/src/main/resources/dao.config.properties
--- a/src/main/resources/dao.config.properties	(revision c23d3c938ffd170ddcf98cda57ad1d7faf2d84a6)
+++ b/src/main/resources/dao.config.properties	(date 1739461876235)
@@ -1,2 +1,2 @@
 # in memory, jdbc, file system
-dao.type = jdbc
\ No newline at end of file
+dao.type = in memory
\ No newline at end of file
