Index: src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemStudentDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.togetjob.model.dao.concreteobjects;\n\nimport com.fasterxml.jackson.core.type.TypeReference;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.example.togetjob.model.dao.abstractobjects.StudentDao;\nimport org.example.togetjob.model.entity.Student;\nimport org.example.togetjob.printer.Printer;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Optional;\n\npublic class FileSystemStudentDao implements StudentDao {\n\n    private static final String PATH_NAME = \"/Users/enrico_talone/IdeaProjects/toGetJob/src/main/resources/org/example/togetjob/files_json/Student.json\";\n    //private static final String PATH_NAME = \"files_json/Student.json\" ;\n    private final ObjectMapper objectMapper = new ObjectMapper();\n\n    @Override\n    public boolean saveStudent(Student student) {\n        try {\n            List<Student> students = getAllStudents();\n\n            if (students.stream().anyMatch(s -> s.getUsername().equals(student.getUsername()))) {\n                Printer.print(\"The student: \" + student.getUsername() + \" already exists.\");\n                return false;\n            }\n\n            students.add(student);\n            objectMapper.writeValue(new File(PATH_NAME), students);\n            Printer.print(\"The student: \" + student.getUsername() + \" has been successfully saved in the File System\");\n            return true;\n\n        } catch (IOException e) {\n            Printer.print(\"The student: \" + student.getUsername() + \" cannot be saved in the File System\");\n            Printer.print(e.getMessage());\n            return false;\n        }\n    }\n\n\n    @Override\n    public Optional<Student> getStudent(String username) {\n        return getAllStudents().stream().filter(student -> student.getUsername().equals(username)).findFirst();\n    }\n\n\n    @Override\n    public List<Student> getAllStudents() {\n        try {\n            List<Student> students = new ArrayList<>(objectMapper.readValue(new File(PATH_NAME), new TypeReference<List<Student>>() {}));\n\n            if (students.isEmpty()) {\n                return new ArrayList<>();\n            }\n\n            return students;\n\n        } catch (IOException e) {\n            Printer.print(\"Students cannot be retrieved from File System\");\n            Printer.print(e.getMessage());\n            return new ArrayList<>();\n        }\n    }\n\n    @Override\n    public boolean updateStudent(Student student) {\n        try {\n            List<Student> students = getAllStudents();\n            boolean found = false;\n\n            for (int i = 0; i < students.size(); i++) {\n                if (students.get(i).getUsername().equals(student.getUsername())) {\n                    students.set(i, student); // Update student data\n                    found = true;\n                    break;\n                }\n            }\n\n            if (!found) {\n                Printer.print(\"The student: \" + student.getUsername() + \" doesn't exist.\");\n                return false;\n            }\n\n            objectMapper.writeValue(new File(PATH_NAME), students);\n            Printer.print(\"The student: \" + student.getUsername() + \" has been successfully updated.\");\n            return true;\n\n        } catch (IOException e) {\n            Printer.print(\"An unexpected error occurred: \" + e.getMessage());\n            return false;\n        }\n    }\n\n\n    @Override\n    public boolean deleteStudent(String username) {\n        try {\n            List<Student> students = getAllStudents();\n            boolean removed = students.removeIf(student -> student.getUsername().equals(username));\n            if (!removed) {\n                Printer.print(\"The student: \" + username + \" doesn't exist.\");\n                return false;\n            }\n\n            objectMapper.writeValue(new File(PATH_NAME), students);\n            Printer.print(\"The student: \" + username + \" has been successfully deleted.\");\n            return true;\n\n        } catch (IOException e) {\n            Printer.print(\"The student: \" + username + \" cannot be deleted\");\n            Printer.print(e.getMessage());\n            return false;\n        }\n    }\n\n\n    @Override\n    public boolean studentExists(String username) {\n        try {\n            List<Student> students = objectMapper.readValue(new File(PATH_NAME), new TypeReference<List<Student>>() {});\n\n            if (students.isEmpty()) {\n                Printer.print(\"There aren't any students in the File System\");\n                return false;\n            }\n\n            boolean presence = students.stream().anyMatch(student -> student.getUsername().equals(username));\n\n            if (presence) {\n                Printer.print(\"The student: \" + username + \" exists\");\n                return true;\n            }\n\n            Printer.print(\"The student: \" + username + \" doesn't exist\");\n            return false;\n\n        } catch (IOException e) {\n            Printer.print(\"The student: \" + username + \" cannot be searched\");\n            Printer.print(e.getMessage());\n            return false;\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemStudentDao.java b/src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemStudentDao.java
--- a/src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemStudentDao.java	(revision 5577470cdb18d2778ecee0571e4d9067bf7e7df4)
+++ b/src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemStudentDao.java	(date 1738748671019)
@@ -1,147 +1,95 @@
 package org.example.togetjob.model.dao.concreteobjects;
 
-import com.fasterxml.jackson.core.type.TypeReference;
-import com.fasterxml.jackson.databind.ObjectMapper;
 import org.example.togetjob.model.dao.abstractobjects.StudentDao;
-import org.example.togetjob.model.entity.Student;
+import org.example.togetjob.model.entity.*;
 import org.example.togetjob.printer.Printer;
 
-import java.io.File;
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Optional;
+import java.io.*;
+import java.time.LocalDate;
+import java.util.*;
 
 public class FileSystemStudentDao implements StudentDao {
-
-    private static final String PATH_NAME = "/Users/enrico_talone/IdeaProjects/toGetJob/src/main/resources/org/example/togetjob/files_json/Student.json";
-    //private static final String PATH_NAME = "files_json/Student.json" ;
-    private final ObjectMapper objectMapper = new ObjectMapper();
+    private static final String PATH_NAME = "src/main/resources/files_txt/Student.txt";
 
     @Override
     public boolean saveStudent(Student student) {
-        try {
-            List<Student> students = getAllStudents();
-
-            if (students.stream().anyMatch(s -> s.getUsername().equals(student.getUsername()))) {
-                Printer.print("The student: " + student.getUsername() + " already exists.");
-                return false;
-            }
-
-            students.add(student);
-            objectMapper.writeValue(new File(PATH_NAME), students);
-            Printer.print("The student: " + student.getUsername() + " has been successfully saved in the File System");
-            return true;
-
-        } catch (IOException e) {
-            Printer.print("The student: " + student.getUsername() + " cannot be saved in the File System");
-            Printer.print(e.getMessage());
-            return false;
-        }
+        List<Student> students = getAllStudents();
+        students.add(student);
+        return writeStudentsToFile(students);
     }
-
 
     @Override
     public Optional<Student> getStudent(String username) {
-        return getAllStudents().stream().filter(student -> student.getUsername().equals(username)).findFirst();
+        return getAllStudents().stream()
+                .filter(student -> student.getUsername().equals(username))
+                .findFirst();
     }
-
 
     @Override
     public List<Student> getAllStudents() {
-        try {
-            List<Student> students = new ArrayList<>(objectMapper.readValue(new File(PATH_NAME), new TypeReference<List<Student>>() {}));
-
-            if (students.isEmpty()) {
-                return new ArrayList<>();
+        List<Student> students = new ArrayList<>();
+        try (BufferedReader reader = new BufferedReader(new FileReader(PATH_NAME))) {
+            String line;
+            while ((line = reader.readLine()) != null) {
+                // Dividi la riga in base alla virgola
+                String[] data = line.split(",");
+                // Verifica che la riga contenga i dati corretti
+                if (data.length >= 8) {
+                    Role role = Role.valueOf(data[5].trim()); // Rimuovi gli spazi extra
+                    if (role == Role.STUDENT) {
+                        Student student = new Student(data[0].trim(), data[1].trim(), data[2].trim(),
+                                data[3].trim(), data[4].trim(), role);
+                        student.setDateOfBirth(LocalDate.parse(data[6].trim())); // Aggiungi la data di nascita
+                        student.setPhoneNumber(data[7].trim()); // Aggiungi il numero di telefono
+                        students.add(student);
+                    }
+                }
             }
-
-            return students;
-
         } catch (IOException e) {
-            Printer.print("Students cannot be retrieved from File System");
-            Printer.print(e.getMessage());
-            return new ArrayList<>();
+            Printer.print("Errore durante la lettura del file: " + e.getMessage());
+        } catch (IllegalArgumentException e) {
+            Printer.print("Errore nel parsing del ruolo: " + e.getMessage());
         }
+        return students;
     }
 
     @Override
     public boolean updateStudent(Student student) {
-        try {
-            List<Student> students = getAllStudents();
-            boolean found = false;
-
-            for (int i = 0; i < students.size(); i++) {
-                if (students.get(i).getUsername().equals(student.getUsername())) {
-                    students.set(i, student); // Update student data
-                    found = true;
-                    break;
-                }
+        List<Student> students = getAllStudents();
+        for (int i = 0; i < students.size(); i++) {
+            if (students.get(i).getUsername().equals(student.getUsername())) {
+                students.set(i, student);
+                return writeStudentsToFile(students);
             }
-
-            if (!found) {
-                Printer.print("The student: " + student.getUsername() + " doesn't exist.");
-                return false;
-            }
-
-            objectMapper.writeValue(new File(PATH_NAME), students);
-            Printer.print("The student: " + student.getUsername() + " has been successfully updated.");
-            return true;
-
-        } catch (IOException e) {
-            Printer.print("An unexpected error occurred: " + e.getMessage());
-            return false;
-        }
+        }
+        return false;
     }
-
 
     @Override
     public boolean deleteStudent(String username) {
-        try {
-            List<Student> students = getAllStudents();
-            boolean removed = students.removeIf(student -> student.getUsername().equals(username));
-            if (!removed) {
-                Printer.print("The student: " + username + " doesn't exist.");
-                return false;
-            }
-
-            objectMapper.writeValue(new File(PATH_NAME), students);
-            Printer.print("The student: " + username + " has been successfully deleted.");
-            return true;
-
-        } catch (IOException e) {
-            Printer.print("The student: " + username + " cannot be deleted");
-            Printer.print(e.getMessage());
-            return false;
-        }
+        List<Student> students = getAllStudents();
+        boolean removed = students.removeIf(student -> student.getUsername().equals(username));
+        return removed && writeStudentsToFile(students);
     }
-
 
     @Override
     public boolean studentExists(String username) {
-        try {
-            List<Student> students = objectMapper.readValue(new File(PATH_NAME), new TypeReference<List<Student>>() {});
-
-            if (students.isEmpty()) {
-                Printer.print("There aren't any students in the File System");
-                return false;
-            }
+        return getStudent(username).isPresent();
+    }
 
-            boolean presence = students.stream().anyMatch(student -> student.getUsername().equals(username));
-
-            if (presence) {
-                Printer.print("The student: " + username + " exists");
-                return true;
-            }
-
-            Printer.print("The student: " + username + " doesn't exist");
-            return false;
-
+    private boolean writeStudentsToFile(List<Student> students) {
+        try (BufferedWriter writer = new BufferedWriter(new FileWriter(PATH_NAME))) {
+            for (Student student : students) {
+                // Scrivi i dati separati da virgola
+                writer.write(student.getName() + "," + student.getSurname() + "," + student.getUsername() + "," +
+                        student.getEmailAddress() + "," + student.getPassword() + "," + student.getRole() +
+                        "," + student.getDateOfBirth() + "," + student.getPhoneNumber());
+                writer.newLine(); // Aggiungi un a capo dopo ogni studente
+            }
+            return true;
         } catch (IOException e) {
-            Printer.print("The student: " + username + " cannot be searched");
-            Printer.print(e.getMessage());
+            Printer.print("Errore durante la scrittura del file: " + e.getMessage());
             return false;
         }
     }
-
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"Printer\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/Main.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/connection/DatabaseConfig.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/connection/DatabaseConfig.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemUserDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemUserDao.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Enum\" />\n        <option value=\"FxmlFile\" />\n        <option value=\"Interface\" />\n        <option value=\"Exception\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"RESET_MODE\" value=\"HARD\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;GaiaMeola&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/GaiaMeola/toGetJob.git&quot;,\n    &quot;accountId&quot;: &quot;10ff2728-a55b-45dc-b4f1-a35abedc973c&quot;\n  }\n}</component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\n  <component name=\"ProjectId\" id=\"2nypPqqlu30o2C6FKHNbd1EkQVy\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"Application.HelloApplication.executor\": \"Run\",\n    \"Application.Main.executor\": \"Run\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"RunOnceActivity.git.unshallow\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"SONARLINT_PRECOMMIT_ANALYSIS\": \"true\",\n    \"git-widget-placeholder\": \"master\",\n    \"kotlin-language-version-configured\": \"true\",\n    \"last_opened_file_path\": \"/Users/enrico_talone/IdeaProjects/toGetJob\",\n    \"project.structure.last.edited\": \"Libraries\",\n    \"project.structure.proportion\": \"0.15\",\n    \"project.structure.side.proportion\": \"0.2\",\n    \"settings.editor.selected.configurable\": \"preferences.JavaFX\"\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources/org/example/togetjob\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources\" />\n      <recent name=\"$PROJECT_DIR$/src/main/resources/Configurations\" />\n      <recent name=\"$PROJECT_DIR$/target/classes/org/Configurations\" />\n    </key>\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\n      <recent name=\"org.example.togetjob\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"0f1658da-9e89-4eda-8f6e-64bb18bca7ca\" name=\"Changes\" comment=\"\" />\n      <created>1729955148511</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1729955148511</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1729955369659</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1729955369659</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663831106</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663831106</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Primo Commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1735663851839</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1735663851839</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883418179</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883418179</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883426699</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883426699</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Secondo Commit: bozza Abstract Factory\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1737883439672</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1737883439672</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086967897</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086967897</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Terzo Commit: Aggiunta Entity\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738086982811</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738086982811</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Terzo Commit: Prova Database\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738142978544</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738142978544</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Quarto Commit: Connection prova\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152156784</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152156784</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Quarto Commit: Connection riuscita\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738152567157</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738152567157</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Quinto Commit: Fine Db\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738157742126</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738157742126</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Sesto Commit: Pattern State CLI prova\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738179850232</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738179850233</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"Settimo Commit: prova Caso d'uso Registrazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738233820826</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738233820826</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"Settimo Commit: prova Caso d'uso Registrazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738234210460</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738234210460</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"Settimo Commit: prova Caso d'uso Registrazione\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738234584655</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738234584655</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"Settimo Commit: Caso d'uso Registrazione e Login iniziati\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738255911165</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738255911165</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"Settimo Commit: Caso d'uso Registrazione e Login completati\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738320033356</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738320033356</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"Settimo Commit: Aggiunta di HomePageStudent, HomePageRecruiter in modalità cli\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738323917280</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738323917280</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"Settimo Commit: Inizio del caso d'uso Send A Job Application\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738534877519</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738534877519</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\"Settimo Commit: Inizio del caso d'uso Send A Job Application\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738591871116</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738591871116</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"Settimo Commit: Prima parte del caso d'uso funzionante\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738602095720</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738602095720</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"Settimo Commit: Prima parte del caso d'uso funzionante\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738602224321</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738602224321</updated>\n    </task>\n    <task id=\"LOCAL-00024\" summary=\"Settimo Commit: Prima parte del caso d'uso funzionante\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738602353802</created>\n      <option name=\"number\" value=\"00024\" />\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738602353802</updated>\n    </task>\n    <task id=\"LOCAL-00025\" summary=\"Printer\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738675881595</created>\n      <option name=\"number\" value=\"00025\" />\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738675881595</updated>\n    </task>\n    <task id=\"LOCAL-00026\" summary=\"Printer\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1738677305760</created>\n      <option name=\"number\" value=\"00026\" />\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1738677305760</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"27\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Primo Commit\" />\n    <MESSAGE value=\"Secondo Commit: bozza Abstract Factory\" />\n    <MESSAGE value=\"Secondo Commit: Abstract Factory + Singleton completo\" />\n    <MESSAGE value=\"Terzo Commit: Aggiunta Entity\" />\n    <MESSAGE value=\"Terzo Commit: Prova Database\" />\n    <MESSAGE value=\"Quarto Commit: Connection prova\" />\n    <MESSAGE value=\"Quarto Commit: Connection riuscita\" />\n    <MESSAGE value=\"Quinto Commit: Fine Db\" />\n    <MESSAGE value=\"Sesto Commit: Pattern State CLI prova\" />\n    <MESSAGE value=\"Settimo Commit: prova Caso d'uso Registrazione\" />\n    <MESSAGE value=\"Settimo Commit: Caso d'uso Registrazione e Login iniziati\" />\n    <MESSAGE value=\"Settimo Commit: Caso d'uso Registrazione e Login completati\" />\n    <MESSAGE value=\"Settimo Commit: Aggiunta di HomePageStudent, HomePageRecruiter in modalità cli\" />\n    <MESSAGE value=\"Settimo Commit: Inizio del caso d'uso Send A Job Application\" />\n    <MESSAGE value=\"Settimo Commit: Prima parte del caso d'uso funzionante\" />\n    <MESSAGE value=\"Printer\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Printer\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\n          <option name=\"timeStamp\" value=\"14\" />\n        </breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/main/java/org/example/togetjob/view/cli/concretestate/RegisterState.java</url>\n          <line>63</line>\n          <option name=\"timeStamp\" value=\"25\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/main/java/org/example/togetjob/view/cli/concretestate/RegisterState.java</url>\n          <line>68</line>\n          <option name=\"timeStamp\" value=\"26\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 5577470cdb18d2778ecee0571e4d9067bf7e7df4)
+++ b/.idea/workspace.xml	(date 1738749618726)
@@ -5,10 +5,17 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="0f1658da-9e89-4eda-8f6e-64bb18bca7ca" name="Changes" comment="Printer">
+      <change afterPath="$PROJECT_DIR$/src/main/resources/files_txt/Student.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/Main.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/connection/DatabaseConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/connection/DatabaseConfig.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemStudentDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemStudentDao.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemUserDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/dao/concreteobjects/FileSystemUserDao.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/entity/Student.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/entity/Student.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/entity/User.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/togetjob/model/entity/User.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/dao.config.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/dao.config.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/files_json/JobAnnouncement.json" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/files_txt/User.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/files_json/Recruiter.json" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/files_json/Student.json" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/files_json/User.json" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -58,23 +65,23 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Application.HelloApplication.executor": "Run",
-    "Application.Main.executor": "Run",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "RunOnceActivity.git.unshallow": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "SONARLINT_PRECOMMIT_ANALYSIS": "true",
-    "git-widget-placeholder": "master",
-    "kotlin-language-version-configured": "true",
-    "last_opened_file_path": "/Users/enrico_talone/IdeaProjects/toGetJob",
-    "project.structure.last.edited": "Libraries",
-    "project.structure.proportion": "0.15",
-    "project.structure.side.proportion": "0.2",
-    "settings.editor.selected.configurable": "preferences.JavaFX"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,
+    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;SONARLINT_PRECOMMIT_ANALYSIS&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;/Users/enrico_talone/IdeaProjects/toGetJob&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="$PROJECT_DIR$/src/main/resources/org/example/togetjob" />
@@ -305,7 +312,15 @@
       <option name="project" value="LOCAL" />
       <updated>1738677305760</updated>
     </task>
-    <option name="localTasksCounter" value="27" />
+    <task id="LOCAL-00027" summary="Printer">
+      <option name="closed" value="true" />
+      <created>1738681669134</created>
+      <option name="number" value="00027" />
+      <option name="presentableId" value="LOCAL-00027" />
+      <option name="project" value="LOCAL" />
+      <updated>1738681669134</updated>
+    </task>
+    <option name="localTasksCounter" value="28" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
Index: src/main/resources/dao.config.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#le configurazioni possono essere: in memory, jdbc, json\ndao.type = in memory
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/main/resources/dao.config.properties b/src/main/resources/dao.config.properties
--- a/src/main/resources/dao.config.properties	(revision 5577470cdb18d2778ecee0571e4d9067bf7e7df4)
+++ b/src/main/resources/dao.config.properties	(date 1738744402508)
@@ -1,2 +1,2 @@
 #le configurazioni possono essere: in memory, jdbc, json
-dao.type = in memory
\ No newline at end of file
+dao.type = json
\ No newline at end of file
Index: src/main/resources/files_txt/Student.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/files_txt/Student.txt b/src/main/resources/files_txt/Student.txt
new file mode 100644
--- /dev/null	(date 1738750102150)
+++ b/src/main/resources/files_txt/Student.txt	(date 1738750102150)
@@ -0,0 +1,4 @@
+user222,surname,name,email@gmail.com,pssw,STUDENT,2000-11-11,213141341
+name,aaa,mar22,surname,email@gmail.com,STUDENT,2001-11-22,12578315
+username,email,name,password,surname,STUDENT,2000-11-11,238963284
+name,surname,username,email,password,STUDENT,2000-10-11,3928391627
